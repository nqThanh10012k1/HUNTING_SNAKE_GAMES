
HUNTING_SNAKE_GAMES.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000552c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001e8  080056d0  080056d0  000156d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080058b8  080058b8  0002008c  2**0
                  CONTENTS
  4 .ARM          00000000  080058b8  080058b8  0002008c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080058b8  080058b8  0002008c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080058b8  080058b8  000158b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080058bc  080058bc  000158bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000008c  20000000  080058c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000a8  2000008c  0800594c  0002008c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000134  0800594c  00020134  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005f10  00000000  00000000  000200bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001480  00000000  00000000  00025fcc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000738  00000000  00000000  00027450  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000680  00000000  00000000  00027b88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000fd21  00000000  00000000  00028208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000060ca  00000000  00000000  00037f29  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004d947  00000000  00000000  0003dff3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000a3  00000000  00000000  0008b93a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002d50  00000000  00000000  0008b9e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000008c 	.word	0x2000008c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080056b4 	.word	0x080056b4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000090 	.word	0x20000090
 80001dc:	080056b4 	.word	0x080056b4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2f>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b60:	bf24      	itt	cs
 8000b62:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b66:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b6a:	d90d      	bls.n	8000b88 <__aeabi_d2f+0x30>
 8000b6c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b70:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b74:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b78:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b7c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b80:	bf08      	it	eq
 8000b82:	f020 0001 	biceq.w	r0, r0, #1
 8000b86:	4770      	bx	lr
 8000b88:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b8c:	d121      	bne.n	8000bd2 <__aeabi_d2f+0x7a>
 8000b8e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b92:	bfbc      	itt	lt
 8000b94:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	4770      	bxlt	lr
 8000b9a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b9e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba2:	f1c2 0218 	rsb	r2, r2, #24
 8000ba6:	f1c2 0c20 	rsb	ip, r2, #32
 8000baa:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bae:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb2:	bf18      	it	ne
 8000bb4:	f040 0001 	orrne.w	r0, r0, #1
 8000bb8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bbc:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc4:	ea40 000c 	orr.w	r0, r0, ip
 8000bc8:	fa23 f302 	lsr.w	r3, r3, r2
 8000bcc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd0:	e7cc      	b.n	8000b6c <__aeabi_d2f+0x14>
 8000bd2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bd6:	d107      	bne.n	8000be8 <__aeabi_d2f+0x90>
 8000bd8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000bdc:	bf1e      	ittt	ne
 8000bde:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000be2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000be6:	4770      	bxne	lr
 8000be8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000bec:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000bf0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000bf8:	b480      	push	{r7}
 8000bfa:	b083      	sub	sp, #12
 8000bfc:	af00      	add	r7, sp, #0
 8000bfe:	4603      	mov	r3, r0
 8000c00:	6039      	str	r1, [r7, #0]
 8000c02:	71fb      	strb	r3, [r7, #7]
  if((int32_t)IRQn < 0) {
 8000c04:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	da0b      	bge.n	8000c24 <NVIC_SetPriority+0x2c>
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000c0c:	683b      	ldr	r3, [r7, #0]
 8000c0e:	b2da      	uxtb	r2, r3
 8000c10:	490c      	ldr	r1, [pc, #48]	; (8000c44 <NVIC_SetPriority+0x4c>)
 8000c12:	79fb      	ldrb	r3, [r7, #7]
 8000c14:	f003 030f 	and.w	r3, r3, #15
 8000c18:	3b04      	subs	r3, #4
 8000c1a:	0112      	lsls	r2, r2, #4
 8000c1c:	b2d2      	uxtb	r2, r2
 8000c1e:	440b      	add	r3, r1
 8000c20:	761a      	strb	r2, [r3, #24]
  }
  else {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000c22:	e009      	b.n	8000c38 <NVIC_SetPriority+0x40>
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000c24:	683b      	ldr	r3, [r7, #0]
 8000c26:	b2da      	uxtb	r2, r3
 8000c28:	4907      	ldr	r1, [pc, #28]	; (8000c48 <NVIC_SetPriority+0x50>)
 8000c2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c2e:	0112      	lsls	r2, r2, #4
 8000c30:	b2d2      	uxtb	r2, r2
 8000c32:	440b      	add	r3, r1
 8000c34:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8000c38:	bf00      	nop
 8000c3a:	370c      	adds	r7, #12
 8000c3c:	46bd      	mov	sp, r7
 8000c3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c42:	4770      	bx	lr
 8000c44:	e000ed00 	.word	0xe000ed00
 8000c48:	e000e100 	.word	0xe000e100

08000c4c <SysTick_Config>:
    function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000c4c:	b580      	push	{r7, lr}
 8000c4e:	b082      	sub	sp, #8
 8000c50:	af00      	add	r7, sp, #0
 8000c52:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
 8000c54:	687b      	ldr	r3, [r7, #4]
 8000c56:	3b01      	subs	r3, #1
 8000c58:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000c5c:	d301      	bcc.n	8000c62 <SysTick_Config+0x16>
 8000c5e:	2301      	movs	r3, #1
 8000c60:	e00f      	b.n	8000c82 <SysTick_Config+0x36>

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000c62:	4a0a      	ldr	r2, [pc, #40]	; (8000c8c <SysTick_Config+0x40>)
 8000c64:	687b      	ldr	r3, [r7, #4]
 8000c66:	3b01      	subs	r3, #1
 8000c68:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000c6a:	210f      	movs	r1, #15
 8000c6c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c70:	f7ff ffc2 	bl	8000bf8 <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000c74:	4b05      	ldr	r3, [pc, #20]	; (8000c8c <SysTick_Config+0x40>)
 8000c76:	2200      	movs	r2, #0
 8000c78:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000c7a:	4b04      	ldr	r3, [pc, #16]	; (8000c8c <SysTick_Config+0x40>)
 8000c7c:	2207      	movs	r2, #7
 8000c7e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000c80:	2300      	movs	r3, #0
}
 8000c82:	4618      	mov	r0, r3
 8000c84:	3708      	adds	r7, #8
 8000c86:	46bd      	mov	sp, r7
 8000c88:	bd80      	pop	{r7, pc}
 8000c8a:	bf00      	nop
 8000c8c:	e000e010 	.word	0xe000e010

08000c90 <main>:
uint8_t kiem_tra_trang_thai_ran();
void thong_bao_game_over();
void xu_ly_chuong_trinh();

int main()
{
 8000c90:	b580      	push	{r7, lr}
 8000c92:	af00      	add	r7, sp, #0
	SystemCoreClockUpdate();
 8000c94:	f001 fc84 	bl	80025a0 <SystemCoreClockUpdate>
	SysTick_Init();
 8000c98:	f000 f80e 	bl	8000cb8 <SysTick_Init>
	Button_Init();
 8000c9c:	f000 f862 	bl	8000d64 <Button_Init>
	I2C1_Init();
 8000ca0:	f000 f8ba 	bl	8000e18 <I2C1_Init>
	MPU6050_Init();
 8000ca4:	f000 f9de 	bl	8001064 <MPU6050_Init>
	SPI2_Init();
 8000ca8:	f000 fa92 	bl	80011d0 <SPI2_Init>
	MAX7219_Init();
 8000cac:	f000 fb1c 	bl	80012e8 <MAX7219_Init>

	while (1)
	{
		xu_ly_chuong_trinh();
 8000cb0:	f001 fa4e 	bl	8002150 <xu_ly_chuong_trinh>
 8000cb4:	e7fc      	b.n	8000cb0 <main+0x20>
	...

08000cb8 <SysTick_Init>:
	}
}

/********* System Tick ***************************************************************************/
void SysTick_Init()
{
 8000cb8:	b580      	push	{r7, lr}
 8000cba:	af00      	add	r7, sp, #0
	SysTick_Config(SystemCoreClock / 1000);
 8000cbc:	4b05      	ldr	r3, [pc, #20]	; (8000cd4 <SysTick_Init+0x1c>)
 8000cbe:	681b      	ldr	r3, [r3, #0]
 8000cc0:	4a05      	ldr	r2, [pc, #20]	; (8000cd8 <SysTick_Init+0x20>)
 8000cc2:	fba2 2303 	umull	r2, r3, r2, r3
 8000cc6:	099b      	lsrs	r3, r3, #6
 8000cc8:	4618      	mov	r0, r3
 8000cca:	f7ff ffbf 	bl	8000c4c <SysTick_Config>
}
 8000cce:	bf00      	nop
 8000cd0:	bd80      	pop	{r7, pc}
 8000cd2:	bf00      	nop
 8000cd4:	20000004 	.word	0x20000004
 8000cd8:	10624dd3 	.word	0x10624dd3

08000cdc <SysTick_Handler>:

void SysTick_Handler()
{
 8000cdc:	b480      	push	{r7}
 8000cde:	af00      	add	r7, sp, #0
	msTick++;
 8000ce0:	4b04      	ldr	r3, [pc, #16]	; (8000cf4 <SysTick_Handler+0x18>)
 8000ce2:	681b      	ldr	r3, [r3, #0]
 8000ce4:	3301      	adds	r3, #1
 8000ce6:	4a03      	ldr	r2, [pc, #12]	; (8000cf4 <SysTick_Handler+0x18>)
 8000ce8:	6013      	str	r3, [r2, #0]
}
 8000cea:	bf00      	nop
 8000cec:	46bd      	mov	sp, r7
 8000cee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cf2:	4770      	bx	lr
 8000cf4:	200000a8 	.word	0x200000a8

08000cf8 <SysTick_getTick>:

uint32_t SysTick_getTick()
{
 8000cf8:	b480      	push	{r7}
 8000cfa:	af00      	add	r7, sp, #0
	return msTick;
 8000cfc:	4b03      	ldr	r3, [pc, #12]	; (8000d0c <SysTick_getTick+0x14>)
 8000cfe:	681b      	ldr	r3, [r3, #0]
}
 8000d00:	4618      	mov	r0, r3
 8000d02:	46bd      	mov	sp, r7
 8000d04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d08:	4770      	bx	lr
 8000d0a:	bf00      	nop
 8000d0c:	200000a8 	.word	0x200000a8

08000d10 <Delay_ms>:

void Delay_ms(uint32_t ms)
{
 8000d10:	b580      	push	{r7, lr}
 8000d12:	b086      	sub	sp, #24
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	6078      	str	r0, [r7, #4]
	uint32_t to, t1, t = 0;
 8000d18:	2300      	movs	r3, #0
 8000d1a:	613b      	str	r3, [r7, #16]

	to = SysTick_getTick();
 8000d1c:	f7ff ffec 	bl	8000cf8 <SysTick_getTick>
 8000d20:	6178      	str	r0, [r7, #20]

	do
	{
		t1 = SysTick_getTick();
 8000d22:	f7ff ffe9 	bl	8000cf8 <SysTick_getTick>
 8000d26:	60f8      	str	r0, [r7, #12]

		if (t1 >= to)
 8000d28:	68fa      	ldr	r2, [r7, #12]
 8000d2a:	697b      	ldr	r3, [r7, #20]
 8000d2c:	429a      	cmp	r2, r3
 8000d2e:	d306      	bcc.n	8000d3e <Delay_ms+0x2e>
		{
			t += (t1 - to);
 8000d30:	68fa      	ldr	r2, [r7, #12]
 8000d32:	697b      	ldr	r3, [r7, #20]
 8000d34:	1ad3      	subs	r3, r2, r3
 8000d36:	693a      	ldr	r2, [r7, #16]
 8000d38:	4413      	add	r3, r2
 8000d3a:	613b      	str	r3, [r7, #16]
 8000d3c:	e006      	b.n	8000d4c <Delay_ms+0x3c>
		}
		else
		{
			t += (0xFFFFFFFFu + t1 - to);
 8000d3e:	68fa      	ldr	r2, [r7, #12]
 8000d40:	697b      	ldr	r3, [r7, #20]
 8000d42:	1ad2      	subs	r2, r2, r3
 8000d44:	693b      	ldr	r3, [r7, #16]
 8000d46:	4413      	add	r3, r2
 8000d48:	3b01      	subs	r3, #1
 8000d4a:	613b      	str	r3, [r7, #16]
		}

		to = t1;
 8000d4c:	68fb      	ldr	r3, [r7, #12]
 8000d4e:	617b      	str	r3, [r7, #20]
	} while (t < ms);
 8000d50:	693a      	ldr	r2, [r7, #16]
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	429a      	cmp	r2, r3
 8000d56:	d3e4      	bcc.n	8000d22 <Delay_ms+0x12>
}
 8000d58:	bf00      	nop
 8000d5a:	bf00      	nop
 8000d5c:	3718      	adds	r7, #24
 8000d5e:	46bd      	mov	sp, r7
 8000d60:	bd80      	pop	{r7, pc}
	...

08000d64 <Button_Init>:

/********* Button Pin C13 ***************************************************************************/

void Button_Init()
{
 8000d64:	b580      	push	{r7, lr}
 8000d66:	b086      	sub	sp, #24
 8000d68:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	EXTI_InitTypeDef EXTI_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 8000d6a:	2101      	movs	r1, #1
 8000d6c:	2004      	movs	r0, #4
 8000d6e:	f002 f94f 	bl	8003010 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000d72:	2300      	movs	r3, #0
 8000d74:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000d76:	2301      	movs	r3, #1
 8000d78:	75fb      	strb	r3, [r7, #23]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000d7a:	2302      	movs	r3, #2
 8000d7c:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
 8000d7e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000d82:	613b      	str	r3, [r7, #16]
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 8000d84:	f107 0310 	add.w	r3, r7, #16
 8000d88:	4619      	mov	r1, r3
 8000d8a:	4815      	ldr	r0, [pc, #84]	; (8000de0 <Button_Init+0x7c>)
 8000d8c:	f001 fdda 	bl	8002944 <GPIO_Init>

	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 8000d90:	2101      	movs	r1, #1
 8000d92:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8000d96:	f002 f97b 	bl	8003090 <RCC_APB2PeriphClockCmd>
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOC, EXTI_PinSource13);
 8000d9a:	210d      	movs	r1, #13
 8000d9c:	2002      	movs	r0, #2
 8000d9e:	f002 fa27 	bl	80031f0 <SYSCFG_EXTILineConfig>

	EXTI_InitStructure.EXTI_Line = EXTI_Line13;
 8000da2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000da6:	60bb      	str	r3, [r7, #8]
	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 8000da8:	2300      	movs	r3, #0
 8000daa:	733b      	strb	r3, [r7, #12]
	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
 8000dac:	230c      	movs	r3, #12
 8000dae:	737b      	strb	r3, [r7, #13]
	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 8000db0:	2301      	movs	r3, #1
 8000db2:	73bb      	strb	r3, [r7, #14]
	EXTI_Init(&EXTI_InitStructure);
 8000db4:	f107 0308 	add.w	r3, r7, #8
 8000db8:	4618      	mov	r0, r3
 8000dba:	f001 fd27 	bl	800280c <EXTI_Init>

	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8000dbe:	2300      	movs	r3, #0
 8000dc0:	717b      	strb	r3, [r7, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8000dc2:	2300      	movs	r3, #0
 8000dc4:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8000dc6:	2301      	movs	r3, #1
 8000dc8:	71fb      	strb	r3, [r7, #7]
	NVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn;
 8000dca:	2328      	movs	r3, #40	; 0x28
 8000dcc:	713b      	strb	r3, [r7, #4]
	NVIC_Init(&NVIC_InitStructure);
 8000dce:	1d3b      	adds	r3, r7, #4
 8000dd0:	4618      	mov	r0, r3
 8000dd2:	f001 fcb9 	bl	8002748 <NVIC_Init>
}
 8000dd6:	bf00      	nop
 8000dd8:	3718      	adds	r7, #24
 8000dda:	46bd      	mov	sp, r7
 8000ddc:	bd80      	pop	{r7, pc}
 8000dde:	bf00      	nop
 8000de0:	40020800 	.word	0x40020800

08000de4 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler()
{
 8000de4:	b580      	push	{r7, lr}
 8000de6:	af00      	add	r7, sp, #0
	if (EXTI_GetFlagStatus(EXTI_Line13) == 1)
 8000de8:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8000dec:	f001 fd80 	bl	80028f0 <EXTI_GetFlagStatus>
 8000df0:	4603      	mov	r3, r0
 8000df2:	2b01      	cmp	r3, #1
 8000df4:	d106      	bne.n	8000e04 <EXTI15_10_IRQHandler+0x20>
	{
		if (game_status == 0)
 8000df6:	4b06      	ldr	r3, [pc, #24]	; (8000e10 <EXTI15_10_IRQHandler+0x2c>)
 8000df8:	781b      	ldrb	r3, [r3, #0]
 8000dfa:	2b00      	cmp	r3, #0
 8000dfc:	d102      	bne.n	8000e04 <EXTI15_10_IRQHandler+0x20>
		{
			button_status = 1;
 8000dfe:	4b05      	ldr	r3, [pc, #20]	; (8000e14 <EXTI15_10_IRQHandler+0x30>)
 8000e00:	2201      	movs	r2, #1
 8000e02:	701a      	strb	r2, [r3, #0]
		}
	}

	EXTI_ClearITPendingBit(EXTI_Line13);
 8000e04:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8000e08:	f001 fd8c 	bl	8002924 <EXTI_ClearITPendingBit>
}
 8000e0c:	bf00      	nop
 8000e0e:	bd80      	pop	{r7, pc}
 8000e10:	200000f8 	.word	0x200000f8
 8000e14:	200000f9 	.word	0x200000f9

08000e18 <I2C1_Init>:

/********* I2C & MPU6050 ***************************************************************************/
void I2C1_Init()
{
 8000e18:	b580      	push	{r7, lr}
 8000e1a:	b086      	sub	sp, #24
 8000e1c:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef	GPIO_InitStructure;
	I2C_InitTypeDef		I2C_InitStructure;

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 8000e1e:	2101      	movs	r1, #1
 8000e20:	2002      	movs	r0, #2
 8000e22:	f002 f8f5 	bl	8003010 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 8000e26:	2302      	movs	r3, #2
 8000e28:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
 8000e2a:	2301      	movs	r3, #1
 8000e2c:	75bb      	strb	r3, [r7, #22]
	GPIO_InitStructure.GPIO_OType = GPIO_PuPd_UP;
 8000e2e:	2301      	movs	r3, #1
 8000e30:	75bb      	strb	r3, [r7, #22]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000e32:	2302      	movs	r3, #2
 8000e34:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9;
 8000e36:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000e3a:	613b      	str	r3, [r7, #16]
	GPIO_PinAFConfig(GPIOB, GPIO_PinSource8, GPIO_AF_I2C1);
 8000e3c:	2204      	movs	r2, #4
 8000e3e:	2108      	movs	r1, #8
 8000e40:	4816      	ldr	r0, [pc, #88]	; (8000e9c <I2C1_Init+0x84>)
 8000e42:	f001 fe2c 	bl	8002a9e <GPIO_PinAFConfig>
	GPIO_PinAFConfig(GPIOB, GPIO_PinSource9, GPIO_AF_I2C1);
 8000e46:	2204      	movs	r2, #4
 8000e48:	2109      	movs	r1, #9
 8000e4a:	4814      	ldr	r0, [pc, #80]	; (8000e9c <I2C1_Init+0x84>)
 8000e4c:	f001 fe27 	bl	8002a9e <GPIO_PinAFConfig>
	GPIO_Init(GPIOB, &GPIO_InitStructure);
 8000e50:	f107 0310 	add.w	r3, r7, #16
 8000e54:	4619      	mov	r1, r3
 8000e56:	4811      	ldr	r0, [pc, #68]	; (8000e9c <I2C1_Init+0x84>)
 8000e58:	f001 fd74 	bl	8002944 <GPIO_Init>

	RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C1, ENABLE);
 8000e5c:	2101      	movs	r1, #1
 8000e5e:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8000e62:	f002 f8f5 	bl	8003050 <RCC_APB1PeriphClockCmd>
	I2C_InitStructure.I2C_Mode = I2C_Mode_I2C;
 8000e66:	2300      	movs	r3, #0
 8000e68:	80bb      	strh	r3, [r7, #4]
	I2C_InitStructure.I2C_ClockSpeed = 400000;
 8000e6a:	4b0d      	ldr	r3, [pc, #52]	; (8000ea0 <I2C1_Init+0x88>)
 8000e6c:	603b      	str	r3, [r7, #0]
	I2C_InitStructure.I2C_DutyCycle = I2C_DutyCycle_2;
 8000e6e:	f64b 73ff 	movw	r3, #49151	; 0xbfff
 8000e72:	80fb      	strh	r3, [r7, #6]
	I2C_InitStructure.I2C_Ack = I2C_Ack_Disable;
 8000e74:	2300      	movs	r3, #0
 8000e76:	817b      	strh	r3, [r7, #10]
	I2C_InitStructure.I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 8000e78:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8000e7c:	81bb      	strh	r3, [r7, #12]
	I2C_InitStructure.I2C_OwnAddress1 = 0x00;
 8000e7e:	2300      	movs	r3, #0
 8000e80:	813b      	strh	r3, [r7, #8]
	I2C_Init(I2C1, &I2C_InitStructure);
 8000e82:	463b      	mov	r3, r7
 8000e84:	4619      	mov	r1, r3
 8000e86:	4807      	ldr	r0, [pc, #28]	; (8000ea4 <I2C1_Init+0x8c>)
 8000e88:	f001 fe52 	bl	8002b30 <I2C_Init>
	I2C_Cmd(I2C1, ENABLE);
 8000e8c:	2101      	movs	r1, #1
 8000e8e:	4805      	ldr	r0, [pc, #20]	; (8000ea4 <I2C1_Init+0x8c>)
 8000e90:	f001 ff10 	bl	8002cb4 <I2C_Cmd>
}
 8000e94:	bf00      	nop
 8000e96:	3718      	adds	r7, #24
 8000e98:	46bd      	mov	sp, r7
 8000e9a:	bd80      	pop	{r7, pc}
 8000e9c:	40020400 	.word	0x40020400
 8000ea0:	00061a80 	.word	0x00061a80
 8000ea4:	40005400 	.word	0x40005400

08000ea8 <I2Cx_SendData>:

void I2Cx_SendData(I2C_TypeDef * I2Cx, uint8_t SlaveAddress, uint8_t RegisterAddress, uint8_t data)
{
 8000ea8:	b580      	push	{r7, lr}
 8000eaa:	b082      	sub	sp, #8
 8000eac:	af00      	add	r7, sp, #0
 8000eae:	6078      	str	r0, [r7, #4]
 8000eb0:	4608      	mov	r0, r1
 8000eb2:	4611      	mov	r1, r2
 8000eb4:	461a      	mov	r2, r3
 8000eb6:	4603      	mov	r3, r0
 8000eb8:	70fb      	strb	r3, [r7, #3]
 8000eba:	460b      	mov	r3, r1
 8000ebc:	70bb      	strb	r3, [r7, #2]
 8000ebe:	4613      	mov	r3, r2
 8000ec0:	707b      	strb	r3, [r7, #1]
	// I2C start
	while (I2C_GetFlagStatus(I2Cx, I2C_FLAG_BUSY));
 8000ec2:	bf00      	nop
 8000ec4:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8000ec8:	6878      	ldr	r0, [r7, #4]
 8000eca:	f001 ffbf 	bl	8002e4c <I2C_GetFlagStatus>
 8000ece:	4603      	mov	r3, r0
 8000ed0:	2b00      	cmp	r3, #0
 8000ed2:	d1f7      	bne.n	8000ec4 <I2Cx_SendData+0x1c>
	I2C_GenerateSTART(I2Cx, ENABLE);
 8000ed4:	2101      	movs	r1, #1
 8000ed6:	6878      	ldr	r0, [r7, #4]
 8000ed8:	f001 ff0c 	bl	8002cf4 <I2C_GenerateSTART>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_MODE_SELECT));
 8000edc:	bf00      	nop
 8000ede:	491c      	ldr	r1, [pc, #112]	; (8000f50 <I2Cx_SendData+0xa8>)
 8000ee0:	6878      	ldr	r0, [r7, #4]
 8000ee2:	f001 ff83 	bl	8002dec <I2C_CheckEvent>
 8000ee6:	4603      	mov	r3, r0
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d0f8      	beq.n	8000ede <I2Cx_SendData+0x36>
	// I2C address phase
	I2C_Send7bitAddress(I2Cx, SlaveAddress << 1, I2C_Direction_Transmitter);
 8000eec:	78fb      	ldrb	r3, [r7, #3]
 8000eee:	005b      	lsls	r3, r3, #1
 8000ef0:	b2db      	uxtb	r3, r3
 8000ef2:	2200      	movs	r2, #0
 8000ef4:	4619      	mov	r1, r3
 8000ef6:	6878      	ldr	r0, [r7, #4]
 8000ef8:	f001 ff3c 	bl	8002d74 <I2C_Send7bitAddress>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 8000efc:	bf00      	nop
 8000efe:	4915      	ldr	r1, [pc, #84]	; (8000f54 <I2Cx_SendData+0xac>)
 8000f00:	6878      	ldr	r0, [r7, #4]
 8000f02:	f001 ff73 	bl	8002dec <I2C_CheckEvent>
 8000f06:	4603      	mov	r3, r0
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d0f8      	beq.n	8000efe <I2Cx_SendData+0x56>
	I2C_SendData(I2Cx, RegisterAddress);
 8000f0c:	78bb      	ldrb	r3, [r7, #2]
 8000f0e:	4619      	mov	r1, r3
 8000f10:	6878      	ldr	r0, [r7, #4]
 8000f12:	f001 ff4d 	bl	8002db0 <I2C_SendData>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 8000f16:	bf00      	nop
 8000f18:	490f      	ldr	r1, [pc, #60]	; (8000f58 <I2Cx_SendData+0xb0>)
 8000f1a:	6878      	ldr	r0, [r7, #4]
 8000f1c:	f001 ff66 	bl	8002dec <I2C_CheckEvent>
 8000f20:	4603      	mov	r3, r0
 8000f22:	2b00      	cmp	r3, #0
 8000f24:	d0f8      	beq.n	8000f18 <I2Cx_SendData+0x70>
	I2C_SendData(I2Cx, data);
 8000f26:	787b      	ldrb	r3, [r7, #1]
 8000f28:	4619      	mov	r1, r3
 8000f2a:	6878      	ldr	r0, [r7, #4]
 8000f2c:	f001 ff40 	bl	8002db0 <I2C_SendData>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 8000f30:	bf00      	nop
 8000f32:	4909      	ldr	r1, [pc, #36]	; (8000f58 <I2Cx_SendData+0xb0>)
 8000f34:	6878      	ldr	r0, [r7, #4]
 8000f36:	f001 ff59 	bl	8002dec <I2C_CheckEvent>
 8000f3a:	4603      	mov	r3, r0
 8000f3c:	2b00      	cmp	r3, #0
 8000f3e:	d0f8      	beq.n	8000f32 <I2Cx_SendData+0x8a>
	I2C_GenerateSTOP(I2Cx, ENABLE);
 8000f40:	2101      	movs	r1, #1
 8000f42:	6878      	ldr	r0, [r7, #4]
 8000f44:	f001 fef6 	bl	8002d34 <I2C_GenerateSTOP>
}
 8000f48:	bf00      	nop
 8000f4a:	3708      	adds	r7, #8
 8000f4c:	46bd      	mov	sp, r7
 8000f4e:	bd80      	pop	{r7, pc}
 8000f50:	00030001 	.word	0x00030001
 8000f54:	00070082 	.word	0x00070082
 8000f58:	00070084 	.word	0x00070084

08000f5c <I2Cx_ReceiveData>:

uint8_t I2Cx_ReceiveData(I2C_TypeDef * I2Cx, uint8_t SlaveAddress, uint8_t RegisterAddress)
{
 8000f5c:	b580      	push	{r7, lr}
 8000f5e:	b084      	sub	sp, #16
 8000f60:	af00      	add	r7, sp, #0
 8000f62:	6078      	str	r0, [r7, #4]
 8000f64:	460b      	mov	r3, r1
 8000f66:	70fb      	strb	r3, [r7, #3]
 8000f68:	4613      	mov	r3, r2
 8000f6a:	70bb      	strb	r3, [r7, #2]
	uint8_t data;

	// I2C start
	while (I2C_GetFlagStatus(I2Cx, I2C_FLAG_BUSY));
 8000f6c:	bf00      	nop
 8000f6e:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8000f72:	6878      	ldr	r0, [r7, #4]
 8000f74:	f001 ff6a 	bl	8002e4c <I2C_GetFlagStatus>
 8000f78:	4603      	mov	r3, r0
 8000f7a:	2b00      	cmp	r3, #0
 8000f7c:	d1f7      	bne.n	8000f6e <I2Cx_ReceiveData+0x12>
	I2C_GenerateSTART(I2Cx, ENABLE);
 8000f7e:	2101      	movs	r1, #1
 8000f80:	6878      	ldr	r0, [r7, #4]
 8000f82:	f001 feb7 	bl	8002cf4 <I2C_GenerateSTART>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_MODE_SELECT));
 8000f86:	bf00      	nop
 8000f88:	4931      	ldr	r1, [pc, #196]	; (8001050 <I2Cx_ReceiveData+0xf4>)
 8000f8a:	6878      	ldr	r0, [r7, #4]
 8000f8c:	f001 ff2e 	bl	8002dec <I2C_CheckEvent>
 8000f90:	4603      	mov	r3, r0
 8000f92:	2b00      	cmp	r3, #0
 8000f94:	d0f8      	beq.n	8000f88 <I2Cx_ReceiveData+0x2c>
	// I2C address phase
	I2C_Send7bitAddress(I2Cx, SlaveAddress << 1, I2C_Direction_Transmitter);
 8000f96:	78fb      	ldrb	r3, [r7, #3]
 8000f98:	005b      	lsls	r3, r3, #1
 8000f9a:	b2db      	uxtb	r3, r3
 8000f9c:	2200      	movs	r2, #0
 8000f9e:	4619      	mov	r1, r3
 8000fa0:	6878      	ldr	r0, [r7, #4]
 8000fa2:	f001 fee7 	bl	8002d74 <I2C_Send7bitAddress>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED));
 8000fa6:	bf00      	nop
 8000fa8:	492a      	ldr	r1, [pc, #168]	; (8001054 <I2Cx_ReceiveData+0xf8>)
 8000faa:	6878      	ldr	r0, [r7, #4]
 8000fac:	f001 ff1e 	bl	8002dec <I2C_CheckEvent>
 8000fb0:	4603      	mov	r3, r0
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d0f8      	beq.n	8000fa8 <I2Cx_ReceiveData+0x4c>
	// I2C send register address
	I2C_SendData(I2Cx, RegisterAddress);
 8000fb6:	78bb      	ldrb	r3, [r7, #2]
 8000fb8:	4619      	mov	r1, r3
 8000fba:	6878      	ldr	r0, [r7, #4]
 8000fbc:	f001 fef8 	bl	8002db0 <I2C_SendData>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_BYTE_TRANSMITTED));
 8000fc0:	bf00      	nop
 8000fc2:	4925      	ldr	r1, [pc, #148]	; (8001058 <I2Cx_ReceiveData+0xfc>)
 8000fc4:	6878      	ldr	r0, [r7, #4]
 8000fc6:	f001 ff11 	bl	8002dec <I2C_CheckEvent>
 8000fca:	4603      	mov	r3, r0
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d0f8      	beq.n	8000fc2 <I2Cx_ReceiveData+0x66>
	// I2C stop
	I2C_GenerateSTOP(I2Cx, ENABLE);
 8000fd0:	2101      	movs	r1, #1
 8000fd2:	6878      	ldr	r0, [r7, #4]
 8000fd4:	f001 feae 	bl	8002d34 <I2C_GenerateSTOP>

	// I2C start
	while (I2C_GetFlagStatus(I2Cx, I2C_FLAG_BUSY));
 8000fd8:	bf00      	nop
 8000fda:	f44f 3100 	mov.w	r1, #131072	; 0x20000
 8000fde:	6878      	ldr	r0, [r7, #4]
 8000fe0:	f001 ff34 	bl	8002e4c <I2C_GetFlagStatus>
 8000fe4:	4603      	mov	r3, r0
 8000fe6:	2b00      	cmp	r3, #0
 8000fe8:	d1f7      	bne.n	8000fda <I2Cx_ReceiveData+0x7e>
	I2C_GenerateSTART(I2Cx, ENABLE);
 8000fea:	2101      	movs	r1, #1
 8000fec:	6878      	ldr	r0, [r7, #4]
 8000fee:	f001 fe81 	bl	8002cf4 <I2C_GenerateSTART>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_MODE_SELECT));
 8000ff2:	bf00      	nop
 8000ff4:	4916      	ldr	r1, [pc, #88]	; (8001050 <I2Cx_ReceiveData+0xf4>)
 8000ff6:	6878      	ldr	r0, [r7, #4]
 8000ff8:	f001 fef8 	bl	8002dec <I2C_CheckEvent>
 8000ffc:	4603      	mov	r3, r0
 8000ffe:	2b00      	cmp	r3, #0
 8001000:	d0f8      	beq.n	8000ff4 <I2Cx_ReceiveData+0x98>
	// I2C address phase
	I2C_Send7bitAddress(I2Cx, SlaveAddress << 1, I2C_Direction_Receiver);
 8001002:	78fb      	ldrb	r3, [r7, #3]
 8001004:	005b      	lsls	r3, r3, #1
 8001006:	b2db      	uxtb	r3, r3
 8001008:	2201      	movs	r2, #1
 800100a:	4619      	mov	r1, r3
 800100c:	6878      	ldr	r0, [r7, #4]
 800100e:	f001 feb1 	bl	8002d74 <I2C_Send7bitAddress>
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED));
 8001012:	bf00      	nop
 8001014:	4911      	ldr	r1, [pc, #68]	; (800105c <I2Cx_ReceiveData+0x100>)
 8001016:	6878      	ldr	r0, [r7, #4]
 8001018:	f001 fee8 	bl	8002dec <I2C_CheckEvent>
 800101c:	4603      	mov	r3, r0
 800101e:	2b00      	cmp	r3, #0
 8001020:	d0f8      	beq.n	8001014 <I2Cx_ReceiveData+0xb8>
	// I2C send receive data
	while (!I2C_CheckEvent(I2Cx, I2C_EVENT_MASTER_BYTE_RECEIVED));
 8001022:	bf00      	nop
 8001024:	490e      	ldr	r1, [pc, #56]	; (8001060 <I2Cx_ReceiveData+0x104>)
 8001026:	6878      	ldr	r0, [r7, #4]
 8001028:	f001 fee0 	bl	8002dec <I2C_CheckEvent>
 800102c:	4603      	mov	r3, r0
 800102e:	2b00      	cmp	r3, #0
 8001030:	d0f8      	beq.n	8001024 <I2Cx_ReceiveData+0xc8>
	data = I2C_ReceiveData(I2Cx);
 8001032:	6878      	ldr	r0, [r7, #4]
 8001034:	f001 fecc 	bl	8002dd0 <I2C_ReceiveData>
 8001038:	4603      	mov	r3, r0
 800103a:	73fb      	strb	r3, [r7, #15]
	// I2C stop
	I2C_GenerateSTOP(I2Cx, ENABLE);
 800103c:	2101      	movs	r1, #1
 800103e:	6878      	ldr	r0, [r7, #4]
 8001040:	f001 fe78 	bl	8002d34 <I2C_GenerateSTOP>

	return data;
 8001044:	7bfb      	ldrb	r3, [r7, #15]
}
 8001046:	4618      	mov	r0, r3
 8001048:	3710      	adds	r7, #16
 800104a:	46bd      	mov	sp, r7
 800104c:	bd80      	pop	{r7, pc}
 800104e:	bf00      	nop
 8001050:	00030001 	.word	0x00030001
 8001054:	00070082 	.word	0x00070082
 8001058:	00070084 	.word	0x00070084
 800105c:	00030002 	.word	0x00030002
 8001060:	00030040 	.word	0x00030040

08001064 <MPU6050_Init>:

void MPU6050_Init()
{
 8001064:	b580      	push	{r7, lr}
 8001066:	af00      	add	r7, sp, #0
	I2C1_Init();
 8001068:	f7ff fed6 	bl	8000e18 <I2C1_Init>
	// sample rate 100 Hz
	I2Cx_SendData(I2C1, MPU6050_ADDRESS, SMPRT_DIV_REGEGISTER, 0x09);
 800106c:	2309      	movs	r3, #9
 800106e:	2219      	movs	r2, #25
 8001070:	2168      	movs	r1, #104	; 0x68
 8001072:	480e      	ldr	r0, [pc, #56]	; (80010ac <MPU6050_Init+0x48>)
 8001074:	f7ff ff18 	bl	8000ea8 <I2Cx_SendData>
	// DLPF
	I2Cx_SendData(I2C1, MPU6050_ADDRESS, CONFIG_REGISTER, 0x03);
 8001078:	2303      	movs	r3, #3
 800107a:	221a      	movs	r2, #26
 800107c:	2168      	movs	r1, #104	; 0x68
 800107e:	480b      	ldr	r0, [pc, #44]	; (80010ac <MPU6050_Init+0x48>)
 8001080:	f7ff ff12 	bl	8000ea8 <I2Cx_SendData>
	// gyro full scale 500 deg/s
	I2Cx_SendData(I2C1, MPU6050_ADDRESS, GYRO_CONFIG_REGISTER, 0x08);
 8001084:	2308      	movs	r3, #8
 8001086:	221b      	movs	r2, #27
 8001088:	2168      	movs	r1, #104	; 0x68
 800108a:	4808      	ldr	r0, [pc, #32]	; (80010ac <MPU6050_Init+0x48>)
 800108c:	f7ff ff0c 	bl	8000ea8 <I2Cx_SendData>
	// acc full scale 8g
	I2Cx_SendData(I2C1, MPU6050_ADDRESS, ACCEL_CONFIG_REGISTER, 0x10);
 8001090:	2310      	movs	r3, #16
 8001092:	221c      	movs	r2, #28
 8001094:	2168      	movs	r1, #104	; 0x68
 8001096:	4805      	ldr	r0, [pc, #20]	; (80010ac <MPU6050_Init+0x48>)
 8001098:	f7ff ff06 	bl	8000ea8 <I2Cx_SendData>
	// power management
	I2Cx_SendData(I2C1, MPU6050_ADDRESS, PWR_MGMT_1_REGISTER, 0x00);
 800109c:	2300      	movs	r3, #0
 800109e:	226b      	movs	r2, #107	; 0x6b
 80010a0:	2168      	movs	r1, #104	; 0x68
 80010a2:	4802      	ldr	r0, [pc, #8]	; (80010ac <MPU6050_Init+0x48>)
 80010a4:	f7ff ff00 	bl	8000ea8 <I2Cx_SendData>
}
 80010a8:	bf00      	nop
 80010aa:	bd80      	pop	{r7, pc}
 80010ac:	40005400 	.word	0x40005400

080010b0 <MPU6050_ReadAcc>:

acc_value_t MPU6050_ReadAcc(float accIntensity)
{
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b08e      	sub	sp, #56	; 0x38
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	ed87 0a05 	vstr	s0, [r7, #20]
	uint8_t highReg, lowReg;
	int16_t data;
	acc_value_t acc;

	highReg = I2Cx_ReceiveData(I2C1, MPU6050_ADDRESS, ACCEL_XOUT_REGISTER);
 80010ba:	223b      	movs	r2, #59	; 0x3b
 80010bc:	2168      	movs	r1, #104	; 0x68
 80010be:	4843      	ldr	r0, [pc, #268]	; (80011cc <MPU6050_ReadAcc+0x11c>)
 80010c0:	f7ff ff4c 	bl	8000f5c <I2Cx_ReceiveData>
 80010c4:	4603      	mov	r3, r0
 80010c6:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
	lowReg = I2Cx_ReceiveData(I2C1, MPU6050_ADDRESS, ACCEL_XOUT_REGISTER + 1);
 80010ca:	223c      	movs	r2, #60	; 0x3c
 80010cc:	2168      	movs	r1, #104	; 0x68
 80010ce:	483f      	ldr	r0, [pc, #252]	; (80011cc <MPU6050_ReadAcc+0x11c>)
 80010d0:	f7ff ff44 	bl	8000f5c <I2Cx_ReceiveData>
 80010d4:	4603      	mov	r3, r0
 80010d6:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
	data = (highReg << 8) | lowReg;
 80010da:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80010de:	021b      	lsls	r3, r3, #8
 80010e0:	b21a      	sxth	r2, r3
 80010e2:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80010e6:	b21b      	sxth	r3, r3
 80010e8:	4313      	orrs	r3, r2
 80010ea:	86bb      	strh	r3, [r7, #52]	; 0x34
	acc.x = (float)data / accIntensity;
 80010ec:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	; 0x34
 80010f0:	ee07 3a90 	vmov	s15, r3
 80010f4:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80010f8:	ed97 7a05 	vldr	s14, [r7, #20]
 80010fc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001100:	edc7 7a07 	vstr	s15, [r7, #28]

	highReg = I2Cx_ReceiveData(I2C1, MPU6050_ADDRESS, ACCEL_YOUT_REGISTER);
 8001104:	223d      	movs	r2, #61	; 0x3d
 8001106:	2168      	movs	r1, #104	; 0x68
 8001108:	4830      	ldr	r0, [pc, #192]	; (80011cc <MPU6050_ReadAcc+0x11c>)
 800110a:	f7ff ff27 	bl	8000f5c <I2Cx_ReceiveData>
 800110e:	4603      	mov	r3, r0
 8001110:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
	lowReg = I2Cx_ReceiveData(I2C1, MPU6050_ADDRESS, ACCEL_YOUT_REGISTER + 1);
 8001114:	223e      	movs	r2, #62	; 0x3e
 8001116:	2168      	movs	r1, #104	; 0x68
 8001118:	482c      	ldr	r0, [pc, #176]	; (80011cc <MPU6050_ReadAcc+0x11c>)
 800111a:	f7ff ff1f 	bl	8000f5c <I2Cx_ReceiveData>
 800111e:	4603      	mov	r3, r0
 8001120:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
	data = (highReg << 8) | lowReg;
 8001124:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8001128:	021b      	lsls	r3, r3, #8
 800112a:	b21a      	sxth	r2, r3
 800112c:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8001130:	b21b      	sxth	r3, r3
 8001132:	4313      	orrs	r3, r2
 8001134:	86bb      	strh	r3, [r7, #52]	; 0x34
	acc.y = (float)data / accIntensity;
 8001136:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	; 0x34
 800113a:	ee07 3a90 	vmov	s15, r3
 800113e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8001142:	ed97 7a05 	vldr	s14, [r7, #20]
 8001146:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800114a:	edc7 7a08 	vstr	s15, [r7, #32]

	highReg = I2Cx_ReceiveData(I2C1, MPU6050_ADDRESS, ACCEL_ZOUT_REGISTER);
 800114e:	223f      	movs	r2, #63	; 0x3f
 8001150:	2168      	movs	r1, #104	; 0x68
 8001152:	481e      	ldr	r0, [pc, #120]	; (80011cc <MPU6050_ReadAcc+0x11c>)
 8001154:	f7ff ff02 	bl	8000f5c <I2Cx_ReceiveData>
 8001158:	4603      	mov	r3, r0
 800115a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
	lowReg = I2Cx_ReceiveData(I2C1, MPU6050_ADDRESS, ACCEL_ZOUT_REGISTER + 1);
 800115e:	2240      	movs	r2, #64	; 0x40
 8001160:	2168      	movs	r1, #104	; 0x68
 8001162:	481a      	ldr	r0, [pc, #104]	; (80011cc <MPU6050_ReadAcc+0x11c>)
 8001164:	f7ff fefa 	bl	8000f5c <I2Cx_ReceiveData>
 8001168:	4603      	mov	r3, r0
 800116a:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
	data = (highReg << 8) | lowReg;
 800116e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8001172:	021b      	lsls	r3, r3, #8
 8001174:	b21a      	sxth	r2, r3
 8001176:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 800117a:	b21b      	sxth	r3, r3
 800117c:	4313      	orrs	r3, r2
 800117e:	86bb      	strh	r3, [r7, #52]	; 0x34
	acc.z = (float)data / accIntensity;
 8001180:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	; 0x34
 8001184:	ee07 3a90 	vmov	s15, r3
 8001188:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800118c:	ed97 7a05 	vldr	s14, [r7, #20]
 8001190:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001194:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24

	return acc;
 8001198:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800119c:	f107 021c 	add.w	r2, r7, #28
 80011a0:	ca07      	ldmia	r2, {r0, r1, r2}
 80011a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80011a6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80011a8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80011aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80011ac:	ee06 1a90 	vmov	s13, r1
 80011b0:	ee07 2a10 	vmov	s14, r2
 80011b4:	ee07 3a90 	vmov	s15, r3
}
 80011b8:	eeb0 0a66 	vmov.f32	s0, s13
 80011bc:	eef0 0a47 	vmov.f32	s1, s14
 80011c0:	eeb0 1a67 	vmov.f32	s2, s15
 80011c4:	3738      	adds	r7, #56	; 0x38
 80011c6:	46bd      	mov	sp, r7
 80011c8:	bd80      	pop	{r7, pc}
 80011ca:	bf00      	nop
 80011cc:	40005400 	.word	0x40005400

080011d0 <SPI2_Init>:

/********* SPI & MAX7219 ***************************************************************************/

void SPI2_Init()
{
 80011d0:	b580      	push	{r7, lr}
 80011d2:	b088      	sub	sp, #32
 80011d4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_Init_Structure;
	SPI_InitTypeDef SPI_Init_Structure;

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 80011d6:	2101      	movs	r1, #1
 80011d8:	2002      	movs	r0, #2
 80011da:	f001 ff19 	bl	8003010 <RCC_AHB1PeriphClockCmd>
	GPIO_Init_Structure.GPIO_Mode = GPIO_Mode_AF;
 80011de:	2302      	movs	r3, #2
 80011e0:	773b      	strb	r3, [r7, #28]
	GPIO_Init_Structure.GPIO_OType = GPIO_OType_PP;
 80011e2:	2300      	movs	r3, #0
 80011e4:	77bb      	strb	r3, [r7, #30]
	GPIO_Init_Structure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80011e6:	2300      	movs	r3, #0
 80011e8:	77fb      	strb	r3, [r7, #31]
	GPIO_Init_Structure.GPIO_Speed = GPIO_Speed_50MHz;
 80011ea:	2302      	movs	r3, #2
 80011ec:	777b      	strb	r3, [r7, #29]

	GPIO_Init_Structure.GPIO_Pin = SPI2_SCK_PIN;
 80011ee:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80011f2:	61bb      	str	r3, [r7, #24]
	GPIO_PinAFConfig(SPI2_GPIO_PORT, GPIO_PinSource13, GPIO_AF_SPI2);
 80011f4:	2205      	movs	r2, #5
 80011f6:	210d      	movs	r1, #13
 80011f8:	4826      	ldr	r0, [pc, #152]	; (8001294 <SPI2_Init+0xc4>)
 80011fa:	f001 fc50 	bl	8002a9e <GPIO_PinAFConfig>
	GPIO_Init(SPI2_GPIO_PORT, &GPIO_Init_Structure);
 80011fe:	f107 0318 	add.w	r3, r7, #24
 8001202:	4619      	mov	r1, r3
 8001204:	4823      	ldr	r0, [pc, #140]	; (8001294 <SPI2_Init+0xc4>)
 8001206:	f001 fb9d 	bl	8002944 <GPIO_Init>

	GPIO_Init_Structure.GPIO_Pin = SPI2_MOSI_PIN;
 800120a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800120e:	61bb      	str	r3, [r7, #24]
	GPIO_PinAFConfig(SPI2_GPIO_PORT, GPIO_PinSource15, GPIO_AF_SPI2);
 8001210:	2205      	movs	r2, #5
 8001212:	210f      	movs	r1, #15
 8001214:	481f      	ldr	r0, [pc, #124]	; (8001294 <SPI2_Init+0xc4>)
 8001216:	f001 fc42 	bl	8002a9e <GPIO_PinAFConfig>
	GPIO_Init(SPI2_GPIO_PORT, &GPIO_Init_Structure);
 800121a:	f107 0318 	add.w	r3, r7, #24
 800121e:	4619      	mov	r1, r3
 8001220:	481c      	ldr	r0, [pc, #112]	; (8001294 <SPI2_Init+0xc4>)
 8001222:	f001 fb8f 	bl	8002944 <GPIO_Init>

	GPIO_Init_Structure.GPIO_Mode = GPIO_Mode_OUT;
 8001226:	2301      	movs	r3, #1
 8001228:	773b      	strb	r3, [r7, #28]
	GPIO_Init_Structure.GPIO_OType = GPIO_OType_PP;
 800122a:	2300      	movs	r3, #0
 800122c:	77bb      	strb	r3, [r7, #30]
	GPIO_Init_Structure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 800122e:	2300      	movs	r3, #0
 8001230:	77fb      	strb	r3, [r7, #31]
	GPIO_Init_Structure.GPIO_Speed = GPIO_Speed_50MHz;
 8001232:	2302      	movs	r3, #2
 8001234:	777b      	strb	r3, [r7, #29]

	GPIO_Init_Structure.GPIO_Pin = SPI2_NSS_PIN;
 8001236:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800123a:	61bb      	str	r3, [r7, #24]
	GPIO_Init(SPI2_GPIO_PORT, &GPIO_Init_Structure);
 800123c:	f107 0318 	add.w	r3, r7, #24
 8001240:	4619      	mov	r1, r3
 8001242:	4814      	ldr	r0, [pc, #80]	; (8001294 <SPI2_Init+0xc4>)
 8001244:	f001 fb7e 	bl	8002944 <GPIO_Init>

	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2, ENABLE);
 8001248:	2101      	movs	r1, #1
 800124a:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800124e:	f001 feff 	bl	8003050 <RCC_APB1PeriphClockCmd>
	SPI_Init_Structure.SPI_Mode = SPI_Mode_Master;
 8001252:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001256:	80fb      	strh	r3, [r7, #6]
	SPI_Init_Structure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 8001258:	2300      	movs	r3, #0
 800125a:	80bb      	strh	r3, [r7, #4]
	SPI_Init_Structure.SPI_CPOL = SPI_CPOL_Low;
 800125c:	2300      	movs	r3, #0
 800125e:	817b      	strh	r3, [r7, #10]
	SPI_Init_Structure.SPI_CPHA = SPI_CPHA_1Edge;
 8001260:	2300      	movs	r3, #0
 8001262:	81bb      	strh	r3, [r7, #12]
	SPI_Init_Structure.SPI_DataSize = SPI_DataSize_16b;
 8001264:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001268:	813b      	strh	r3, [r7, #8]
	SPI_Init_Structure.SPI_FirstBit = SPI_FirstBit_MSB;
 800126a:	2300      	movs	r3, #0
 800126c:	827b      	strh	r3, [r7, #18]
	SPI_Init_Structure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_32;
 800126e:	2320      	movs	r3, #32
 8001270:	823b      	strh	r3, [r7, #16]
	SPI_Init_Structure.SPI_NSS = SPI_NSS_Soft;
 8001272:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001276:	81fb      	strh	r3, [r7, #14]
	SPI_Init(SPI2,  &SPI_Init_Structure);
 8001278:	1d3b      	adds	r3, r7, #4
 800127a:	4619      	mov	r1, r3
 800127c:	4806      	ldr	r0, [pc, #24]	; (8001298 <SPI2_Init+0xc8>)
 800127e:	f001 ff27 	bl	80030d0 <SPI_Init>
	SPI_Cmd(SPI2, ENABLE);
 8001282:	2101      	movs	r1, #1
 8001284:	4804      	ldr	r0, [pc, #16]	; (8001298 <SPI2_Init+0xc8>)
 8001286:	f001 ff67 	bl	8003158 <SPI_Cmd>
}
 800128a:	bf00      	nop
 800128c:	3720      	adds	r7, #32
 800128e:	46bd      	mov	sp, r7
 8001290:	bd80      	pop	{r7, pc}
 8001292:	bf00      	nop
 8001294:	40020400 	.word	0x40020400
 8001298:	40003800 	.word	0x40003800

0800129c <SPI_Send_Data>:

void SPI_Send_Data(SPI_TypeDef * SPIx, uint16_t data)
{
 800129c:	b580      	push	{r7, lr}
 800129e:	b082      	sub	sp, #8
 80012a0:	af00      	add	r7, sp, #0
 80012a2:	6078      	str	r0, [r7, #4]
 80012a4:	460b      	mov	r3, r1
 80012a6:	807b      	strh	r3, [r7, #2]
	GPIO_ResetBits(SPI2_GPIO_PORT, SPI2_NSS_PIN);
 80012a8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80012ac:	480c      	ldr	r0, [pc, #48]	; (80012e0 <SPI_Send_Data+0x44>)
 80012ae:	f001 fbe7 	bl	8002a80 <GPIO_ResetBits>
	SPI_I2S_SendData(SPI2, data);
 80012b2:	887b      	ldrh	r3, [r7, #2]
 80012b4:	4619      	mov	r1, r3
 80012b6:	480b      	ldr	r0, [pc, #44]	; (80012e4 <SPI_Send_Data+0x48>)
 80012b8:	f001 ff6e 	bl	8003198 <SPI_I2S_SendData>
	while (SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_BSY) == 1);
 80012bc:	bf00      	nop
 80012be:	2180      	movs	r1, #128	; 0x80
 80012c0:	4808      	ldr	r0, [pc, #32]	; (80012e4 <SPI_Send_Data+0x48>)
 80012c2:	f001 ff78 	bl	80031b6 <SPI_I2S_GetFlagStatus>
 80012c6:	4603      	mov	r3, r0
 80012c8:	2b01      	cmp	r3, #1
 80012ca:	d0f8      	beq.n	80012be <SPI_Send_Data+0x22>
	GPIO_SetBits(SPI2_GPIO_PORT, SPI2_NSS_PIN);
 80012cc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80012d0:	4803      	ldr	r0, [pc, #12]	; (80012e0 <SPI_Send_Data+0x44>)
 80012d2:	f001 fbc6 	bl	8002a62 <GPIO_SetBits>
}
 80012d6:	bf00      	nop
 80012d8:	3708      	adds	r7, #8
 80012da:	46bd      	mov	sp, r7
 80012dc:	bd80      	pop	{r7, pc}
 80012de:	bf00      	nop
 80012e0:	40020400 	.word	0x40020400
 80012e4:	40003800 	.word	0x40003800

080012e8 <MAX7219_Init>:

void MAX7219_Init()
{
 80012e8:	b580      	push	{r7, lr}
 80012ea:	af00      	add	r7, sp, #0
	// Decode mode
	SPI_Send_Data(SPI2, (0x09 << 8) | 0x00);
 80012ec:	f44f 6110 	mov.w	r1, #2304	; 0x900
 80012f0:	480c      	ldr	r0, [pc, #48]	; (8001324 <MAX7219_Init+0x3c>)
 80012f2:	f7ff ffd3 	bl	800129c <SPI_Send_Data>
	// Intensity
	SPI_Send_Data(SPI2, (0x0A << 8) | 0x09);
 80012f6:	f640 2109 	movw	r1, #2569	; 0xa09
 80012fa:	480a      	ldr	r0, [pc, #40]	; (8001324 <MAX7219_Init+0x3c>)
 80012fc:	f7ff ffce 	bl	800129c <SPI_Send_Data>
	// Scan limit
	SPI_Send_Data(SPI2, (0x0B << 8) | 0x07);
 8001300:	f640 3107 	movw	r1, #2823	; 0xb07
 8001304:	4807      	ldr	r0, [pc, #28]	; (8001324 <MAX7219_Init+0x3c>)
 8001306:	f7ff ffc9 	bl	800129c <SPI_Send_Data>
	// Shutdown mode
	SPI_Send_Data(SPI2, (0x0C << 8) | 0x01);
 800130a:	f640 4101 	movw	r1, #3073	; 0xc01
 800130e:	4805      	ldr	r0, [pc, #20]	; (8001324 <MAX7219_Init+0x3c>)
 8001310:	f7ff ffc4 	bl	800129c <SPI_Send_Data>
	// Display test
	SPI_Send_Data(SPI2, (0x0F << 8) | 0x00);
 8001314:	f44f 6170 	mov.w	r1, #3840	; 0xf00
 8001318:	4802      	ldr	r0, [pc, #8]	; (8001324 <MAX7219_Init+0x3c>)
 800131a:	f7ff ffbf 	bl	800129c <SPI_Send_Data>
}
 800131e:	bf00      	nop
 8001320:	bd80      	pop	{r7, pc}
 8001322:	bf00      	nop
 8001324:	40003800 	.word	0x40003800

08001328 <cho_vao_game>:

/********* Cac ham xu ly chuong trinh ***************************************************************************/

void cho_vao_game()
{
 8001328:	b580      	push	{r7, lr}
 800132a:	af00      	add	r7, sp, #0
	SPI_Send_Data(SPI2, (0x01 << 8) | 0x07);
 800132c:	f240 1107 	movw	r1, #263	; 0x107
 8001330:	482d      	ldr	r0, [pc, #180]	; (80013e8 <cho_vao_game+0xc0>)
 8001332:	f7ff ffb3 	bl	800129c <SPI_Send_Data>
	// 3
	SPI_Send_Data(SPI2, (0x03 << 8) | 0x70);
 8001336:	f44f 715c 	mov.w	r1, #880	; 0x370
 800133a:	482b      	ldr	r0, [pc, #172]	; (80013e8 <cho_vao_game+0xc0>)
 800133c:	f7ff ffae 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x04 << 8) | 0x40);
 8001340:	f44f 6188 	mov.w	r1, #1088	; 0x440
 8001344:	4828      	ldr	r0, [pc, #160]	; (80013e8 <cho_vao_game+0xc0>)
 8001346:	f7ff ffa9 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x05 << 8) | 0x72);
 800134a:	f240 5172 	movw	r1, #1394	; 0x572
 800134e:	4826      	ldr	r0, [pc, #152]	; (80013e8 <cho_vao_game+0xc0>)
 8001350:	f7ff ffa4 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x06 << 8) | 0x40);
 8001354:	f44f 61c8 	mov.w	r1, #1600	; 0x640
 8001358:	4823      	ldr	r0, [pc, #140]	; (80013e8 <cho_vao_game+0xc0>)
 800135a:	f7ff ff9f 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x07 << 8) | 0x70);
 800135e:	f44f 61ee 	mov.w	r1, #1904	; 0x770
 8001362:	4821      	ldr	r0, [pc, #132]	; (80013e8 <cho_vao_game+0xc0>)
 8001364:	f7ff ff9a 	bl	800129c <SPI_Send_Data>
	Delay_ms(1000);
 8001368:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800136c:	f7ff fcd0 	bl	8000d10 <Delay_ms>
	// 2
	SPI_Send_Data(SPI2, (0x03 << 8) | 0x70);
 8001370:	f44f 715c 	mov.w	r1, #880	; 0x370
 8001374:	481c      	ldr	r0, [pc, #112]	; (80013e8 <cho_vao_game+0xc0>)
 8001376:	f7ff ff91 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x04 << 8) | 0x10);
 800137a:	f44f 6182 	mov.w	r1, #1040	; 0x410
 800137e:	481a      	ldr	r0, [pc, #104]	; (80013e8 <cho_vao_game+0xc0>)
 8001380:	f7ff ff8c 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x05 << 8) | 0x72);
 8001384:	f240 5172 	movw	r1, #1394	; 0x572
 8001388:	4817      	ldr	r0, [pc, #92]	; (80013e8 <cho_vao_game+0xc0>)
 800138a:	f7ff ff87 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x06 << 8) | 0x40);
 800138e:	f44f 61c8 	mov.w	r1, #1600	; 0x640
 8001392:	4815      	ldr	r0, [pc, #84]	; (80013e8 <cho_vao_game+0xc0>)
 8001394:	f7ff ff82 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x07 << 8) | 0x70);
 8001398:	f44f 61ee 	mov.w	r1, #1904	; 0x770
 800139c:	4812      	ldr	r0, [pc, #72]	; (80013e8 <cho_vao_game+0xc0>)
 800139e:	f7ff ff7d 	bl	800129c <SPI_Send_Data>
	Delay_ms(1000);
 80013a2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013a6:	f7ff fcb3 	bl	8000d10 <Delay_ms>
	// 1
	SPI_Send_Data(SPI2, (0x03 << 8) | 0x40);
 80013aa:	f44f 7150 	mov.w	r1, #832	; 0x340
 80013ae:	480e      	ldr	r0, [pc, #56]	; (80013e8 <cho_vao_game+0xc0>)
 80013b0:	f7ff ff74 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x04 << 8) | 0x40);
 80013b4:	f44f 6188 	mov.w	r1, #1088	; 0x440
 80013b8:	480b      	ldr	r0, [pc, #44]	; (80013e8 <cho_vao_game+0xc0>)
 80013ba:	f7ff ff6f 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x05 << 8) | 0x42);
 80013be:	f240 5142 	movw	r1, #1346	; 0x542
 80013c2:	4809      	ldr	r0, [pc, #36]	; (80013e8 <cho_vao_game+0xc0>)
 80013c4:	f7ff ff6a 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x06 << 8) | 0x60);
 80013c8:	f44f 61cc 	mov.w	r1, #1632	; 0x660
 80013cc:	4806      	ldr	r0, [pc, #24]	; (80013e8 <cho_vao_game+0xc0>)
 80013ce:	f7ff ff65 	bl	800129c <SPI_Send_Data>
	SPI_Send_Data(SPI2, (0x07 << 8) | 0x40);
 80013d2:	f44f 61e8 	mov.w	r1, #1856	; 0x740
 80013d6:	4804      	ldr	r0, [pc, #16]	; (80013e8 <cho_vao_game+0xc0>)
 80013d8:	f7ff ff60 	bl	800129c <SPI_Send_Data>
	Delay_ms(1000);
 80013dc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013e0:	f7ff fc96 	bl	8000d10 <Delay_ms>
}
 80013e4:	bf00      	nop
 80013e6:	bd80      	pop	{r7, pc}
 80013e8:	40003800 	.word	0x40003800

080013ec <khoi_tao_game>:

void khoi_tao_game()
{
 80013ec:	b480      	push	{r7}
 80013ee:	b083      	sub	sp, #12
 80013f0:	af00      	add	r7, sp, #0
	int8_t hang, cot;

	for (int8_t i = 0; i < 8; i++)
 80013f2:	2300      	movs	r3, #0
 80013f4:	71fb      	strb	r3, [r7, #7]
 80013f6:	e00a      	b.n	800140e <khoi_tao_game+0x22>
	{
		gia_tri_in[i] = 0;
 80013f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013fc:	4a3e      	ldr	r2, [pc, #248]	; (80014f8 <khoi_tao_game+0x10c>)
 80013fe:	2100      	movs	r1, #0
 8001400:	54d1      	strb	r1, [r2, r3]
	for (int8_t i = 0; i < 8; i++)
 8001402:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001406:	b2db      	uxtb	r3, r3
 8001408:	3301      	adds	r3, #1
 800140a:	b2db      	uxtb	r3, r3
 800140c:	71fb      	strb	r3, [r7, #7]
 800140e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001412:	2b07      	cmp	r3, #7
 8001414:	ddf0      	ble.n	80013f8 <khoi_tao_game+0xc>
	}

	toa_do_moi = 33;
 8001416:	4b39      	ldr	r3, [pc, #228]	; (80014fc <khoi_tao_game+0x110>)
 8001418:	2221      	movs	r2, #33	; 0x21
 800141a:	701a      	strb	r2, [r3, #0]
	hang = toa_do_moi / 8;
 800141c:	4b37      	ldr	r3, [pc, #220]	; (80014fc <khoi_tao_game+0x110>)
 800141e:	f993 3000 	ldrsb.w	r3, [r3]
 8001422:	2b00      	cmp	r3, #0
 8001424:	da00      	bge.n	8001428 <khoi_tao_game+0x3c>
 8001426:	3307      	adds	r3, #7
 8001428:	10db      	asrs	r3, r3, #3
 800142a:	713b      	strb	r3, [r7, #4]
	cot = toa_do_moi % 8;
 800142c:	4b33      	ldr	r3, [pc, #204]	; (80014fc <khoi_tao_game+0x110>)
 800142e:	f993 3000 	ldrsb.w	r3, [r3]
 8001432:	425a      	negs	r2, r3
 8001434:	f003 0307 	and.w	r3, r3, #7
 8001438:	f002 0207 	and.w	r2, r2, #7
 800143c:	bf58      	it	pl
 800143e:	4253      	negpl	r3, r2
 8001440:	70fb      	strb	r3, [r7, #3]
	gia_tri_in[hang] |= (1 << cot);
 8001442:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001446:	4a2c      	ldr	r2, [pc, #176]	; (80014f8 <khoi_tao_game+0x10c>)
 8001448:	5cd3      	ldrb	r3, [r2, r3]
 800144a:	b25a      	sxtb	r2, r3
 800144c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8001450:	2101      	movs	r1, #1
 8001452:	fa01 f303 	lsl.w	r3, r1, r3
 8001456:	b25b      	sxtb	r3, r3
 8001458:	4313      	orrs	r3, r2
 800145a:	b25a      	sxtb	r2, r3
 800145c:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001460:	b2d1      	uxtb	r1, r2
 8001462:	4a25      	ldr	r2, [pc, #148]	; (80014f8 <khoi_tao_game+0x10c>)
 8001464:	54d1      	strb	r1, [r2, r3]

	chieu_dai_ran = 3;
 8001466:	4b26      	ldr	r3, [pc, #152]	; (8001500 <khoi_tao_game+0x114>)
 8001468:	2203      	movs	r2, #3
 800146a:	701a      	strb	r2, [r3, #0]
	int8_t temp = 3;
 800146c:	2303      	movs	r3, #3
 800146e:	71bb      	strb	r3, [r7, #6]
	for (int8_t i = 0; i < 3; i++)
 8001470:	2300      	movs	r3, #0
 8001472:	717b      	strb	r3, [r7, #5]
 8001474:	e035      	b.n	80014e2 <khoi_tao_game+0xf6>
	{
		toa_do_ran[i] = --temp;
 8001476:	79bb      	ldrb	r3, [r7, #6]
 8001478:	3b01      	subs	r3, #1
 800147a:	b2db      	uxtb	r3, r3
 800147c:	71bb      	strb	r3, [r7, #6]
 800147e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001482:	4920      	ldr	r1, [pc, #128]	; (8001504 <khoi_tao_game+0x118>)
 8001484:	79ba      	ldrb	r2, [r7, #6]
 8001486:	54ca      	strb	r2, [r1, r3]
		hang = toa_do_ran[i] / 8;
 8001488:	f997 3005 	ldrsb.w	r3, [r7, #5]
 800148c:	4a1d      	ldr	r2, [pc, #116]	; (8001504 <khoi_tao_game+0x118>)
 800148e:	56d3      	ldrsb	r3, [r2, r3]
 8001490:	2b00      	cmp	r3, #0
 8001492:	da00      	bge.n	8001496 <khoi_tao_game+0xaa>
 8001494:	3307      	adds	r3, #7
 8001496:	10db      	asrs	r3, r3, #3
 8001498:	713b      	strb	r3, [r7, #4]
		cot = toa_do_ran[i] % 8;
 800149a:	f997 3005 	ldrsb.w	r3, [r7, #5]
 800149e:	4a19      	ldr	r2, [pc, #100]	; (8001504 <khoi_tao_game+0x118>)
 80014a0:	56d3      	ldrsb	r3, [r2, r3]
 80014a2:	425a      	negs	r2, r3
 80014a4:	f003 0307 	and.w	r3, r3, #7
 80014a8:	f002 0207 	and.w	r2, r2, #7
 80014ac:	bf58      	it	pl
 80014ae:	4253      	negpl	r3, r2
 80014b0:	70fb      	strb	r3, [r7, #3]
		gia_tri_in[hang] |= (1 << cot);
 80014b2:	f997 3004 	ldrsb.w	r3, [r7, #4]
 80014b6:	4a10      	ldr	r2, [pc, #64]	; (80014f8 <khoi_tao_game+0x10c>)
 80014b8:	5cd3      	ldrb	r3, [r2, r3]
 80014ba:	b25a      	sxtb	r2, r3
 80014bc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80014c0:	2101      	movs	r1, #1
 80014c2:	fa01 f303 	lsl.w	r3, r1, r3
 80014c6:	b25b      	sxtb	r3, r3
 80014c8:	4313      	orrs	r3, r2
 80014ca:	b25a      	sxtb	r2, r3
 80014cc:	f997 3004 	ldrsb.w	r3, [r7, #4]
 80014d0:	b2d1      	uxtb	r1, r2
 80014d2:	4a09      	ldr	r2, [pc, #36]	; (80014f8 <khoi_tao_game+0x10c>)
 80014d4:	54d1      	strb	r1, [r2, r3]
	for (int8_t i = 0; i < 3; i++)
 80014d6:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80014da:	b2db      	uxtb	r3, r3
 80014dc:	3301      	adds	r3, #1
 80014de:	b2db      	uxtb	r3, r3
 80014e0:	717b      	strb	r3, [r7, #5]
 80014e2:	f997 3005 	ldrsb.w	r3, [r7, #5]
 80014e6:	2b02      	cmp	r3, #2
 80014e8:	ddc5      	ble.n	8001476 <khoi_tao_game+0x8a>
	}
}
 80014ea:	bf00      	nop
 80014ec:	bf00      	nop
 80014ee:	370c      	adds	r7, #12
 80014f0:	46bd      	mov	sp, r7
 80014f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f6:	4770      	bx	lr
 80014f8:	200000f0 	.word	0x200000f0
 80014fc:	200000ac 	.word	0x200000ac
 8001500:	200000ad 	.word	0x200000ad
 8001504:	200000b0 	.word	0x200000b0

08001508 <in_man_hinh>:

void in_man_hinh()
{
 8001508:	b580      	push	{r7, lr}
 800150a:	b082      	sub	sp, #8
 800150c:	af00      	add	r7, sp, #0
	for (int8_t i = 0; i < 8; i++)
 800150e:	2300      	movs	r3, #0
 8001510:	71fb      	strb	r3, [r7, #7]
 8001512:	e016      	b.n	8001542 <in_man_hinh+0x3a>
	{
		SPI_Send_Data(SPI2, ((i + 1) << 8) | gia_tri_in[i]);
 8001514:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001518:	3301      	adds	r3, #1
 800151a:	021b      	lsls	r3, r3, #8
 800151c:	b21a      	sxth	r2, r3
 800151e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001522:	490c      	ldr	r1, [pc, #48]	; (8001554 <in_man_hinh+0x4c>)
 8001524:	5ccb      	ldrb	r3, [r1, r3]
 8001526:	b21b      	sxth	r3, r3
 8001528:	4313      	orrs	r3, r2
 800152a:	b21b      	sxth	r3, r3
 800152c:	b29b      	uxth	r3, r3
 800152e:	4619      	mov	r1, r3
 8001530:	4809      	ldr	r0, [pc, #36]	; (8001558 <in_man_hinh+0x50>)
 8001532:	f7ff feb3 	bl	800129c <SPI_Send_Data>
	for (int8_t i = 0; i < 8; i++)
 8001536:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800153a:	b2db      	uxtb	r3, r3
 800153c:	3301      	adds	r3, #1
 800153e:	b2db      	uxtb	r3, r3
 8001540:	71fb      	strb	r3, [r7, #7]
 8001542:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001546:	2b07      	cmp	r3, #7
 8001548:	dde4      	ble.n	8001514 <in_man_hinh+0xc>
	}
}
 800154a:	bf00      	nop
 800154c:	bf00      	nop
 800154e:	3708      	adds	r7, #8
 8001550:	46bd      	mov	sp, r7
 8001552:	bd80      	pop	{r7, pc}
 8001554:	200000f0 	.word	0x200000f0
 8001558:	40003800 	.word	0x40003800
 800155c:	00000000 	.word	0x00000000

08001560 <xac_dinh_huong_di_chuyen>:

huong_t xac_dinh_huong_di_chuyen(huong_t huong_hien_tai)
{
 8001560:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001564:	b088      	sub	sp, #32
 8001566:	af00      	add	r7, sp, #0
 8001568:	4603      	mov	r3, r0
 800156a:	71fb      	strb	r3, [r7, #7]
	acc_value_t acc_value;
	float roll, pitch;
	huong_t huong_cam_bien = huong_hien_tai;
 800156c:	79fb      	ldrb	r3, [r7, #7]
 800156e:	77fb      	strb	r3, [r7, #31]

	acc_value = MPU6050_ReadAcc(4196);
 8001570:	ed9f 0a8b 	vldr	s0, [pc, #556]	; 80017a0 <xac_dinh_huong_di_chuyen+0x240>
 8001574:	f7ff fd9c 	bl	80010b0 <MPU6050_ReadAcc>
 8001578:	eef0 6a40 	vmov.f32	s13, s0
 800157c:	eeb0 7a60 	vmov.f32	s14, s1
 8001580:	eef0 7a41 	vmov.f32	s15, s2
 8001584:	edc7 6a02 	vstr	s13, [r7, #8]
 8001588:	ed87 7a03 	vstr	s14, [r7, #12]
 800158c:	edc7 7a04 	vstr	s15, [r7, #16]

	roll = atan2(acc_value.y, sqrt(pow(acc_value.x, 2) + pow(acc_value.z, 2))) * 180 / M_PI;
 8001590:	68fb      	ldr	r3, [r7, #12]
 8001592:	4618      	mov	r0, r3
 8001594:	f7fe ffd8 	bl	8000548 <__aeabi_f2d>
 8001598:	4604      	mov	r4, r0
 800159a:	460d      	mov	r5, r1
 800159c:	68bb      	ldr	r3, [r7, #8]
 800159e:	4618      	mov	r0, r3
 80015a0:	f7fe ffd2 	bl	8000548 <__aeabi_f2d>
 80015a4:	4602      	mov	r2, r0
 80015a6:	460b      	mov	r3, r1
 80015a8:	ed9f 1b79 	vldr	d1, [pc, #484]	; 8001790 <xac_dinh_huong_di_chuyen+0x230>
 80015ac:	ec43 2b10 	vmov	d0, r2, r3
 80015b0:	f002 fecc 	bl	800434c <pow>
 80015b4:	ec59 8b10 	vmov	r8, r9, d0
 80015b8:	693b      	ldr	r3, [r7, #16]
 80015ba:	4618      	mov	r0, r3
 80015bc:	f7fe ffc4 	bl	8000548 <__aeabi_f2d>
 80015c0:	4602      	mov	r2, r0
 80015c2:	460b      	mov	r3, r1
 80015c4:	ed9f 1b72 	vldr	d1, [pc, #456]	; 8001790 <xac_dinh_huong_di_chuyen+0x230>
 80015c8:	ec43 2b10 	vmov	d0, r2, r3
 80015cc:	f002 febe 	bl	800434c <pow>
 80015d0:	ec53 2b10 	vmov	r2, r3, d0
 80015d4:	4640      	mov	r0, r8
 80015d6:	4649      	mov	r1, r9
 80015d8:	f7fe fe58 	bl	800028c <__adddf3>
 80015dc:	4602      	mov	r2, r0
 80015de:	460b      	mov	r3, r1
 80015e0:	ec43 2b17 	vmov	d7, r2, r3
 80015e4:	eeb0 0a47 	vmov.f32	s0, s14
 80015e8:	eef0 0a67 	vmov.f32	s1, s15
 80015ec:	f002 ff1e 	bl	800442c <sqrt>
 80015f0:	eeb0 7a40 	vmov.f32	s14, s0
 80015f4:	eef0 7a60 	vmov.f32	s15, s1
 80015f8:	eeb0 1a47 	vmov.f32	s2, s14
 80015fc:	eef0 1a67 	vmov.f32	s3, s15
 8001600:	ec45 4b10 	vmov	d0, r4, r5
 8001604:	f002 fea0 	bl	8004348 <atan2>
 8001608:	ec51 0b10 	vmov	r0, r1, d0
 800160c:	f04f 0200 	mov.w	r2, #0
 8001610:	4b64      	ldr	r3, [pc, #400]	; (80017a4 <xac_dinh_huong_di_chuyen+0x244>)
 8001612:	f7fe fff1 	bl	80005f8 <__aeabi_dmul>
 8001616:	4602      	mov	r2, r0
 8001618:	460b      	mov	r3, r1
 800161a:	4610      	mov	r0, r2
 800161c:	4619      	mov	r1, r3
 800161e:	a35e      	add	r3, pc, #376	; (adr r3, 8001798 <xac_dinh_huong_di_chuyen+0x238>)
 8001620:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001624:	f7ff f912 	bl	800084c <__aeabi_ddiv>
 8001628:	4602      	mov	r2, r0
 800162a:	460b      	mov	r3, r1
 800162c:	4610      	mov	r0, r2
 800162e:	4619      	mov	r1, r3
 8001630:	f7ff fa92 	bl	8000b58 <__aeabi_d2f>
 8001634:	4603      	mov	r3, r0
 8001636:	61bb      	str	r3, [r7, #24]
	pitch = atan2(acc_value.x, sqrt(pow(acc_value.y, 2) + pow(acc_value.z, 2))) * 180 / M_PI;
 8001638:	68bb      	ldr	r3, [r7, #8]
 800163a:	4618      	mov	r0, r3
 800163c:	f7fe ff84 	bl	8000548 <__aeabi_f2d>
 8001640:	4604      	mov	r4, r0
 8001642:	460d      	mov	r5, r1
 8001644:	68fb      	ldr	r3, [r7, #12]
 8001646:	4618      	mov	r0, r3
 8001648:	f7fe ff7e 	bl	8000548 <__aeabi_f2d>
 800164c:	4602      	mov	r2, r0
 800164e:	460b      	mov	r3, r1
 8001650:	ed9f 1b4f 	vldr	d1, [pc, #316]	; 8001790 <xac_dinh_huong_di_chuyen+0x230>
 8001654:	ec43 2b10 	vmov	d0, r2, r3
 8001658:	f002 fe78 	bl	800434c <pow>
 800165c:	ec59 8b10 	vmov	r8, r9, d0
 8001660:	693b      	ldr	r3, [r7, #16]
 8001662:	4618      	mov	r0, r3
 8001664:	f7fe ff70 	bl	8000548 <__aeabi_f2d>
 8001668:	4602      	mov	r2, r0
 800166a:	460b      	mov	r3, r1
 800166c:	ed9f 1b48 	vldr	d1, [pc, #288]	; 8001790 <xac_dinh_huong_di_chuyen+0x230>
 8001670:	ec43 2b10 	vmov	d0, r2, r3
 8001674:	f002 fe6a 	bl	800434c <pow>
 8001678:	ec53 2b10 	vmov	r2, r3, d0
 800167c:	4640      	mov	r0, r8
 800167e:	4649      	mov	r1, r9
 8001680:	f7fe fe04 	bl	800028c <__adddf3>
 8001684:	4602      	mov	r2, r0
 8001686:	460b      	mov	r3, r1
 8001688:	ec43 2b17 	vmov	d7, r2, r3
 800168c:	eeb0 0a47 	vmov.f32	s0, s14
 8001690:	eef0 0a67 	vmov.f32	s1, s15
 8001694:	f002 feca 	bl	800442c <sqrt>
 8001698:	eeb0 7a40 	vmov.f32	s14, s0
 800169c:	eef0 7a60 	vmov.f32	s15, s1
 80016a0:	eeb0 1a47 	vmov.f32	s2, s14
 80016a4:	eef0 1a67 	vmov.f32	s3, s15
 80016a8:	ec45 4b10 	vmov	d0, r4, r5
 80016ac:	f002 fe4c 	bl	8004348 <atan2>
 80016b0:	ec51 0b10 	vmov	r0, r1, d0
 80016b4:	f04f 0200 	mov.w	r2, #0
 80016b8:	4b3a      	ldr	r3, [pc, #232]	; (80017a4 <xac_dinh_huong_di_chuyen+0x244>)
 80016ba:	f7fe ff9d 	bl	80005f8 <__aeabi_dmul>
 80016be:	4602      	mov	r2, r0
 80016c0:	460b      	mov	r3, r1
 80016c2:	4610      	mov	r0, r2
 80016c4:	4619      	mov	r1, r3
 80016c6:	a334      	add	r3, pc, #208	; (adr r3, 8001798 <xac_dinh_huong_di_chuyen+0x238>)
 80016c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80016cc:	f7ff f8be 	bl	800084c <__aeabi_ddiv>
 80016d0:	4602      	mov	r2, r0
 80016d2:	460b      	mov	r3, r1
 80016d4:	4610      	mov	r0, r2
 80016d6:	4619      	mov	r1, r3
 80016d8:	f7ff fa3e 	bl	8000b58 <__aeabi_d2f>
 80016dc:	4603      	mov	r3, r0
 80016de:	617b      	str	r3, [r7, #20]

	if ((abs(roll) - abs(pitch)) >= 0)
 80016e0:	edd7 7a06 	vldr	s15, [r7, #24]
 80016e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80016e8:	ee17 3a90 	vmov	r3, s15
 80016ec:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 80016f0:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 80016f4:	edd7 7a05 	vldr	s15, [r7, #20]
 80016f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80016fc:	ee17 3a90 	vmov	r3, s15
 8001700:	2b00      	cmp	r3, #0
 8001702:	bfb8      	it	lt
 8001704:	425b      	neglt	r3, r3
 8001706:	1ad3      	subs	r3, r2, r3
 8001708:	2b00      	cmp	r3, #0
 800170a:	db17      	blt.n	800173c <xac_dinh_huong_di_chuyen+0x1dc>
	{
	    if (roll > 20)
 800170c:	edd7 7a06 	vldr	s15, [r7, #24]
 8001710:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8001714:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800171c:	dd02      	ble.n	8001724 <xac_dinh_huong_di_chuyen+0x1c4>
		{
	    	huong_cam_bien = huong_trai;
 800171e:	2301      	movs	r3, #1
 8001720:	77fb      	strb	r3, [r7, #31]
 8001722:	e022      	b.n	800176a <xac_dinh_huong_di_chuyen+0x20a>
		}
	    else if (roll < -20)
 8001724:	edd7 7a06 	vldr	s15, [r7, #24]
 8001728:	eebb 7a04 	vmov.f32	s14, #180	; 0xc1a00000 -20.0
 800172c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001730:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001734:	d519      	bpl.n	800176a <xac_dinh_huong_di_chuyen+0x20a>
		{
	    	huong_cam_bien = huong_phai;
 8001736:	2303      	movs	r3, #3
 8001738:	77fb      	strb	r3, [r7, #31]
 800173a:	e016      	b.n	800176a <xac_dinh_huong_di_chuyen+0x20a>
		}
	}
	else
	{
	    if (pitch > 20)
 800173c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001740:	eeb3 7a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 8001744:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800174c:	dd02      	ble.n	8001754 <xac_dinh_huong_di_chuyen+0x1f4>
		{
	    	huong_cam_bien = huong_len;
 800174e:	2300      	movs	r3, #0
 8001750:	77fb      	strb	r3, [r7, #31]
 8001752:	e00a      	b.n	800176a <xac_dinh_huong_di_chuyen+0x20a>
	    }
	    else if (pitch < -20)
 8001754:	edd7 7a05 	vldr	s15, [r7, #20]
 8001758:	eebb 7a04 	vmov.f32	s14, #180	; 0xc1a00000 -20.0
 800175c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001764:	d501      	bpl.n	800176a <xac_dinh_huong_di_chuyen+0x20a>
		{
	    	huong_cam_bien = huong_xuong;
 8001766:	2302      	movs	r3, #2
 8001768:	77fb      	strb	r3, [r7, #31]
		}
	}

    if (((huong_hien_tai % 2)-(huong_cam_bien % 2)) != 0)
 800176a:	79fa      	ldrb	r2, [r7, #7]
 800176c:	7ffb      	ldrb	r3, [r7, #31]
 800176e:	4053      	eors	r3, r2
 8001770:	b2db      	uxtb	r3, r3
 8001772:	f003 0301 	and.w	r3, r3, #1
 8001776:	2b00      	cmp	r3, #0
 8001778:	d001      	beq.n	800177e <xac_dinh_huong_di_chuyen+0x21e>
    {
    	return huong_cam_bien;
 800177a:	7ffb      	ldrb	r3, [r7, #31]
 800177c:	e000      	b.n	8001780 <xac_dinh_huong_di_chuyen+0x220>
    }

    return huong_hien_tai;
 800177e:	79fb      	ldrb	r3, [r7, #7]
}
 8001780:	4618      	mov	r0, r3
 8001782:	3720      	adds	r7, #32
 8001784:	46bd      	mov	sp, r7
 8001786:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800178a:	bf00      	nop
 800178c:	f3af 8000 	nop.w
 8001790:	00000000 	.word	0x00000000
 8001794:	40000000 	.word	0x40000000
 8001798:	54442d18 	.word	0x54442d18
 800179c:	400921fb 	.word	0x400921fb
 80017a0:	45832000 	.word	0x45832000
 80017a4:	40668000 	.word	0x40668000

080017a8 <xac_dinh_toa_do_ran>:

void xac_dinh_toa_do_ran(huong_t huong_hien_tai)
{
 80017a8:	b480      	push	{r7}
 80017aa:	b085      	sub	sp, #20
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	4603      	mov	r3, r0
 80017b0:	71fb      	strb	r3, [r7, #7]
	int8_t i, hang, cot;

    // Xóa giá trị tọa độ rắn cũ
    for (i = 0; i < chieu_dai_ran; i++)
 80017b2:	2300      	movs	r3, #0
 80017b4:	73fb      	strb	r3, [r7, #15]
 80017b6:	e02e      	b.n	8001816 <xac_dinh_toa_do_ran+0x6e>
    {
        hang = toa_do_ran[i] / 8;
 80017b8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80017bc:	4a9b      	ldr	r2, [pc, #620]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80017be:	56d3      	ldrsb	r3, [r2, r3]
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	da00      	bge.n	80017c6 <xac_dinh_toa_do_ran+0x1e>
 80017c4:	3307      	adds	r3, #7
 80017c6:	10db      	asrs	r3, r3, #3
 80017c8:	73bb      	strb	r3, [r7, #14]
        cot = toa_do_ran[i] % 8;
 80017ca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80017ce:	4a97      	ldr	r2, [pc, #604]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80017d0:	56d3      	ldrsb	r3, [r2, r3]
 80017d2:	425a      	negs	r2, r3
 80017d4:	f003 0307 	and.w	r3, r3, #7
 80017d8:	f002 0207 	and.w	r2, r2, #7
 80017dc:	bf58      	it	pl
 80017de:	4253      	negpl	r3, r2
 80017e0:	737b      	strb	r3, [r7, #13]
        gia_tri_in[hang] &= ~(1 << cot);
 80017e2:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80017e6:	4a92      	ldr	r2, [pc, #584]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 80017e8:	5cd3      	ldrb	r3, [r2, r3]
 80017ea:	b25a      	sxtb	r2, r3
 80017ec:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80017f0:	2101      	movs	r1, #1
 80017f2:	fa01 f303 	lsl.w	r3, r1, r3
 80017f6:	b25b      	sxtb	r3, r3
 80017f8:	43db      	mvns	r3, r3
 80017fa:	b25b      	sxtb	r3, r3
 80017fc:	4013      	ands	r3, r2
 80017fe:	b25a      	sxtb	r2, r3
 8001800:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001804:	b2d1      	uxtb	r1, r2
 8001806:	4a8a      	ldr	r2, [pc, #552]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 8001808:	54d1      	strb	r1, [r2, r3]
    for (i = 0; i < chieu_dai_ran; i++)
 800180a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800180e:	b2db      	uxtb	r3, r3
 8001810:	3301      	adds	r3, #1
 8001812:	b2db      	uxtb	r3, r3
 8001814:	73fb      	strb	r3, [r7, #15]
 8001816:	4b87      	ldr	r3, [pc, #540]	; (8001a34 <xac_dinh_toa_do_ran+0x28c>)
 8001818:	f993 3000 	ldrsb.w	r3, [r3]
 800181c:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8001820:	429a      	cmp	r2, r3
 8001822:	dbc9      	blt.n	80017b8 <xac_dinh_toa_do_ran+0x10>
    }

    // Xác định lại thân rắn mới
    for (i = chieu_dai_ran - 1; i >= 1; i--)
 8001824:	4b83      	ldr	r3, [pc, #524]	; (8001a34 <xac_dinh_toa_do_ran+0x28c>)
 8001826:	f993 3000 	ldrsb.w	r3, [r3]
 800182a:	b2db      	uxtb	r3, r3
 800182c:	3b01      	subs	r3, #1
 800182e:	b2db      	uxtb	r3, r3
 8001830:	73fb      	strb	r3, [r7, #15]
 8001832:	e035      	b.n	80018a0 <xac_dinh_toa_do_ran+0xf8>
    {
        toa_do_ran[i] = toa_do_ran[i-1];
 8001834:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001838:	1e5a      	subs	r2, r3, #1
 800183a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800183e:	497b      	ldr	r1, [pc, #492]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 8001840:	5689      	ldrsb	r1, [r1, r2]
 8001842:	4a7a      	ldr	r2, [pc, #488]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 8001844:	54d1      	strb	r1, [r2, r3]
        hang = toa_do_ran[i] / 8;
 8001846:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800184a:	4a78      	ldr	r2, [pc, #480]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 800184c:	56d3      	ldrsb	r3, [r2, r3]
 800184e:	2b00      	cmp	r3, #0
 8001850:	da00      	bge.n	8001854 <xac_dinh_toa_do_ran+0xac>
 8001852:	3307      	adds	r3, #7
 8001854:	10db      	asrs	r3, r3, #3
 8001856:	73bb      	strb	r3, [r7, #14]
        cot = toa_do_ran[i] % 8;
 8001858:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800185c:	4a73      	ldr	r2, [pc, #460]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 800185e:	56d3      	ldrsb	r3, [r2, r3]
 8001860:	425a      	negs	r2, r3
 8001862:	f003 0307 	and.w	r3, r3, #7
 8001866:	f002 0207 	and.w	r2, r2, #7
 800186a:	bf58      	it	pl
 800186c:	4253      	negpl	r3, r2
 800186e:	737b      	strb	r3, [r7, #13]
        gia_tri_in[hang] |= (1 << cot);
 8001870:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001874:	4a6e      	ldr	r2, [pc, #440]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 8001876:	5cd3      	ldrb	r3, [r2, r3]
 8001878:	b25a      	sxtb	r2, r3
 800187a:	f997 300d 	ldrsb.w	r3, [r7, #13]
 800187e:	2101      	movs	r1, #1
 8001880:	fa01 f303 	lsl.w	r3, r1, r3
 8001884:	b25b      	sxtb	r3, r3
 8001886:	4313      	orrs	r3, r2
 8001888:	b25a      	sxtb	r2, r3
 800188a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800188e:	b2d1      	uxtb	r1, r2
 8001890:	4a67      	ldr	r2, [pc, #412]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 8001892:	54d1      	strb	r1, [r2, r3]
    for (i = chieu_dai_ran - 1; i >= 1; i--)
 8001894:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001898:	b2db      	uxtb	r3, r3
 800189a:	3b01      	subs	r3, #1
 800189c:	b2db      	uxtb	r3, r3
 800189e:	73fb      	strb	r3, [r7, #15]
 80018a0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018a4:	2b00      	cmp	r3, #0
 80018a6:	dcc5      	bgt.n	8001834 <xac_dinh_toa_do_ran+0x8c>
    }

    // Xác định tọa độ đầu rắn mới theo hướng đã xác định
    switch (huong_hien_tai)
 80018a8:	79fb      	ldrb	r3, [r7, #7]
 80018aa:	2b03      	cmp	r3, #3
 80018ac:	f200 81e6 	bhi.w	8001c7c <xac_dinh_toa_do_ran+0x4d4>
 80018b0:	a201      	add	r2, pc, #4	; (adr r2, 80018b8 <xac_dinh_toa_do_ran+0x110>)
 80018b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80018b6:	bf00      	nop
 80018b8:	080018c9 	.word	0x080018c9
 80018bc:	08001aa1 	.word	0x08001aa1
 80018c0:	080019b3 	.word	0x080019b3
 80018c4:	08001b85 	.word	0x08001b85
    {
    	case huong_len:
    		if (toa_do_ran[i] / 8 == 7)
 80018c8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018cc:	4a57      	ldr	r2, [pc, #348]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80018ce:	56d3      	ldrsb	r3, [r2, r3]
 80018d0:	b2db      	uxtb	r3, r3
 80018d2:	3b38      	subs	r3, #56	; 0x38
 80018d4:	b2db      	uxtb	r3, r3
 80018d6:	2b07      	cmp	r3, #7
 80018d8:	d837      	bhi.n	800194a <xac_dinh_toa_do_ran+0x1a2>
    		{
    			toa_do_ran[i] %= 8;
 80018da:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018de:	4a53      	ldr	r2, [pc, #332]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80018e0:	56d3      	ldrsb	r3, [r2, r3]
 80018e2:	f997 200f 	ldrsb.w	r2, [r7, #15]
 80018e6:	4259      	negs	r1, r3
 80018e8:	f003 0307 	and.w	r3, r3, #7
 80018ec:	f001 0107 	and.w	r1, r1, #7
 80018f0:	bf58      	it	pl
 80018f2:	424b      	negpl	r3, r1
 80018f4:	b259      	sxtb	r1, r3
 80018f6:	4b4d      	ldr	r3, [pc, #308]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80018f8:	5499      	strb	r1, [r3, r2]
    			hang = toa_do_ran[i] / 8;
 80018fa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018fe:	4a4b      	ldr	r2, [pc, #300]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 8001900:	56d3      	ldrsb	r3, [r2, r3]
 8001902:	2b00      	cmp	r3, #0
 8001904:	da00      	bge.n	8001908 <xac_dinh_toa_do_ran+0x160>
 8001906:	3307      	adds	r3, #7
 8001908:	10db      	asrs	r3, r3, #3
 800190a:	73bb      	strb	r3, [r7, #14]
    			cot = toa_do_ran[i] % 8;
 800190c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001910:	4a46      	ldr	r2, [pc, #280]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 8001912:	56d3      	ldrsb	r3, [r2, r3]
 8001914:	425a      	negs	r2, r3
 8001916:	f003 0307 	and.w	r3, r3, #7
 800191a:	f002 0207 	and.w	r2, r2, #7
 800191e:	bf58      	it	pl
 8001920:	4253      	negpl	r3, r2
 8001922:	737b      	strb	r3, [r7, #13]
    			gia_tri_in[hang] |= (1 << cot);
 8001924:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001928:	4a41      	ldr	r2, [pc, #260]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 800192a:	5cd3      	ldrb	r3, [r2, r3]
 800192c:	b25a      	sxtb	r2, r3
 800192e:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001932:	2101      	movs	r1, #1
 8001934:	fa01 f303 	lsl.w	r3, r1, r3
 8001938:	b25b      	sxtb	r3, r3
 800193a:	4313      	orrs	r3, r2
 800193c:	b25a      	sxtb	r2, r3
 800193e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001942:	b2d1      	uxtb	r1, r2
 8001944:	4a3a      	ldr	r2, [pc, #232]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 8001946:	54d1      	strb	r1, [r2, r3]
    			toa_do_ran[i] += 8;
    			hang = toa_do_ran[i] / 8;
    			cot = toa_do_ran[i] % 8;
    			gia_tri_in[hang] |= (1 << cot);
    		}
    		break;
 8001948:	e199      	b.n	8001c7e <xac_dinh_toa_do_ran+0x4d6>
    			toa_do_ran[i] += 8;
 800194a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800194e:	4a37      	ldr	r2, [pc, #220]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 8001950:	56d3      	ldrsb	r3, [r2, r3]
 8001952:	b2db      	uxtb	r3, r3
 8001954:	3308      	adds	r3, #8
 8001956:	b2da      	uxtb	r2, r3
 8001958:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800195c:	b251      	sxtb	r1, r2
 800195e:	4a33      	ldr	r2, [pc, #204]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 8001960:	54d1      	strb	r1, [r2, r3]
    			hang = toa_do_ran[i] / 8;
 8001962:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001966:	4a31      	ldr	r2, [pc, #196]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 8001968:	56d3      	ldrsb	r3, [r2, r3]
 800196a:	2b00      	cmp	r3, #0
 800196c:	da00      	bge.n	8001970 <xac_dinh_toa_do_ran+0x1c8>
 800196e:	3307      	adds	r3, #7
 8001970:	10db      	asrs	r3, r3, #3
 8001972:	73bb      	strb	r3, [r7, #14]
    			cot = toa_do_ran[i] % 8;
 8001974:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001978:	4a2c      	ldr	r2, [pc, #176]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 800197a:	56d3      	ldrsb	r3, [r2, r3]
 800197c:	425a      	negs	r2, r3
 800197e:	f003 0307 	and.w	r3, r3, #7
 8001982:	f002 0207 	and.w	r2, r2, #7
 8001986:	bf58      	it	pl
 8001988:	4253      	negpl	r3, r2
 800198a:	737b      	strb	r3, [r7, #13]
    			gia_tri_in[hang] |= (1 << cot);
 800198c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001990:	4a27      	ldr	r2, [pc, #156]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 8001992:	5cd3      	ldrb	r3, [r2, r3]
 8001994:	b25a      	sxtb	r2, r3
 8001996:	f997 300d 	ldrsb.w	r3, [r7, #13]
 800199a:	2101      	movs	r1, #1
 800199c:	fa01 f303 	lsl.w	r3, r1, r3
 80019a0:	b25b      	sxtb	r3, r3
 80019a2:	4313      	orrs	r3, r2
 80019a4:	b25a      	sxtb	r2, r3
 80019a6:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80019aa:	b2d1      	uxtb	r1, r2
 80019ac:	4a20      	ldr	r2, [pc, #128]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 80019ae:	54d1      	strb	r1, [r2, r3]
    		break;
 80019b0:	e165      	b.n	8001c7e <xac_dinh_toa_do_ran+0x4d6>
    	case huong_xuong:
    		if (toa_do_ran[i] / 8 == 0)
 80019b2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019b6:	4a1d      	ldr	r2, [pc, #116]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80019b8:	56d3      	ldrsb	r3, [r2, r3]
 80019ba:	b2db      	uxtb	r3, r3
 80019bc:	3307      	adds	r3, #7
 80019be:	b2db      	uxtb	r3, r3
 80019c0:	2b0e      	cmp	r3, #14
 80019c2:	d839      	bhi.n	8001a38 <xac_dinh_toa_do_ran+0x290>
    		{
    			toa_do_ran[i] += 56;
 80019c4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019c8:	4a18      	ldr	r2, [pc, #96]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80019ca:	56d3      	ldrsb	r3, [r2, r3]
 80019cc:	b2db      	uxtb	r3, r3
 80019ce:	3338      	adds	r3, #56	; 0x38
 80019d0:	b2da      	uxtb	r2, r3
 80019d2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019d6:	b251      	sxtb	r1, r2
 80019d8:	4a14      	ldr	r2, [pc, #80]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80019da:	54d1      	strb	r1, [r2, r3]
    			hang = toa_do_ran[i] / 8;
 80019dc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019e0:	4a12      	ldr	r2, [pc, #72]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80019e2:	56d3      	ldrsb	r3, [r2, r3]
 80019e4:	2b00      	cmp	r3, #0
 80019e6:	da00      	bge.n	80019ea <xac_dinh_toa_do_ran+0x242>
 80019e8:	3307      	adds	r3, #7
 80019ea:	10db      	asrs	r3, r3, #3
 80019ec:	73bb      	strb	r3, [r7, #14]
    			cot = toa_do_ran[i] % 8;
 80019ee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019f2:	4a0e      	ldr	r2, [pc, #56]	; (8001a2c <xac_dinh_toa_do_ran+0x284>)
 80019f4:	56d3      	ldrsb	r3, [r2, r3]
 80019f6:	425a      	negs	r2, r3
 80019f8:	f003 0307 	and.w	r3, r3, #7
 80019fc:	f002 0207 	and.w	r2, r2, #7
 8001a00:	bf58      	it	pl
 8001a02:	4253      	negpl	r3, r2
 8001a04:	737b      	strb	r3, [r7, #13]
    			gia_tri_in[hang] |= (1 << cot);
 8001a06:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001a0a:	4a09      	ldr	r2, [pc, #36]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 8001a0c:	5cd3      	ldrb	r3, [r2, r3]
 8001a0e:	b25a      	sxtb	r2, r3
 8001a10:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001a14:	2101      	movs	r1, #1
 8001a16:	fa01 f303 	lsl.w	r3, r1, r3
 8001a1a:	b25b      	sxtb	r3, r3
 8001a1c:	4313      	orrs	r3, r2
 8001a1e:	b25a      	sxtb	r2, r3
 8001a20:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001a24:	b2d1      	uxtb	r1, r2
 8001a26:	4a02      	ldr	r2, [pc, #8]	; (8001a30 <xac_dinh_toa_do_ran+0x288>)
 8001a28:	54d1      	strb	r1, [r2, r3]
    			toa_do_ran[i] -= 8;
    			hang = toa_do_ran[i] / 8;
    			cot = toa_do_ran[i] % 8;
    			gia_tri_in[hang] |= (1 << cot);
    		}
    		break;
 8001a2a:	e128      	b.n	8001c7e <xac_dinh_toa_do_ran+0x4d6>
 8001a2c:	200000b0 	.word	0x200000b0
 8001a30:	200000f0 	.word	0x200000f0
 8001a34:	200000ad 	.word	0x200000ad
    			toa_do_ran[i] -= 8;
 8001a38:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a3c:	4a93      	ldr	r2, [pc, #588]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001a3e:	56d3      	ldrsb	r3, [r2, r3]
 8001a40:	b2db      	uxtb	r3, r3
 8001a42:	3b08      	subs	r3, #8
 8001a44:	b2da      	uxtb	r2, r3
 8001a46:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a4a:	b251      	sxtb	r1, r2
 8001a4c:	4a8f      	ldr	r2, [pc, #572]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001a4e:	54d1      	strb	r1, [r2, r3]
    			hang = toa_do_ran[i] / 8;
 8001a50:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a54:	4a8d      	ldr	r2, [pc, #564]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001a56:	56d3      	ldrsb	r3, [r2, r3]
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	da00      	bge.n	8001a5e <xac_dinh_toa_do_ran+0x2b6>
 8001a5c:	3307      	adds	r3, #7
 8001a5e:	10db      	asrs	r3, r3, #3
 8001a60:	73bb      	strb	r3, [r7, #14]
    			cot = toa_do_ran[i] % 8;
 8001a62:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001a66:	4a89      	ldr	r2, [pc, #548]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001a68:	56d3      	ldrsb	r3, [r2, r3]
 8001a6a:	425a      	negs	r2, r3
 8001a6c:	f003 0307 	and.w	r3, r3, #7
 8001a70:	f002 0207 	and.w	r2, r2, #7
 8001a74:	bf58      	it	pl
 8001a76:	4253      	negpl	r3, r2
 8001a78:	737b      	strb	r3, [r7, #13]
    			gia_tri_in[hang] |= (1 << cot);
 8001a7a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001a7e:	4a84      	ldr	r2, [pc, #528]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001a80:	5cd3      	ldrb	r3, [r2, r3]
 8001a82:	b25a      	sxtb	r2, r3
 8001a84:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001a88:	2101      	movs	r1, #1
 8001a8a:	fa01 f303 	lsl.w	r3, r1, r3
 8001a8e:	b25b      	sxtb	r3, r3
 8001a90:	4313      	orrs	r3, r2
 8001a92:	b25a      	sxtb	r2, r3
 8001a94:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001a98:	b2d1      	uxtb	r1, r2
 8001a9a:	4a7d      	ldr	r2, [pc, #500]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001a9c:	54d1      	strb	r1, [r2, r3]
    		break;
 8001a9e:	e0ee      	b.n	8001c7e <xac_dinh_toa_do_ran+0x4d6>
    	case huong_trai:
    		if ((toa_do_ran[i] % 8) == 0)
 8001aa0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001aa4:	4a79      	ldr	r2, [pc, #484]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001aa6:	56d3      	ldrsb	r3, [r2, r3]
 8001aa8:	b2db      	uxtb	r3, r3
 8001aaa:	f003 0307 	and.w	r3, r3, #7
 8001aae:	b2db      	uxtb	r3, r3
 8001ab0:	2b00      	cmp	r3, #0
 8001ab2:	d133      	bne.n	8001b1c <xac_dinh_toa_do_ran+0x374>
    		{
    			toa_do_ran[i] += 7;
 8001ab4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ab8:	4a74      	ldr	r2, [pc, #464]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001aba:	56d3      	ldrsb	r3, [r2, r3]
 8001abc:	b2db      	uxtb	r3, r3
 8001abe:	3307      	adds	r3, #7
 8001ac0:	b2da      	uxtb	r2, r3
 8001ac2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ac6:	b251      	sxtb	r1, r2
 8001ac8:	4a70      	ldr	r2, [pc, #448]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001aca:	54d1      	strb	r1, [r2, r3]
    			hang = toa_do_ran[i] / 8;
 8001acc:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ad0:	4a6e      	ldr	r2, [pc, #440]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001ad2:	56d3      	ldrsb	r3, [r2, r3]
 8001ad4:	2b00      	cmp	r3, #0
 8001ad6:	da00      	bge.n	8001ada <xac_dinh_toa_do_ran+0x332>
 8001ad8:	3307      	adds	r3, #7
 8001ada:	10db      	asrs	r3, r3, #3
 8001adc:	73bb      	strb	r3, [r7, #14]
    			cot = toa_do_ran[i] % 8;
 8001ade:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ae2:	4a6a      	ldr	r2, [pc, #424]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001ae4:	56d3      	ldrsb	r3, [r2, r3]
 8001ae6:	425a      	negs	r2, r3
 8001ae8:	f003 0307 	and.w	r3, r3, #7
 8001aec:	f002 0207 	and.w	r2, r2, #7
 8001af0:	bf58      	it	pl
 8001af2:	4253      	negpl	r3, r2
 8001af4:	737b      	strb	r3, [r7, #13]
    			gia_tri_in[hang] |= (1 << cot);
 8001af6:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001afa:	4a65      	ldr	r2, [pc, #404]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001afc:	5cd3      	ldrb	r3, [r2, r3]
 8001afe:	b25a      	sxtb	r2, r3
 8001b00:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001b04:	2101      	movs	r1, #1
 8001b06:	fa01 f303 	lsl.w	r3, r1, r3
 8001b0a:	b25b      	sxtb	r3, r3
 8001b0c:	4313      	orrs	r3, r2
 8001b0e:	b25a      	sxtb	r2, r3
 8001b10:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001b14:	b2d1      	uxtb	r1, r2
 8001b16:	4a5e      	ldr	r2, [pc, #376]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001b18:	54d1      	strb	r1, [r2, r3]
    			toa_do_ran[i] -= 1;
    			hang = toa_do_ran[i] / 8;
    			cot = toa_do_ran[i] % 8;
    			gia_tri_in[hang] |= (1 << cot);
    		}
    		break;
 8001b1a:	e0b0      	b.n	8001c7e <xac_dinh_toa_do_ran+0x4d6>
    			toa_do_ran[i] -= 1;
 8001b1c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b20:	4a5a      	ldr	r2, [pc, #360]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001b22:	56d3      	ldrsb	r3, [r2, r3]
 8001b24:	b2db      	uxtb	r3, r3
 8001b26:	3b01      	subs	r3, #1
 8001b28:	b2da      	uxtb	r2, r3
 8001b2a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b2e:	b251      	sxtb	r1, r2
 8001b30:	4a56      	ldr	r2, [pc, #344]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001b32:	54d1      	strb	r1, [r2, r3]
    			hang = toa_do_ran[i] / 8;
 8001b34:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b38:	4a54      	ldr	r2, [pc, #336]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001b3a:	56d3      	ldrsb	r3, [r2, r3]
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	da00      	bge.n	8001b42 <xac_dinh_toa_do_ran+0x39a>
 8001b40:	3307      	adds	r3, #7
 8001b42:	10db      	asrs	r3, r3, #3
 8001b44:	73bb      	strb	r3, [r7, #14]
    			cot = toa_do_ran[i] % 8;
 8001b46:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b4a:	4a50      	ldr	r2, [pc, #320]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001b4c:	56d3      	ldrsb	r3, [r2, r3]
 8001b4e:	425a      	negs	r2, r3
 8001b50:	f003 0307 	and.w	r3, r3, #7
 8001b54:	f002 0207 	and.w	r2, r2, #7
 8001b58:	bf58      	it	pl
 8001b5a:	4253      	negpl	r3, r2
 8001b5c:	737b      	strb	r3, [r7, #13]
    			gia_tri_in[hang] |= (1 << cot);
 8001b5e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001b62:	4a4b      	ldr	r2, [pc, #300]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001b64:	5cd3      	ldrb	r3, [r2, r3]
 8001b66:	b25a      	sxtb	r2, r3
 8001b68:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001b6c:	2101      	movs	r1, #1
 8001b6e:	fa01 f303 	lsl.w	r3, r1, r3
 8001b72:	b25b      	sxtb	r3, r3
 8001b74:	4313      	orrs	r3, r2
 8001b76:	b25a      	sxtb	r2, r3
 8001b78:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001b7c:	b2d1      	uxtb	r1, r2
 8001b7e:	4a44      	ldr	r2, [pc, #272]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001b80:	54d1      	strb	r1, [r2, r3]
    		break;
 8001b82:	e07c      	b.n	8001c7e <xac_dinh_toa_do_ran+0x4d6>
    	case huong_phai:
    		if (toa_do_ran[i] % 8 == 7)
 8001b84:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001b88:	4a40      	ldr	r2, [pc, #256]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001b8a:	56d3      	ldrsb	r3, [r2, r3]
 8001b8c:	425a      	negs	r2, r3
 8001b8e:	f003 0307 	and.w	r3, r3, #7
 8001b92:	f002 0207 	and.w	r2, r2, #7
 8001b96:	bf58      	it	pl
 8001b98:	4253      	negpl	r3, r2
 8001b9a:	b25b      	sxtb	r3, r3
 8001b9c:	2b07      	cmp	r3, #7
 8001b9e:	d133      	bne.n	8001c08 <xac_dinh_toa_do_ran+0x460>
    		{
    			toa_do_ran[i] -= 7;
 8001ba0:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ba4:	4a39      	ldr	r2, [pc, #228]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001ba6:	56d3      	ldrsb	r3, [r2, r3]
 8001ba8:	b2db      	uxtb	r3, r3
 8001baa:	3b07      	subs	r3, #7
 8001bac:	b2da      	uxtb	r2, r3
 8001bae:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001bb2:	b251      	sxtb	r1, r2
 8001bb4:	4a35      	ldr	r2, [pc, #212]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001bb6:	54d1      	strb	r1, [r2, r3]
    			hang = toa_do_ran[i] / 8;
 8001bb8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001bbc:	4a33      	ldr	r2, [pc, #204]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001bbe:	56d3      	ldrsb	r3, [r2, r3]
 8001bc0:	2b00      	cmp	r3, #0
 8001bc2:	da00      	bge.n	8001bc6 <xac_dinh_toa_do_ran+0x41e>
 8001bc4:	3307      	adds	r3, #7
 8001bc6:	10db      	asrs	r3, r3, #3
 8001bc8:	73bb      	strb	r3, [r7, #14]
    			cot = toa_do_ran[i] % 8;
 8001bca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001bce:	4a2f      	ldr	r2, [pc, #188]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001bd0:	56d3      	ldrsb	r3, [r2, r3]
 8001bd2:	425a      	negs	r2, r3
 8001bd4:	f003 0307 	and.w	r3, r3, #7
 8001bd8:	f002 0207 	and.w	r2, r2, #7
 8001bdc:	bf58      	it	pl
 8001bde:	4253      	negpl	r3, r2
 8001be0:	737b      	strb	r3, [r7, #13]
    			gia_tri_in[hang] |= (1 << cot);
 8001be2:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001be6:	4a2a      	ldr	r2, [pc, #168]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001be8:	5cd3      	ldrb	r3, [r2, r3]
 8001bea:	b25a      	sxtb	r2, r3
 8001bec:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001bf0:	2101      	movs	r1, #1
 8001bf2:	fa01 f303 	lsl.w	r3, r1, r3
 8001bf6:	b25b      	sxtb	r3, r3
 8001bf8:	4313      	orrs	r3, r2
 8001bfa:	b25a      	sxtb	r2, r3
 8001bfc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001c00:	b2d1      	uxtb	r1, r2
 8001c02:	4a23      	ldr	r2, [pc, #140]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001c04:	54d1      	strb	r1, [r2, r3]
    			hang = toa_do_ran[i] / 8;
    			cot = toa_do_ran[i] % 8;
    			gia_tri_in[hang] |= (1 << cot);
    			i++;
    		}
    		break;
 8001c06:	e03a      	b.n	8001c7e <xac_dinh_toa_do_ran+0x4d6>
    			toa_do_ran[i] += 1;
 8001c08:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001c0c:	4a1f      	ldr	r2, [pc, #124]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001c0e:	56d3      	ldrsb	r3, [r2, r3]
 8001c10:	b2db      	uxtb	r3, r3
 8001c12:	3301      	adds	r3, #1
 8001c14:	b2da      	uxtb	r2, r3
 8001c16:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001c1a:	b251      	sxtb	r1, r2
 8001c1c:	4a1b      	ldr	r2, [pc, #108]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001c1e:	54d1      	strb	r1, [r2, r3]
    			hang = toa_do_ran[i] / 8;
 8001c20:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001c24:	4a19      	ldr	r2, [pc, #100]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001c26:	56d3      	ldrsb	r3, [r2, r3]
 8001c28:	2b00      	cmp	r3, #0
 8001c2a:	da00      	bge.n	8001c2e <xac_dinh_toa_do_ran+0x486>
 8001c2c:	3307      	adds	r3, #7
 8001c2e:	10db      	asrs	r3, r3, #3
 8001c30:	73bb      	strb	r3, [r7, #14]
    			cot = toa_do_ran[i] % 8;
 8001c32:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001c36:	4a15      	ldr	r2, [pc, #84]	; (8001c8c <xac_dinh_toa_do_ran+0x4e4>)
 8001c38:	56d3      	ldrsb	r3, [r2, r3]
 8001c3a:	425a      	negs	r2, r3
 8001c3c:	f003 0307 	and.w	r3, r3, #7
 8001c40:	f002 0207 	and.w	r2, r2, #7
 8001c44:	bf58      	it	pl
 8001c46:	4253      	negpl	r3, r2
 8001c48:	737b      	strb	r3, [r7, #13]
    			gia_tri_in[hang] |= (1 << cot);
 8001c4a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001c4e:	4a10      	ldr	r2, [pc, #64]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001c50:	5cd3      	ldrb	r3, [r2, r3]
 8001c52:	b25a      	sxtb	r2, r3
 8001c54:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001c58:	2101      	movs	r1, #1
 8001c5a:	fa01 f303 	lsl.w	r3, r1, r3
 8001c5e:	b25b      	sxtb	r3, r3
 8001c60:	4313      	orrs	r3, r2
 8001c62:	b25a      	sxtb	r2, r3
 8001c64:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8001c68:	b2d1      	uxtb	r1, r2
 8001c6a:	4a09      	ldr	r2, [pc, #36]	; (8001c90 <xac_dinh_toa_do_ran+0x4e8>)
 8001c6c:	54d1      	strb	r1, [r2, r3]
    			i++;
 8001c6e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001c72:	b2db      	uxtb	r3, r3
 8001c74:	3301      	adds	r3, #1
 8001c76:	b2db      	uxtb	r3, r3
 8001c78:	73fb      	strb	r3, [r7, #15]
    		break;
 8001c7a:	e000      	b.n	8001c7e <xac_dinh_toa_do_ran+0x4d6>
    	default:
    		break;
 8001c7c:	bf00      	nop
    }
}
 8001c7e:	bf00      	nop
 8001c80:	3714      	adds	r7, #20
 8001c82:	46bd      	mov	sp, r7
 8001c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c88:	4770      	bx	lr
 8001c8a:	bf00      	nop
 8001c8c:	200000b0 	.word	0x200000b0
 8001c90:	200000f0 	.word	0x200000f0

08001c94 <xac_dinh_toa_do_moi>:

void xac_dinh_toa_do_moi()
{
 8001c94:	b580      	push	{r7, lr}
 8001c96:	b082      	sub	sp, #8
 8001c98:	af00      	add	r7, sp, #0
    int8_t temp, hang, cot;

    // xóa tọa độ mồi cũ
    hang = toa_do_moi / 8;
 8001c9a:	4b3e      	ldr	r3, [pc, #248]	; (8001d94 <xac_dinh_toa_do_moi+0x100>)
 8001c9c:	f993 3000 	ldrsb.w	r3, [r3]
 8001ca0:	2b00      	cmp	r3, #0
 8001ca2:	da00      	bge.n	8001ca6 <xac_dinh_toa_do_moi+0x12>
 8001ca4:	3307      	adds	r3, #7
 8001ca6:	10db      	asrs	r3, r3, #3
 8001ca8:	717b      	strb	r3, [r7, #5]
    cot = toa_do_moi % 8;
 8001caa:	4b3a      	ldr	r3, [pc, #232]	; (8001d94 <xac_dinh_toa_do_moi+0x100>)
 8001cac:	f993 3000 	ldrsb.w	r3, [r3]
 8001cb0:	425a      	negs	r2, r3
 8001cb2:	f003 0307 	and.w	r3, r3, #7
 8001cb6:	f002 0207 	and.w	r2, r2, #7
 8001cba:	bf58      	it	pl
 8001cbc:	4253      	negpl	r3, r2
 8001cbe:	713b      	strb	r3, [r7, #4]
    gia_tri_in[hang] &= ~(1 << cot);
 8001cc0:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001cc4:	4a34      	ldr	r2, [pc, #208]	; (8001d98 <xac_dinh_toa_do_moi+0x104>)
 8001cc6:	5cd3      	ldrb	r3, [r2, r3]
 8001cc8:	b25a      	sxtb	r2, r3
 8001cca:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001cce:	2101      	movs	r1, #1
 8001cd0:	fa01 f303 	lsl.w	r3, r1, r3
 8001cd4:	b25b      	sxtb	r3, r3
 8001cd6:	43db      	mvns	r3, r3
 8001cd8:	b25b      	sxtb	r3, r3
 8001cda:	4013      	ands	r3, r2
 8001cdc:	b25a      	sxtb	r2, r3
 8001cde:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001ce2:	b2d1      	uxtb	r1, r2
 8001ce4:	4a2c      	ldr	r2, [pc, #176]	; (8001d98 <xac_dinh_toa_do_moi+0x104>)
 8001ce6:	54d1      	strb	r1, [r2, r3]

    // tìm tọa độ mồi mới
    do
    {
        temp = rand() % 64;
 8001ce8:	f001 faf6 	bl	80032d8 <rand>
 8001cec:	4603      	mov	r3, r0
 8001cee:	425a      	negs	r2, r3
 8001cf0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001cf4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8001cf8:	bf58      	it	pl
 8001cfa:	4253      	negpl	r3, r2
 8001cfc:	71fb      	strb	r3, [r7, #7]
        for (uint8_t i = 0; i < chieu_dai_ran; i++)
 8001cfe:	2300      	movs	r3, #0
 8001d00:	71bb      	strb	r3, [r7, #6]
 8001d02:	e00d      	b.n	8001d20 <xac_dinh_toa_do_moi+0x8c>
        {
            if (temp == toa_do_ran[i])
 8001d04:	79bb      	ldrb	r3, [r7, #6]
 8001d06:	4a25      	ldr	r2, [pc, #148]	; (8001d9c <xac_dinh_toa_do_moi+0x108>)
 8001d08:	56d3      	ldrsb	r3, [r2, r3]
 8001d0a:	f997 2007 	ldrsb.w	r2, [r7, #7]
 8001d0e:	429a      	cmp	r2, r3
 8001d10:	d103      	bne.n	8001d1a <xac_dinh_toa_do_moi+0x86>
            {
                temp = toa_do_moi;
 8001d12:	4b20      	ldr	r3, [pc, #128]	; (8001d94 <xac_dinh_toa_do_moi+0x100>)
 8001d14:	781b      	ldrb	r3, [r3, #0]
 8001d16:	71fb      	strb	r3, [r7, #7]
                break;
 8001d18:	e008      	b.n	8001d2c <xac_dinh_toa_do_moi+0x98>
        for (uint8_t i = 0; i < chieu_dai_ran; i++)
 8001d1a:	79bb      	ldrb	r3, [r7, #6]
 8001d1c:	3301      	adds	r3, #1
 8001d1e:	71bb      	strb	r3, [r7, #6]
 8001d20:	79bb      	ldrb	r3, [r7, #6]
 8001d22:	4a1f      	ldr	r2, [pc, #124]	; (8001da0 <xac_dinh_toa_do_moi+0x10c>)
 8001d24:	f992 2000 	ldrsb.w	r2, [r2]
 8001d28:	4293      	cmp	r3, r2
 8001d2a:	dbeb      	blt.n	8001d04 <xac_dinh_toa_do_moi+0x70>
            }
        }
    } while (temp == toa_do_moi);
 8001d2c:	4b19      	ldr	r3, [pc, #100]	; (8001d94 <xac_dinh_toa_do_moi+0x100>)
 8001d2e:	f993 3000 	ldrsb.w	r3, [r3]
 8001d32:	f997 2007 	ldrsb.w	r2, [r7, #7]
 8001d36:	429a      	cmp	r2, r3
 8001d38:	d0d6      	beq.n	8001ce8 <xac_dinh_toa_do_moi+0x54>

    toa_do_moi = temp;
 8001d3a:	4a16      	ldr	r2, [pc, #88]	; (8001d94 <xac_dinh_toa_do_moi+0x100>)
 8001d3c:	79fb      	ldrb	r3, [r7, #7]
 8001d3e:	7013      	strb	r3, [r2, #0]
    hang = toa_do_moi / 8;
 8001d40:	4b14      	ldr	r3, [pc, #80]	; (8001d94 <xac_dinh_toa_do_moi+0x100>)
 8001d42:	f993 3000 	ldrsb.w	r3, [r3]
 8001d46:	2b00      	cmp	r3, #0
 8001d48:	da00      	bge.n	8001d4c <xac_dinh_toa_do_moi+0xb8>
 8001d4a:	3307      	adds	r3, #7
 8001d4c:	10db      	asrs	r3, r3, #3
 8001d4e:	717b      	strb	r3, [r7, #5]
    cot = toa_do_moi % 8;
 8001d50:	4b10      	ldr	r3, [pc, #64]	; (8001d94 <xac_dinh_toa_do_moi+0x100>)
 8001d52:	f993 3000 	ldrsb.w	r3, [r3]
 8001d56:	425a      	negs	r2, r3
 8001d58:	f003 0307 	and.w	r3, r3, #7
 8001d5c:	f002 0207 	and.w	r2, r2, #7
 8001d60:	bf58      	it	pl
 8001d62:	4253      	negpl	r3, r2
 8001d64:	713b      	strb	r3, [r7, #4]
    gia_tri_in[hang] |= (1 << cot);
 8001d66:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001d6a:	4a0b      	ldr	r2, [pc, #44]	; (8001d98 <xac_dinh_toa_do_moi+0x104>)
 8001d6c:	5cd3      	ldrb	r3, [r2, r3]
 8001d6e:	b25a      	sxtb	r2, r3
 8001d70:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8001d74:	2101      	movs	r1, #1
 8001d76:	fa01 f303 	lsl.w	r3, r1, r3
 8001d7a:	b25b      	sxtb	r3, r3
 8001d7c:	4313      	orrs	r3, r2
 8001d7e:	b25a      	sxtb	r2, r3
 8001d80:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001d84:	b2d1      	uxtb	r1, r2
 8001d86:	4a04      	ldr	r2, [pc, #16]	; (8001d98 <xac_dinh_toa_do_moi+0x104>)
 8001d88:	54d1      	strb	r1, [r2, r3]
}
 8001d8a:	bf00      	nop
 8001d8c:	3708      	adds	r7, #8
 8001d8e:	46bd      	mov	sp, r7
 8001d90:	bd80      	pop	{r7, pc}
 8001d92:	bf00      	nop
 8001d94:	200000ac 	.word	0x200000ac
 8001d98:	200000f0 	.word	0x200000f0
 8001d9c:	200000b0 	.word	0x200000b0
 8001da0:	200000ad 	.word	0x200000ad

08001da4 <nhap_nhay_moi>:

void nhap_nhay_moi()
{
 8001da4:	b580      	push	{r7, lr}
 8001da6:	b082      	sub	sp, #8
 8001da8:	af00      	add	r7, sp, #0
    int8_t hang, cot;
    static uint8_t status = 0;

    if (status == 0)
 8001daa:	4b36      	ldr	r3, [pc, #216]	; (8001e84 <nhap_nhay_moi+0xe0>)
 8001dac:	781b      	ldrb	r3, [r3, #0]
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d12a      	bne.n	8001e08 <nhap_nhay_moi+0x64>
    {
    	hang = toa_do_moi / 8;
 8001db2:	4b35      	ldr	r3, [pc, #212]	; (8001e88 <nhap_nhay_moi+0xe4>)
 8001db4:	f993 3000 	ldrsb.w	r3, [r3]
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	da00      	bge.n	8001dbe <nhap_nhay_moi+0x1a>
 8001dbc:	3307      	adds	r3, #7
 8001dbe:	10db      	asrs	r3, r3, #3
 8001dc0:	71fb      	strb	r3, [r7, #7]
    	cot = toa_do_moi % 8;
 8001dc2:	4b31      	ldr	r3, [pc, #196]	; (8001e88 <nhap_nhay_moi+0xe4>)
 8001dc4:	f993 3000 	ldrsb.w	r3, [r3]
 8001dc8:	425a      	negs	r2, r3
 8001dca:	f003 0307 	and.w	r3, r3, #7
 8001dce:	f002 0207 	and.w	r2, r2, #7
 8001dd2:	bf58      	it	pl
 8001dd4:	4253      	negpl	r3, r2
 8001dd6:	71bb      	strb	r3, [r7, #6]
    	gia_tri_in[hang] &= ~(1 << cot);
 8001dd8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ddc:	4a2b      	ldr	r2, [pc, #172]	; (8001e8c <nhap_nhay_moi+0xe8>)
 8001dde:	5cd3      	ldrb	r3, [r2, r3]
 8001de0:	b25a      	sxtb	r2, r3
 8001de2:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001de6:	2101      	movs	r1, #1
 8001de8:	fa01 f303 	lsl.w	r3, r1, r3
 8001dec:	b25b      	sxtb	r3, r3
 8001dee:	43db      	mvns	r3, r3
 8001df0:	b25b      	sxtb	r3, r3
 8001df2:	4013      	ands	r3, r2
 8001df4:	b25a      	sxtb	r2, r3
 8001df6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dfa:	b2d1      	uxtb	r1, r2
 8001dfc:	4a23      	ldr	r2, [pc, #140]	; (8001e8c <nhap_nhay_moi+0xe8>)
 8001dfe:	54d1      	strb	r1, [r2, r3]
    	status = 1;
 8001e00:	4b20      	ldr	r3, [pc, #128]	; (8001e84 <nhap_nhay_moi+0xe0>)
 8001e02:	2201      	movs	r2, #1
 8001e04:	701a      	strb	r2, [r3, #0]
 8001e06:	e027      	b.n	8001e58 <nhap_nhay_moi+0xb4>
    }
    else
    {
    	hang = toa_do_moi / 8;
 8001e08:	4b1f      	ldr	r3, [pc, #124]	; (8001e88 <nhap_nhay_moi+0xe4>)
 8001e0a:	f993 3000 	ldrsb.w	r3, [r3]
 8001e0e:	2b00      	cmp	r3, #0
 8001e10:	da00      	bge.n	8001e14 <nhap_nhay_moi+0x70>
 8001e12:	3307      	adds	r3, #7
 8001e14:	10db      	asrs	r3, r3, #3
 8001e16:	71fb      	strb	r3, [r7, #7]
    	cot = toa_do_moi % 8;
 8001e18:	4b1b      	ldr	r3, [pc, #108]	; (8001e88 <nhap_nhay_moi+0xe4>)
 8001e1a:	f993 3000 	ldrsb.w	r3, [r3]
 8001e1e:	425a      	negs	r2, r3
 8001e20:	f003 0307 	and.w	r3, r3, #7
 8001e24:	f002 0207 	and.w	r2, r2, #7
 8001e28:	bf58      	it	pl
 8001e2a:	4253      	negpl	r3, r2
 8001e2c:	71bb      	strb	r3, [r7, #6]
    	gia_tri_in[hang] |= (1 << cot);
 8001e2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e32:	4a16      	ldr	r2, [pc, #88]	; (8001e8c <nhap_nhay_moi+0xe8>)
 8001e34:	5cd3      	ldrb	r3, [r2, r3]
 8001e36:	b25a      	sxtb	r2, r3
 8001e38:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8001e3c:	2101      	movs	r1, #1
 8001e3e:	fa01 f303 	lsl.w	r3, r1, r3
 8001e42:	b25b      	sxtb	r3, r3
 8001e44:	4313      	orrs	r3, r2
 8001e46:	b25a      	sxtb	r2, r3
 8001e48:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e4c:	b2d1      	uxtb	r1, r2
 8001e4e:	4a0f      	ldr	r2, [pc, #60]	; (8001e8c <nhap_nhay_moi+0xe8>)
 8001e50:	54d1      	strb	r1, [r2, r3]
    	status = 0;
 8001e52:	4b0c      	ldr	r3, [pc, #48]	; (8001e84 <nhap_nhay_moi+0xe0>)
 8001e54:	2200      	movs	r2, #0
 8001e56:	701a      	strb	r2, [r3, #0]
    }

    SPI_Send_Data(SPI2, ((hang + 1) << 8) | gia_tri_in[hang]);
 8001e58:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e5c:	3301      	adds	r3, #1
 8001e5e:	021b      	lsls	r3, r3, #8
 8001e60:	b21a      	sxth	r2, r3
 8001e62:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e66:	4909      	ldr	r1, [pc, #36]	; (8001e8c <nhap_nhay_moi+0xe8>)
 8001e68:	5ccb      	ldrb	r3, [r1, r3]
 8001e6a:	b21b      	sxth	r3, r3
 8001e6c:	4313      	orrs	r3, r2
 8001e6e:	b21b      	sxth	r3, r3
 8001e70:	b29b      	uxth	r3, r3
 8001e72:	4619      	mov	r1, r3
 8001e74:	4806      	ldr	r0, [pc, #24]	; (8001e90 <nhap_nhay_moi+0xec>)
 8001e76:	f7ff fa11 	bl	800129c <SPI_Send_Data>
}
 8001e7a:	bf00      	nop
 8001e7c:	3708      	adds	r7, #8
 8001e7e:	46bd      	mov	sp, r7
 8001e80:	bd80      	pop	{r7, pc}
 8001e82:	bf00      	nop
 8001e84:	200000fa 	.word	0x200000fa
 8001e88:	200000ac 	.word	0x200000ac
 8001e8c:	200000f0 	.word	0x200000f0
 8001e90:	40003800 	.word	0x40003800

08001e94 <kiem_tra_ran_an_moi>:

uint8_t kiem_tra_ran_an_moi(huong_t huong_hien_tai)
{
 8001e94:	b480      	push	{r7}
 8001e96:	b083      	sub	sp, #12
 8001e98:	af00      	add	r7, sp, #0
 8001e9a:	4603      	mov	r3, r0
 8001e9c:	71fb      	strb	r3, [r7, #7]
    if (abs(toa_do_moi - toa_do_ran[0]) == 8)
 8001e9e:	4b18      	ldr	r3, [pc, #96]	; (8001f00 <kiem_tra_ran_an_moi+0x6c>)
 8001ea0:	f993 3000 	ldrsb.w	r3, [r3]
 8001ea4:	461a      	mov	r2, r3
 8001ea6:	4b17      	ldr	r3, [pc, #92]	; (8001f04 <kiem_tra_ran_an_moi+0x70>)
 8001ea8:	f993 3000 	ldrsb.w	r3, [r3]
 8001eac:	1ad3      	subs	r3, r2, r3
 8001eae:	2b00      	cmp	r3, #0
 8001eb0:	bfb8      	it	lt
 8001eb2:	425b      	neglt	r3, r3
 8001eb4:	2b08      	cmp	r3, #8
 8001eb6:	d107      	bne.n	8001ec8 <kiem_tra_ran_an_moi+0x34>
    {
        if ((huong_hien_tai == huong_len) || (huong_hien_tai == huong_xuong))
 8001eb8:	79fb      	ldrb	r3, [r7, #7]
 8001eba:	2b00      	cmp	r3, #0
 8001ebc:	d002      	beq.n	8001ec4 <kiem_tra_ran_an_moi+0x30>
 8001ebe:	79fb      	ldrb	r3, [r7, #7]
 8001ec0:	2b02      	cmp	r3, #2
 8001ec2:	d116      	bne.n	8001ef2 <kiem_tra_ran_an_moi+0x5e>
        {
            return 1;
 8001ec4:	2301      	movs	r3, #1
 8001ec6:	e015      	b.n	8001ef4 <kiem_tra_ran_an_moi+0x60>
        }
    }
    else if (abs(toa_do_moi - toa_do_ran[0]) == 1)
 8001ec8:	4b0d      	ldr	r3, [pc, #52]	; (8001f00 <kiem_tra_ran_an_moi+0x6c>)
 8001eca:	f993 3000 	ldrsb.w	r3, [r3]
 8001ece:	461a      	mov	r2, r3
 8001ed0:	4b0c      	ldr	r3, [pc, #48]	; (8001f04 <kiem_tra_ran_an_moi+0x70>)
 8001ed2:	f993 3000 	ldrsb.w	r3, [r3]
 8001ed6:	1ad3      	subs	r3, r2, r3
 8001ed8:	2b00      	cmp	r3, #0
 8001eda:	bfb8      	it	lt
 8001edc:	425b      	neglt	r3, r3
 8001ede:	2b01      	cmp	r3, #1
 8001ee0:	d107      	bne.n	8001ef2 <kiem_tra_ran_an_moi+0x5e>
    {
        if ((huong_hien_tai == huong_trai) || (huong_hien_tai == huong_phai))
 8001ee2:	79fb      	ldrb	r3, [r7, #7]
 8001ee4:	2b01      	cmp	r3, #1
 8001ee6:	d002      	beq.n	8001eee <kiem_tra_ran_an_moi+0x5a>
 8001ee8:	79fb      	ldrb	r3, [r7, #7]
 8001eea:	2b03      	cmp	r3, #3
 8001eec:	d101      	bne.n	8001ef2 <kiem_tra_ran_an_moi+0x5e>
        {
            return 1;
 8001eee:	2301      	movs	r3, #1
 8001ef0:	e000      	b.n	8001ef4 <kiem_tra_ran_an_moi+0x60>
        }
    }

    return 0;
 8001ef2:	2300      	movs	r3, #0
}
 8001ef4:	4618      	mov	r0, r3
 8001ef6:	370c      	adds	r7, #12
 8001ef8:	46bd      	mov	sp, r7
 8001efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001efe:	4770      	bx	lr
 8001f00:	200000ac 	.word	0x200000ac
 8001f04:	200000b0 	.word	0x200000b0

08001f08 <tang_chieu_dai_ran>:

void tang_chieu_dai_ran()
{
 8001f08:	b480      	push	{r7}
 8001f0a:	b083      	sub	sp, #12
 8001f0c:	af00      	add	r7, sp, #0
    uint8_t i, hang, cot;

    // xóa giá trị tọa độ rắn cũ
    for (uint8_t i = 0; i < chieu_dai_ran; i++)
 8001f0e:	2300      	movs	r3, #0
 8001f10:	71bb      	strb	r3, [r7, #6]
 8001f12:	e028      	b.n	8001f66 <tang_chieu_dai_ran+0x5e>
    {
        hang = toa_do_ran[i] / 8;
 8001f14:	79bb      	ldrb	r3, [r7, #6]
 8001f16:	4a4f      	ldr	r2, [pc, #316]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8001f18:	56d3      	ldrsb	r3, [r2, r3]
 8001f1a:	2b00      	cmp	r3, #0
 8001f1c:	da00      	bge.n	8001f20 <tang_chieu_dai_ran+0x18>
 8001f1e:	3307      	adds	r3, #7
 8001f20:	10db      	asrs	r3, r3, #3
 8001f22:	b25b      	sxtb	r3, r3
 8001f24:	717b      	strb	r3, [r7, #5]
        cot = toa_do_ran[i] % 8;
 8001f26:	79bb      	ldrb	r3, [r7, #6]
 8001f28:	4a4a      	ldr	r2, [pc, #296]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8001f2a:	56d3      	ldrsb	r3, [r2, r3]
 8001f2c:	425a      	negs	r2, r3
 8001f2e:	f003 0307 	and.w	r3, r3, #7
 8001f32:	f002 0207 	and.w	r2, r2, #7
 8001f36:	bf58      	it	pl
 8001f38:	4253      	negpl	r3, r2
 8001f3a:	b25b      	sxtb	r3, r3
 8001f3c:	713b      	strb	r3, [r7, #4]
        gia_tri_in[hang] &= ~(1 << cot);
 8001f3e:	797b      	ldrb	r3, [r7, #5]
 8001f40:	4a45      	ldr	r2, [pc, #276]	; (8002058 <tang_chieu_dai_ran+0x150>)
 8001f42:	5cd3      	ldrb	r3, [r2, r3]
 8001f44:	b25a      	sxtb	r2, r3
 8001f46:	793b      	ldrb	r3, [r7, #4]
 8001f48:	2101      	movs	r1, #1
 8001f4a:	fa01 f303 	lsl.w	r3, r1, r3
 8001f4e:	b25b      	sxtb	r3, r3
 8001f50:	43db      	mvns	r3, r3
 8001f52:	b25b      	sxtb	r3, r3
 8001f54:	4013      	ands	r3, r2
 8001f56:	b25a      	sxtb	r2, r3
 8001f58:	797b      	ldrb	r3, [r7, #5]
 8001f5a:	b2d1      	uxtb	r1, r2
 8001f5c:	4a3e      	ldr	r2, [pc, #248]	; (8002058 <tang_chieu_dai_ran+0x150>)
 8001f5e:	54d1      	strb	r1, [r2, r3]
    for (uint8_t i = 0; i < chieu_dai_ran; i++)
 8001f60:	79bb      	ldrb	r3, [r7, #6]
 8001f62:	3301      	adds	r3, #1
 8001f64:	71bb      	strb	r3, [r7, #6]
 8001f66:	79bb      	ldrb	r3, [r7, #6]
 8001f68:	4a3c      	ldr	r2, [pc, #240]	; (800205c <tang_chieu_dai_ran+0x154>)
 8001f6a:	f992 2000 	ldrsb.w	r2, [r2]
 8001f6e:	4293      	cmp	r3, r2
 8001f70:	dbd0      	blt.n	8001f14 <tang_chieu_dai_ran+0xc>
    }

    chieu_dai_ran++;
 8001f72:	4b3a      	ldr	r3, [pc, #232]	; (800205c <tang_chieu_dai_ran+0x154>)
 8001f74:	f993 3000 	ldrsb.w	r3, [r3]
 8001f78:	b2db      	uxtb	r3, r3
 8001f7a:	3301      	adds	r3, #1
 8001f7c:	b2db      	uxtb	r3, r3
 8001f7e:	b25a      	sxtb	r2, r3
 8001f80:	4b36      	ldr	r3, [pc, #216]	; (800205c <tang_chieu_dai_ran+0x154>)
 8001f82:	701a      	strb	r2, [r3, #0]

    for (i = chieu_dai_ran - 1; i >= 1; i--)
 8001f84:	4b35      	ldr	r3, [pc, #212]	; (800205c <tang_chieu_dai_ran+0x154>)
 8001f86:	f993 3000 	ldrsb.w	r3, [r3]
 8001f8a:	b2db      	uxtb	r3, r3
 8001f8c:	3b01      	subs	r3, #1
 8001f8e:	71fb      	strb	r3, [r7, #7]
 8001f90:	e02d      	b.n	8001fee <tang_chieu_dai_ran+0xe6>
    {
        toa_do_ran[i] = toa_do_ran[i-1];
 8001f92:	79fb      	ldrb	r3, [r7, #7]
 8001f94:	1e5a      	subs	r2, r3, #1
 8001f96:	79fb      	ldrb	r3, [r7, #7]
 8001f98:	492e      	ldr	r1, [pc, #184]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8001f9a:	5689      	ldrsb	r1, [r1, r2]
 8001f9c:	4a2d      	ldr	r2, [pc, #180]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8001f9e:	54d1      	strb	r1, [r2, r3]
        hang = toa_do_ran[i] / 8;
 8001fa0:	79fb      	ldrb	r3, [r7, #7]
 8001fa2:	4a2c      	ldr	r2, [pc, #176]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8001fa4:	56d3      	ldrsb	r3, [r2, r3]
 8001fa6:	2b00      	cmp	r3, #0
 8001fa8:	da00      	bge.n	8001fac <tang_chieu_dai_ran+0xa4>
 8001faa:	3307      	adds	r3, #7
 8001fac:	10db      	asrs	r3, r3, #3
 8001fae:	b25b      	sxtb	r3, r3
 8001fb0:	717b      	strb	r3, [r7, #5]
        cot = toa_do_ran[i] % 8;
 8001fb2:	79fb      	ldrb	r3, [r7, #7]
 8001fb4:	4a27      	ldr	r2, [pc, #156]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8001fb6:	56d3      	ldrsb	r3, [r2, r3]
 8001fb8:	425a      	negs	r2, r3
 8001fba:	f003 0307 	and.w	r3, r3, #7
 8001fbe:	f002 0207 	and.w	r2, r2, #7
 8001fc2:	bf58      	it	pl
 8001fc4:	4253      	negpl	r3, r2
 8001fc6:	b25b      	sxtb	r3, r3
 8001fc8:	713b      	strb	r3, [r7, #4]
        gia_tri_in[hang] |= (1 << cot);
 8001fca:	797b      	ldrb	r3, [r7, #5]
 8001fcc:	4a22      	ldr	r2, [pc, #136]	; (8002058 <tang_chieu_dai_ran+0x150>)
 8001fce:	5cd3      	ldrb	r3, [r2, r3]
 8001fd0:	b25a      	sxtb	r2, r3
 8001fd2:	793b      	ldrb	r3, [r7, #4]
 8001fd4:	2101      	movs	r1, #1
 8001fd6:	fa01 f303 	lsl.w	r3, r1, r3
 8001fda:	b25b      	sxtb	r3, r3
 8001fdc:	4313      	orrs	r3, r2
 8001fde:	b25a      	sxtb	r2, r3
 8001fe0:	797b      	ldrb	r3, [r7, #5]
 8001fe2:	b2d1      	uxtb	r1, r2
 8001fe4:	4a1c      	ldr	r2, [pc, #112]	; (8002058 <tang_chieu_dai_ran+0x150>)
 8001fe6:	54d1      	strb	r1, [r2, r3]
    for (i = chieu_dai_ran - 1; i >= 1; i--)
 8001fe8:	79fb      	ldrb	r3, [r7, #7]
 8001fea:	3b01      	subs	r3, #1
 8001fec:	71fb      	strb	r3, [r7, #7]
 8001fee:	79fb      	ldrb	r3, [r7, #7]
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	d1ce      	bne.n	8001f92 <tang_chieu_dai_ran+0x8a>
    }
    toa_do_ran[i] = toa_do_moi;
 8001ff4:	79fb      	ldrb	r3, [r7, #7]
 8001ff6:	4a1a      	ldr	r2, [pc, #104]	; (8002060 <tang_chieu_dai_ran+0x158>)
 8001ff8:	f992 1000 	ldrsb.w	r1, [r2]
 8001ffc:	4a15      	ldr	r2, [pc, #84]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8001ffe:	54d1      	strb	r1, [r2, r3]
    hang = toa_do_ran[i] / 8;
 8002000:	79fb      	ldrb	r3, [r7, #7]
 8002002:	4a14      	ldr	r2, [pc, #80]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8002004:	56d3      	ldrsb	r3, [r2, r3]
 8002006:	2b00      	cmp	r3, #0
 8002008:	da00      	bge.n	800200c <tang_chieu_dai_ran+0x104>
 800200a:	3307      	adds	r3, #7
 800200c:	10db      	asrs	r3, r3, #3
 800200e:	b25b      	sxtb	r3, r3
 8002010:	717b      	strb	r3, [r7, #5]
    cot = toa_do_ran[i] % 8;
 8002012:	79fb      	ldrb	r3, [r7, #7]
 8002014:	4a0f      	ldr	r2, [pc, #60]	; (8002054 <tang_chieu_dai_ran+0x14c>)
 8002016:	56d3      	ldrsb	r3, [r2, r3]
 8002018:	425a      	negs	r2, r3
 800201a:	f003 0307 	and.w	r3, r3, #7
 800201e:	f002 0207 	and.w	r2, r2, #7
 8002022:	bf58      	it	pl
 8002024:	4253      	negpl	r3, r2
 8002026:	b25b      	sxtb	r3, r3
 8002028:	713b      	strb	r3, [r7, #4]
    gia_tri_in[hang] |= (1 << cot);
 800202a:	797b      	ldrb	r3, [r7, #5]
 800202c:	4a0a      	ldr	r2, [pc, #40]	; (8002058 <tang_chieu_dai_ran+0x150>)
 800202e:	5cd3      	ldrb	r3, [r2, r3]
 8002030:	b25a      	sxtb	r2, r3
 8002032:	793b      	ldrb	r3, [r7, #4]
 8002034:	2101      	movs	r1, #1
 8002036:	fa01 f303 	lsl.w	r3, r1, r3
 800203a:	b25b      	sxtb	r3, r3
 800203c:	4313      	orrs	r3, r2
 800203e:	b25a      	sxtb	r2, r3
 8002040:	797b      	ldrb	r3, [r7, #5]
 8002042:	b2d1      	uxtb	r1, r2
 8002044:	4a04      	ldr	r2, [pc, #16]	; (8002058 <tang_chieu_dai_ran+0x150>)
 8002046:	54d1      	strb	r1, [r2, r3]
}
 8002048:	bf00      	nop
 800204a:	370c      	adds	r7, #12
 800204c:	46bd      	mov	sp, r7
 800204e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002052:	4770      	bx	lr
 8002054:	200000b0 	.word	0x200000b0
 8002058:	200000f0 	.word	0x200000f0
 800205c:	200000ad 	.word	0x200000ad
 8002060:	200000ac 	.word	0x200000ac

08002064 <kiem_tra_trang_thai_ran>:

uint8_t kiem_tra_trang_thai_ran()
{
 8002064:	b480      	push	{r7}
 8002066:	b083      	sub	sp, #12
 8002068:	af00      	add	r7, sp, #0
    for (uint8_t i = 1; i < chieu_dai_ran; i++)
 800206a:	2301      	movs	r3, #1
 800206c:	71fb      	strb	r3, [r7, #7]
 800206e:	e00c      	b.n	800208a <kiem_tra_trang_thai_ran+0x26>
    {
        if (toa_do_ran[0] == toa_do_ran[i])
 8002070:	4b0c      	ldr	r3, [pc, #48]	; (80020a4 <kiem_tra_trang_thai_ran+0x40>)
 8002072:	f993 2000 	ldrsb.w	r2, [r3]
 8002076:	79fb      	ldrb	r3, [r7, #7]
 8002078:	490a      	ldr	r1, [pc, #40]	; (80020a4 <kiem_tra_trang_thai_ran+0x40>)
 800207a:	56cb      	ldrsb	r3, [r1, r3]
 800207c:	429a      	cmp	r2, r3
 800207e:	d101      	bne.n	8002084 <kiem_tra_trang_thai_ran+0x20>
        {
            return 0;
 8002080:	2300      	movs	r3, #0
 8002082:	e009      	b.n	8002098 <kiem_tra_trang_thai_ran+0x34>
    for (uint8_t i = 1; i < chieu_dai_ran; i++)
 8002084:	79fb      	ldrb	r3, [r7, #7]
 8002086:	3301      	adds	r3, #1
 8002088:	71fb      	strb	r3, [r7, #7]
 800208a:	79fb      	ldrb	r3, [r7, #7]
 800208c:	4a06      	ldr	r2, [pc, #24]	; (80020a8 <kiem_tra_trang_thai_ran+0x44>)
 800208e:	f992 2000 	ldrsb.w	r2, [r2]
 8002092:	4293      	cmp	r3, r2
 8002094:	dbec      	blt.n	8002070 <kiem_tra_trang_thai_ran+0xc>
        }
    }

    return 1;
 8002096:	2301      	movs	r3, #1
}
 8002098:	4618      	mov	r0, r3
 800209a:	370c      	adds	r7, #12
 800209c:	46bd      	mov	sp, r7
 800209e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020a2:	4770      	bx	lr
 80020a4:	200000b0 	.word	0x200000b0
 80020a8:	200000ad 	.word	0x200000ad

080020ac <thong_bao_game_over>:

void thong_bao_game_over()
{
 80020ac:	b580      	push	{r7, lr}
 80020ae:	b082      	sub	sp, #8
 80020b0:	af00      	add	r7, sp, #0
	while (button_status == 0)
 80020b2:	e03d      	b.n	8002130 <thong_bao_game_over+0x84>
	{
		for (int8_t i = 0; i < 8; i++)
 80020b4:	2300      	movs	r3, #0
 80020b6:	71fb      	strb	r3, [r7, #7]
 80020b8:	e016      	b.n	80020e8 <thong_bao_game_over+0x3c>
		{
			SPI_Send_Data(SPI2, ((i + 1) << 8) | gia_tri_in[i]);
 80020ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020be:	3301      	adds	r3, #1
 80020c0:	021b      	lsls	r3, r3, #8
 80020c2:	b21a      	sxth	r2, r3
 80020c4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020c8:	491e      	ldr	r1, [pc, #120]	; (8002144 <thong_bao_game_over+0x98>)
 80020ca:	5ccb      	ldrb	r3, [r1, r3]
 80020cc:	b21b      	sxth	r3, r3
 80020ce:	4313      	orrs	r3, r2
 80020d0:	b21b      	sxth	r3, r3
 80020d2:	b29b      	uxth	r3, r3
 80020d4:	4619      	mov	r1, r3
 80020d6:	481c      	ldr	r0, [pc, #112]	; (8002148 <thong_bao_game_over+0x9c>)
 80020d8:	f7ff f8e0 	bl	800129c <SPI_Send_Data>
		for (int8_t i = 0; i < 8; i++)
 80020dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020e0:	b2db      	uxtb	r3, r3
 80020e2:	3301      	adds	r3, #1
 80020e4:	b2db      	uxtb	r3, r3
 80020e6:	71fb      	strb	r3, [r7, #7]
 80020e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80020ec:	2b07      	cmp	r3, #7
 80020ee:	dde4      	ble.n	80020ba <thong_bao_game_over+0xe>
		}

		Delay_ms(500);
 80020f0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80020f4:	f7fe fe0c 	bl	8000d10 <Delay_ms>

		for (int8_t i = 0; i < 8; i++)
 80020f8:	2300      	movs	r3, #0
 80020fa:	71bb      	strb	r3, [r7, #6]
 80020fc:	e010      	b.n	8002120 <thong_bao_game_over+0x74>
		{
			SPI_Send_Data(SPI2, ((i + 1) << 8) | 0);
 80020fe:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8002102:	b29b      	uxth	r3, r3
 8002104:	3301      	adds	r3, #1
 8002106:	b29b      	uxth	r3, r3
 8002108:	021b      	lsls	r3, r3, #8
 800210a:	b29b      	uxth	r3, r3
 800210c:	4619      	mov	r1, r3
 800210e:	480e      	ldr	r0, [pc, #56]	; (8002148 <thong_bao_game_over+0x9c>)
 8002110:	f7ff f8c4 	bl	800129c <SPI_Send_Data>
		for (int8_t i = 0; i < 8; i++)
 8002114:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8002118:	b2db      	uxtb	r3, r3
 800211a:	3301      	adds	r3, #1
 800211c:	b2db      	uxtb	r3, r3
 800211e:	71bb      	strb	r3, [r7, #6]
 8002120:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8002124:	2b07      	cmp	r3, #7
 8002126:	ddea      	ble.n	80020fe <thong_bao_game_over+0x52>
		}

		Delay_ms(500);
 8002128:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800212c:	f7fe fdf0 	bl	8000d10 <Delay_ms>
	while (button_status == 0)
 8002130:	4b06      	ldr	r3, [pc, #24]	; (800214c <thong_bao_game_over+0xa0>)
 8002132:	781b      	ldrb	r3, [r3, #0]
 8002134:	2b00      	cmp	r3, #0
 8002136:	d0bd      	beq.n	80020b4 <thong_bao_game_over+0x8>
	}
}
 8002138:	bf00      	nop
 800213a:	bf00      	nop
 800213c:	3708      	adds	r7, #8
 800213e:	46bd      	mov	sp, r7
 8002140:	bd80      	pop	{r7, pc}
 8002142:	bf00      	nop
 8002144:	200000f0 	.word	0x200000f0
 8002148:	40003800 	.word	0x40003800
 800214c:	200000f9 	.word	0x200000f9

08002150 <xu_ly_chuong_trinh>:

void xu_ly_chuong_trinh()
{
 8002150:	b580      	push	{r7, lr}
 8002152:	af00      	add	r7, sp, #0
	static uint32_t tim_init1, tim_current1, tim_total1 = 0, tim_init2, tim_current2, tim_total2 = 0,  tim_init3, tim_current3, tim_total3 = 0;

	if (game_status == 0)
 8002154:	4b72      	ldr	r3, [pc, #456]	; (8002320 <xu_ly_chuong_trinh+0x1d0>)
 8002156:	781b      	ldrb	r3, [r3, #0]
 8002158:	2b00      	cmp	r3, #0
 800215a:	d115      	bne.n	8002188 <xu_ly_chuong_trinh+0x38>
	{
		cho_vao_game();
 800215c:	f7ff f8e4 	bl	8001328 <cho_vao_game>
		tim_init1 = SysTick_getTick();
 8002160:	f7fe fdca 	bl	8000cf8 <SysTick_getTick>
 8002164:	4603      	mov	r3, r0
 8002166:	4a6f      	ldr	r2, [pc, #444]	; (8002324 <xu_ly_chuong_trinh+0x1d4>)
 8002168:	6013      	str	r3, [r2, #0]
		tim_init2 = tim_init1;
 800216a:	4b6e      	ldr	r3, [pc, #440]	; (8002324 <xu_ly_chuong_trinh+0x1d4>)
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	4a6e      	ldr	r2, [pc, #440]	; (8002328 <xu_ly_chuong_trinh+0x1d8>)
 8002170:	6013      	str	r3, [r2, #0]
		tim_init3 = tim_init1;
 8002172:	4b6c      	ldr	r3, [pc, #432]	; (8002324 <xu_ly_chuong_trinh+0x1d4>)
 8002174:	681b      	ldr	r3, [r3, #0]
 8002176:	4a6d      	ldr	r2, [pc, #436]	; (800232c <xu_ly_chuong_trinh+0x1dc>)
 8002178:	6013      	str	r3, [r2, #0]
		game_status = 1;
 800217a:	4b69      	ldr	r3, [pc, #420]	; (8002320 <xu_ly_chuong_trinh+0x1d0>)
 800217c:	2201      	movs	r2, #1
 800217e:	701a      	strb	r2, [r3, #0]
		khoi_tao_game();
 8002180:	f7ff f934 	bl	80013ec <khoi_tao_game>
		in_man_hinh();
 8002184:	f7ff f9c0 	bl	8001508 <in_man_hinh>
	}

	tim_current1 = SysTick_getTick();
 8002188:	f7fe fdb6 	bl	8000cf8 <SysTick_getTick>
 800218c:	4603      	mov	r3, r0
 800218e:	4a68      	ldr	r2, [pc, #416]	; (8002330 <xu_ly_chuong_trinh+0x1e0>)
 8002190:	6013      	str	r3, [r2, #0]
	if (tim_current1 >= tim_init1)
 8002192:	4b67      	ldr	r3, [pc, #412]	; (8002330 <xu_ly_chuong_trinh+0x1e0>)
 8002194:	681a      	ldr	r2, [r3, #0]
 8002196:	4b63      	ldr	r3, [pc, #396]	; (8002324 <xu_ly_chuong_trinh+0x1d4>)
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	429a      	cmp	r2, r3
 800219c:	d30a      	bcc.n	80021b4 <xu_ly_chuong_trinh+0x64>
	{
		tim_total1 += (tim_current1 - tim_init1);
 800219e:	4b64      	ldr	r3, [pc, #400]	; (8002330 <xu_ly_chuong_trinh+0x1e0>)
 80021a0:	681a      	ldr	r2, [r3, #0]
 80021a2:	4b60      	ldr	r3, [pc, #384]	; (8002324 <xu_ly_chuong_trinh+0x1d4>)
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	1ad2      	subs	r2, r2, r3
 80021a8:	4b62      	ldr	r3, [pc, #392]	; (8002334 <xu_ly_chuong_trinh+0x1e4>)
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	4413      	add	r3, r2
 80021ae:	4a61      	ldr	r2, [pc, #388]	; (8002334 <xu_ly_chuong_trinh+0x1e4>)
 80021b0:	6013      	str	r3, [r2, #0]
 80021b2:	e00a      	b.n	80021ca <xu_ly_chuong_trinh+0x7a>
	}
	else
	{
		tim_total1 += (0xFFFFFFFFu + tim_current1 - tim_init1);
 80021b4:	4b5e      	ldr	r3, [pc, #376]	; (8002330 <xu_ly_chuong_trinh+0x1e0>)
 80021b6:	681a      	ldr	r2, [r3, #0]
 80021b8:	4b5a      	ldr	r3, [pc, #360]	; (8002324 <xu_ly_chuong_trinh+0x1d4>)
 80021ba:	681b      	ldr	r3, [r3, #0]
 80021bc:	1ad2      	subs	r2, r2, r3
 80021be:	4b5d      	ldr	r3, [pc, #372]	; (8002334 <xu_ly_chuong_trinh+0x1e4>)
 80021c0:	681b      	ldr	r3, [r3, #0]
 80021c2:	4413      	add	r3, r2
 80021c4:	3b01      	subs	r3, #1
 80021c6:	4a5b      	ldr	r2, [pc, #364]	; (8002334 <xu_ly_chuong_trinh+0x1e4>)
 80021c8:	6013      	str	r3, [r2, #0]
	}
	tim_init1 = tim_current1;
 80021ca:	4b59      	ldr	r3, [pc, #356]	; (8002330 <xu_ly_chuong_trinh+0x1e0>)
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	4a55      	ldr	r2, [pc, #340]	; (8002324 <xu_ly_chuong_trinh+0x1d4>)
 80021d0:	6013      	str	r3, [r2, #0]

	if (tim_total1 >= 1000)
 80021d2:	4b58      	ldr	r3, [pc, #352]	; (8002334 <xu_ly_chuong_trinh+0x1e4>)
 80021d4:	681b      	ldr	r3, [r3, #0]
 80021d6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80021da:	d33f      	bcc.n	800225c <xu_ly_chuong_trinh+0x10c>
	{
		huong_di_chuyen = xac_dinh_huong_di_chuyen(huong_di_chuyen);
 80021dc:	4b56      	ldr	r3, [pc, #344]	; (8002338 <xu_ly_chuong_trinh+0x1e8>)
 80021de:	781b      	ldrb	r3, [r3, #0]
 80021e0:	4618      	mov	r0, r3
 80021e2:	f7ff f9bd 	bl	8001560 <xac_dinh_huong_di_chuyen>
 80021e6:	4603      	mov	r3, r0
 80021e8:	461a      	mov	r2, r3
 80021ea:	4b53      	ldr	r3, [pc, #332]	; (8002338 <xu_ly_chuong_trinh+0x1e8>)
 80021ec:	701a      	strb	r2, [r3, #0]
		if (kiem_tra_ran_an_moi(huong_di_chuyen))
 80021ee:	4b52      	ldr	r3, [pc, #328]	; (8002338 <xu_ly_chuong_trinh+0x1e8>)
 80021f0:	781b      	ldrb	r3, [r3, #0]
 80021f2:	4618      	mov	r0, r3
 80021f4:	f7ff fe4e 	bl	8001e94 <kiem_tra_ran_an_moi>
 80021f8:	4603      	mov	r3, r0
 80021fa:	2b00      	cmp	r3, #0
 80021fc:	d00e      	beq.n	800221c <xu_ly_chuong_trinh+0xcc>
		{
			tang_chieu_dai_ran();
 80021fe:	f7ff fe83 	bl	8001f08 <tang_chieu_dai_ran>
			xac_dinh_toa_do_moi();
 8002202:	f7ff fd47 	bl	8001c94 <xac_dinh_toa_do_moi>
			xac_dinh_toa_do_ran(huong_di_chuyen);
 8002206:	4b4c      	ldr	r3, [pc, #304]	; (8002338 <xu_ly_chuong_trinh+0x1e8>)
 8002208:	781b      	ldrb	r3, [r3, #0]
 800220a:	4618      	mov	r0, r3
 800220c:	f7ff facc 	bl	80017a8 <xac_dinh_toa_do_ran>
			in_man_hinh();
 8002210:	f7ff f97a 	bl	8001508 <in_man_hinh>
			tim_total3 = 0;
 8002214:	4b49      	ldr	r3, [pc, #292]	; (800233c <xu_ly_chuong_trinh+0x1ec>)
 8002216:	2200      	movs	r2, #0
 8002218:	601a      	str	r2, [r3, #0]
 800221a:	e01c      	b.n	8002256 <xu_ly_chuong_trinh+0x106>
		}
		else
		{
			xac_dinh_toa_do_ran(huong_di_chuyen);
 800221c:	4b46      	ldr	r3, [pc, #280]	; (8002338 <xu_ly_chuong_trinh+0x1e8>)
 800221e:	781b      	ldrb	r3, [r3, #0]
 8002220:	4618      	mov	r0, r3
 8002222:	f7ff fac1 	bl	80017a8 <xac_dinh_toa_do_ran>
			if (!kiem_tra_trang_thai_ran())
 8002226:	f7ff ff1d 	bl	8002064 <kiem_tra_trang_thai_ran>
 800222a:	4603      	mov	r3, r0
 800222c:	2b00      	cmp	r3, #0
 800222e:	d110      	bne.n	8002252 <xu_ly_chuong_trinh+0x102>
			{
				tim_total1 = 0;
 8002230:	4b40      	ldr	r3, [pc, #256]	; (8002334 <xu_ly_chuong_trinh+0x1e4>)
 8002232:	2200      	movs	r2, #0
 8002234:	601a      	str	r2, [r3, #0]
				game_status = 0;
 8002236:	4b3a      	ldr	r3, [pc, #232]	; (8002320 <xu_ly_chuong_trinh+0x1d0>)
 8002238:	2200      	movs	r2, #0
 800223a:	701a      	strb	r2, [r3, #0]
				button_status = 0;
 800223c:	4b40      	ldr	r3, [pc, #256]	; (8002340 <xu_ly_chuong_trinh+0x1f0>)
 800223e:	2200      	movs	r2, #0
 8002240:	701a      	strb	r2, [r3, #0]
				huong_di_chuyen = huong_phai;
 8002242:	4b3d      	ldr	r3, [pc, #244]	; (8002338 <xu_ly_chuong_trinh+0x1e8>)
 8002244:	2203      	movs	r2, #3
 8002246:	701a      	strb	r2, [r3, #0]
				huong_cam_bien = huong_phai;
 8002248:	4b3e      	ldr	r3, [pc, #248]	; (8002344 <xu_ly_chuong_trinh+0x1f4>)
 800224a:	2203      	movs	r2, #3
 800224c:	701a      	strb	r2, [r3, #0]
				thong_bao_game_over();
 800224e:	f7ff ff2d 	bl	80020ac <thong_bao_game_over>
			}
			in_man_hinh();
 8002252:	f7ff f959 	bl	8001508 <in_man_hinh>
		}

		tim_total1 = 0;
 8002256:	4b37      	ldr	r3, [pc, #220]	; (8002334 <xu_ly_chuong_trinh+0x1e4>)
 8002258:	2200      	movs	r2, #0
 800225a:	601a      	str	r2, [r3, #0]
	}

	tim_current2 = SysTick_getTick();
 800225c:	f7fe fd4c 	bl	8000cf8 <SysTick_getTick>
 8002260:	4603      	mov	r3, r0
 8002262:	4a39      	ldr	r2, [pc, #228]	; (8002348 <xu_ly_chuong_trinh+0x1f8>)
 8002264:	6013      	str	r3, [r2, #0]

	if (tim_current2 >= tim_init2)
 8002266:	4b38      	ldr	r3, [pc, #224]	; (8002348 <xu_ly_chuong_trinh+0x1f8>)
 8002268:	681a      	ldr	r2, [r3, #0]
 800226a:	4b2f      	ldr	r3, [pc, #188]	; (8002328 <xu_ly_chuong_trinh+0x1d8>)
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	429a      	cmp	r2, r3
 8002270:	d30a      	bcc.n	8002288 <xu_ly_chuong_trinh+0x138>
	{
		tim_total2 += (tim_current2 - tim_init2);
 8002272:	4b35      	ldr	r3, [pc, #212]	; (8002348 <xu_ly_chuong_trinh+0x1f8>)
 8002274:	681a      	ldr	r2, [r3, #0]
 8002276:	4b2c      	ldr	r3, [pc, #176]	; (8002328 <xu_ly_chuong_trinh+0x1d8>)
 8002278:	681b      	ldr	r3, [r3, #0]
 800227a:	1ad2      	subs	r2, r2, r3
 800227c:	4b33      	ldr	r3, [pc, #204]	; (800234c <xu_ly_chuong_trinh+0x1fc>)
 800227e:	681b      	ldr	r3, [r3, #0]
 8002280:	4413      	add	r3, r2
 8002282:	4a32      	ldr	r2, [pc, #200]	; (800234c <xu_ly_chuong_trinh+0x1fc>)
 8002284:	6013      	str	r3, [r2, #0]
 8002286:	e00a      	b.n	800229e <xu_ly_chuong_trinh+0x14e>
	}
	else
	{
		tim_total2 += (0xFFFFFFFFu + tim_current2 - tim_init2);
 8002288:	4b2f      	ldr	r3, [pc, #188]	; (8002348 <xu_ly_chuong_trinh+0x1f8>)
 800228a:	681a      	ldr	r2, [r3, #0]
 800228c:	4b26      	ldr	r3, [pc, #152]	; (8002328 <xu_ly_chuong_trinh+0x1d8>)
 800228e:	681b      	ldr	r3, [r3, #0]
 8002290:	1ad2      	subs	r2, r2, r3
 8002292:	4b2e      	ldr	r3, [pc, #184]	; (800234c <xu_ly_chuong_trinh+0x1fc>)
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	4413      	add	r3, r2
 8002298:	3b01      	subs	r3, #1
 800229a:	4a2c      	ldr	r2, [pc, #176]	; (800234c <xu_ly_chuong_trinh+0x1fc>)
 800229c:	6013      	str	r3, [r2, #0]
	}
	tim_init2 = tim_current2;
 800229e:	4b2a      	ldr	r3, [pc, #168]	; (8002348 <xu_ly_chuong_trinh+0x1f8>)
 80022a0:	681b      	ldr	r3, [r3, #0]
 80022a2:	4a21      	ldr	r2, [pc, #132]	; (8002328 <xu_ly_chuong_trinh+0x1d8>)
 80022a4:	6013      	str	r3, [r2, #0]

	if (tim_total2 >= 200)
 80022a6:	4b29      	ldr	r3, [pc, #164]	; (800234c <xu_ly_chuong_trinh+0x1fc>)
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	2bc7      	cmp	r3, #199	; 0xc7
 80022ac:	d904      	bls.n	80022b8 <xu_ly_chuong_trinh+0x168>
	{
		nhap_nhay_moi();
 80022ae:	f7ff fd79 	bl	8001da4 <nhap_nhay_moi>
		tim_total2 = 0;
 80022b2:	4b26      	ldr	r3, [pc, #152]	; (800234c <xu_ly_chuong_trinh+0x1fc>)
 80022b4:	2200      	movs	r2, #0
 80022b6:	601a      	str	r2, [r3, #0]
	}

	tim_current3 = SysTick_getTick();
 80022b8:	f7fe fd1e 	bl	8000cf8 <SysTick_getTick>
 80022bc:	4603      	mov	r3, r0
 80022be:	4a24      	ldr	r2, [pc, #144]	; (8002350 <xu_ly_chuong_trinh+0x200>)
 80022c0:	6013      	str	r3, [r2, #0]

	if (tim_current3 >= tim_init3)
 80022c2:	4b23      	ldr	r3, [pc, #140]	; (8002350 <xu_ly_chuong_trinh+0x200>)
 80022c4:	681a      	ldr	r2, [r3, #0]
 80022c6:	4b19      	ldr	r3, [pc, #100]	; (800232c <xu_ly_chuong_trinh+0x1dc>)
 80022c8:	681b      	ldr	r3, [r3, #0]
 80022ca:	429a      	cmp	r2, r3
 80022cc:	d30a      	bcc.n	80022e4 <xu_ly_chuong_trinh+0x194>
	{
		tim_total3 += (tim_current3 - tim_init3);
 80022ce:	4b20      	ldr	r3, [pc, #128]	; (8002350 <xu_ly_chuong_trinh+0x200>)
 80022d0:	681a      	ldr	r2, [r3, #0]
 80022d2:	4b16      	ldr	r3, [pc, #88]	; (800232c <xu_ly_chuong_trinh+0x1dc>)
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	1ad2      	subs	r2, r2, r3
 80022d8:	4b18      	ldr	r3, [pc, #96]	; (800233c <xu_ly_chuong_trinh+0x1ec>)
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	4413      	add	r3, r2
 80022de:	4a17      	ldr	r2, [pc, #92]	; (800233c <xu_ly_chuong_trinh+0x1ec>)
 80022e0:	6013      	str	r3, [r2, #0]
 80022e2:	e00a      	b.n	80022fa <xu_ly_chuong_trinh+0x1aa>
	}
	else
	{
		tim_total3 += (0xFFFFFFFFu + tim_current3 - tim_init3);
 80022e4:	4b1a      	ldr	r3, [pc, #104]	; (8002350 <xu_ly_chuong_trinh+0x200>)
 80022e6:	681a      	ldr	r2, [r3, #0]
 80022e8:	4b10      	ldr	r3, [pc, #64]	; (800232c <xu_ly_chuong_trinh+0x1dc>)
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	1ad2      	subs	r2, r2, r3
 80022ee:	4b13      	ldr	r3, [pc, #76]	; (800233c <xu_ly_chuong_trinh+0x1ec>)
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	4413      	add	r3, r2
 80022f4:	3b01      	subs	r3, #1
 80022f6:	4a11      	ldr	r2, [pc, #68]	; (800233c <xu_ly_chuong_trinh+0x1ec>)
 80022f8:	6013      	str	r3, [r2, #0]
	}
	tim_init3 = tim_current3;
 80022fa:	4b15      	ldr	r3, [pc, #84]	; (8002350 <xu_ly_chuong_trinh+0x200>)
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	4a0b      	ldr	r2, [pc, #44]	; (800232c <xu_ly_chuong_trinh+0x1dc>)
 8002300:	6013      	str	r3, [r2, #0]

	if (tim_total3 >= 5000)
 8002302:	4b0e      	ldr	r3, [pc, #56]	; (800233c <xu_ly_chuong_trinh+0x1ec>)
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	f241 3287 	movw	r2, #4999	; 0x1387
 800230a:	4293      	cmp	r3, r2
 800230c:	d906      	bls.n	800231c <xu_ly_chuong_trinh+0x1cc>
	{
		xac_dinh_toa_do_moi();
 800230e:	f7ff fcc1 	bl	8001c94 <xac_dinh_toa_do_moi>
		in_man_hinh();
 8002312:	f7ff f8f9 	bl	8001508 <in_man_hinh>
		tim_total3 = 0;
 8002316:	4b09      	ldr	r3, [pc, #36]	; (800233c <xu_ly_chuong_trinh+0x1ec>)
 8002318:	2200      	movs	r2, #0
 800231a:	601a      	str	r2, [r3, #0]
	}
}
 800231c:	bf00      	nop
 800231e:	bd80      	pop	{r7, pc}
 8002320:	200000f8 	.word	0x200000f8
 8002324:	200000fc 	.word	0x200000fc
 8002328:	20000100 	.word	0x20000100
 800232c:	20000104 	.word	0x20000104
 8002330:	20000108 	.word	0x20000108
 8002334:	2000010c 	.word	0x2000010c
 8002338:	20000000 	.word	0x20000000
 800233c:	20000110 	.word	0x20000110
 8002340:	200000f9 	.word	0x200000f9
 8002344:	20000001 	.word	0x20000001
 8002348:	20000114 	.word	0x20000114
 800234c:	20000118 	.word	0x20000118
 8002350:	2000011c 	.word	0x2000011c

08002354 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002354:	b480      	push	{r7}
 8002356:	af00      	add	r7, sp, #0
	return 1;
 8002358:	2301      	movs	r3, #1
}
 800235a:	4618      	mov	r0, r3
 800235c:	46bd      	mov	sp, r7
 800235e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002362:	4770      	bx	lr

08002364 <_kill>:

int _kill(int pid, int sig)
{
 8002364:	b580      	push	{r7, lr}
 8002366:	b082      	sub	sp, #8
 8002368:	af00      	add	r7, sp, #0
 800236a:	6078      	str	r0, [r7, #4]
 800236c:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800236e:	f000 ff81 	bl	8003274 <__errno>
 8002372:	4603      	mov	r3, r0
 8002374:	2216      	movs	r2, #22
 8002376:	601a      	str	r2, [r3, #0]
	return -1;
 8002378:	f04f 33ff 	mov.w	r3, #4294967295
}
 800237c:	4618      	mov	r0, r3
 800237e:	3708      	adds	r7, #8
 8002380:	46bd      	mov	sp, r7
 8002382:	bd80      	pop	{r7, pc}

08002384 <_exit>:

void _exit (int status)
{
 8002384:	b580      	push	{r7, lr}
 8002386:	b082      	sub	sp, #8
 8002388:	af00      	add	r7, sp, #0
 800238a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800238c:	f04f 31ff 	mov.w	r1, #4294967295
 8002390:	6878      	ldr	r0, [r7, #4]
 8002392:	f7ff ffe7 	bl	8002364 <_kill>
	while (1) {}		/* Make sure we hang here */
 8002396:	e7fe      	b.n	8002396 <_exit+0x12>

08002398 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002398:	b580      	push	{r7, lr}
 800239a:	b086      	sub	sp, #24
 800239c:	af00      	add	r7, sp, #0
 800239e:	60f8      	str	r0, [r7, #12]
 80023a0:	60b9      	str	r1, [r7, #8]
 80023a2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80023a4:	2300      	movs	r3, #0
 80023a6:	617b      	str	r3, [r7, #20]
 80023a8:	e00a      	b.n	80023c0 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80023aa:	f3af 8000 	nop.w
 80023ae:	4601      	mov	r1, r0
 80023b0:	68bb      	ldr	r3, [r7, #8]
 80023b2:	1c5a      	adds	r2, r3, #1
 80023b4:	60ba      	str	r2, [r7, #8]
 80023b6:	b2ca      	uxtb	r2, r1
 80023b8:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80023ba:	697b      	ldr	r3, [r7, #20]
 80023bc:	3301      	adds	r3, #1
 80023be:	617b      	str	r3, [r7, #20]
 80023c0:	697a      	ldr	r2, [r7, #20]
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	429a      	cmp	r2, r3
 80023c6:	dbf0      	blt.n	80023aa <_read+0x12>
	}

return len;
 80023c8:	687b      	ldr	r3, [r7, #4]
}
 80023ca:	4618      	mov	r0, r3
 80023cc:	3718      	adds	r7, #24
 80023ce:	46bd      	mov	sp, r7
 80023d0:	bd80      	pop	{r7, pc}

080023d2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80023d2:	b580      	push	{r7, lr}
 80023d4:	b086      	sub	sp, #24
 80023d6:	af00      	add	r7, sp, #0
 80023d8:	60f8      	str	r0, [r7, #12]
 80023da:	60b9      	str	r1, [r7, #8]
 80023dc:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80023de:	2300      	movs	r3, #0
 80023e0:	617b      	str	r3, [r7, #20]
 80023e2:	e009      	b.n	80023f8 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80023e4:	68bb      	ldr	r3, [r7, #8]
 80023e6:	1c5a      	adds	r2, r3, #1
 80023e8:	60ba      	str	r2, [r7, #8]
 80023ea:	781b      	ldrb	r3, [r3, #0]
 80023ec:	4618      	mov	r0, r3
 80023ee:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80023f2:	697b      	ldr	r3, [r7, #20]
 80023f4:	3301      	adds	r3, #1
 80023f6:	617b      	str	r3, [r7, #20]
 80023f8:	697a      	ldr	r2, [r7, #20]
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	429a      	cmp	r2, r3
 80023fe:	dbf1      	blt.n	80023e4 <_write+0x12>
	}
	return len;
 8002400:	687b      	ldr	r3, [r7, #4]
}
 8002402:	4618      	mov	r0, r3
 8002404:	3718      	adds	r7, #24
 8002406:	46bd      	mov	sp, r7
 8002408:	bd80      	pop	{r7, pc}

0800240a <_close>:

int _close(int file)
{
 800240a:	b480      	push	{r7}
 800240c:	b083      	sub	sp, #12
 800240e:	af00      	add	r7, sp, #0
 8002410:	6078      	str	r0, [r7, #4]
	return -1;
 8002412:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002416:	4618      	mov	r0, r3
 8002418:	370c      	adds	r7, #12
 800241a:	46bd      	mov	sp, r7
 800241c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002420:	4770      	bx	lr

08002422 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002422:	b480      	push	{r7}
 8002424:	b083      	sub	sp, #12
 8002426:	af00      	add	r7, sp, #0
 8002428:	6078      	str	r0, [r7, #4]
 800242a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800242c:	683b      	ldr	r3, [r7, #0]
 800242e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002432:	605a      	str	r2, [r3, #4]
	return 0;
 8002434:	2300      	movs	r3, #0
}
 8002436:	4618      	mov	r0, r3
 8002438:	370c      	adds	r7, #12
 800243a:	46bd      	mov	sp, r7
 800243c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002440:	4770      	bx	lr

08002442 <_isatty>:

int _isatty(int file)
{
 8002442:	b480      	push	{r7}
 8002444:	b083      	sub	sp, #12
 8002446:	af00      	add	r7, sp, #0
 8002448:	6078      	str	r0, [r7, #4]
	return 1;
 800244a:	2301      	movs	r3, #1
}
 800244c:	4618      	mov	r0, r3
 800244e:	370c      	adds	r7, #12
 8002450:	46bd      	mov	sp, r7
 8002452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002456:	4770      	bx	lr

08002458 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002458:	b480      	push	{r7}
 800245a:	b085      	sub	sp, #20
 800245c:	af00      	add	r7, sp, #0
 800245e:	60f8      	str	r0, [r7, #12]
 8002460:	60b9      	str	r1, [r7, #8]
 8002462:	607a      	str	r2, [r7, #4]
	return 0;
 8002464:	2300      	movs	r3, #0
}
 8002466:	4618      	mov	r0, r3
 8002468:	3714      	adds	r7, #20
 800246a:	46bd      	mov	sp, r7
 800246c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002470:	4770      	bx	lr
	...

08002474 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002474:	b580      	push	{r7, lr}
 8002476:	b086      	sub	sp, #24
 8002478:	af00      	add	r7, sp, #0
 800247a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800247c:	4a14      	ldr	r2, [pc, #80]	; (80024d0 <_sbrk+0x5c>)
 800247e:	4b15      	ldr	r3, [pc, #84]	; (80024d4 <_sbrk+0x60>)
 8002480:	1ad3      	subs	r3, r2, r3
 8002482:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002484:	697b      	ldr	r3, [r7, #20]
 8002486:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002488:	4b13      	ldr	r3, [pc, #76]	; (80024d8 <_sbrk+0x64>)
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	2b00      	cmp	r3, #0
 800248e:	d102      	bne.n	8002496 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002490:	4b11      	ldr	r3, [pc, #68]	; (80024d8 <_sbrk+0x64>)
 8002492:	4a12      	ldr	r2, [pc, #72]	; (80024dc <_sbrk+0x68>)
 8002494:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002496:	4b10      	ldr	r3, [pc, #64]	; (80024d8 <_sbrk+0x64>)
 8002498:	681a      	ldr	r2, [r3, #0]
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	4413      	add	r3, r2
 800249e:	693a      	ldr	r2, [r7, #16]
 80024a0:	429a      	cmp	r2, r3
 80024a2:	d207      	bcs.n	80024b4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80024a4:	f000 fee6 	bl	8003274 <__errno>
 80024a8:	4603      	mov	r3, r0
 80024aa:	220c      	movs	r2, #12
 80024ac:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80024ae:	f04f 33ff 	mov.w	r3, #4294967295
 80024b2:	e009      	b.n	80024c8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80024b4:	4b08      	ldr	r3, [pc, #32]	; (80024d8 <_sbrk+0x64>)
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80024ba:	4b07      	ldr	r3, [pc, #28]	; (80024d8 <_sbrk+0x64>)
 80024bc:	681a      	ldr	r2, [r3, #0]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	4413      	add	r3, r2
 80024c2:	4a05      	ldr	r2, [pc, #20]	; (80024d8 <_sbrk+0x64>)
 80024c4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80024c6:	68fb      	ldr	r3, [r7, #12]
}
 80024c8:	4618      	mov	r0, r3
 80024ca:	3718      	adds	r7, #24
 80024cc:	46bd      	mov	sp, r7
 80024ce:	bd80      	pop	{r7, pc}
 80024d0:	20018000 	.word	0x20018000
 80024d4:	00000400 	.word	0x00000400
 80024d8:	20000120 	.word	0x20000120
 80024dc:	20000138 	.word	0x20000138

080024e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80024e0:	480d      	ldr	r0, [pc, #52]	; (8002518 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80024e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80024e4:	f000 f826 	bl	8002534 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80024e8:	480c      	ldr	r0, [pc, #48]	; (800251c <LoopForever+0x6>)
  ldr r1, =_edata
 80024ea:	490d      	ldr	r1, [pc, #52]	; (8002520 <LoopForever+0xa>)
  ldr r2, =_sidata
 80024ec:	4a0d      	ldr	r2, [pc, #52]	; (8002524 <LoopForever+0xe>)
  movs r3, #0
 80024ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80024f0:	e002      	b.n	80024f8 <LoopCopyDataInit>

080024f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80024f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80024f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80024f6:	3304      	adds	r3, #4

080024f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80024f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80024fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80024fc:	d3f9      	bcc.n	80024f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80024fe:	4a0a      	ldr	r2, [pc, #40]	; (8002528 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002500:	4c0a      	ldr	r4, [pc, #40]	; (800252c <LoopForever+0x16>)
  movs r3, #0
 8002502:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002504:	e001      	b.n	800250a <LoopFillZerobss>

08002506 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002506:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002508:	3204      	adds	r2, #4

0800250a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800250a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800250c:	d3fb      	bcc.n	8002506 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800250e:	f000 feb7 	bl	8003280 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002512:	f7fe fbbd 	bl	8000c90 <main>

08002516 <LoopForever>:

LoopForever:
    b LoopForever
 8002516:	e7fe      	b.n	8002516 <LoopForever>
  ldr   r0, =_estack
 8002518:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800251c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002520:	2000008c 	.word	0x2000008c
  ldr r2, =_sidata
 8002524:	080058c0 	.word	0x080058c0
  ldr r2, =_sbss
 8002528:	2000008c 	.word	0x2000008c
  ldr r4, =_ebss
 800252c:	20000134 	.word	0x20000134

08002530 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002530:	e7fe      	b.n	8002530 <ADC_IRQHandler>
	...

08002534 <SystemInit>:
 8002534:	b580      	push	{r7, lr}
 8002536:	af00      	add	r7, sp, #0
 8002538:	4b16      	ldr	r3, [pc, #88]	; (8002594 <SystemInit+0x60>)
 800253a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800253e:	4a15      	ldr	r2, [pc, #84]	; (8002594 <SystemInit+0x60>)
 8002540:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002544:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002548:	4b13      	ldr	r3, [pc, #76]	; (8002598 <SystemInit+0x64>)
 800254a:	681b      	ldr	r3, [r3, #0]
 800254c:	4a12      	ldr	r2, [pc, #72]	; (8002598 <SystemInit+0x64>)
 800254e:	f043 0301 	orr.w	r3, r3, #1
 8002552:	6013      	str	r3, [r2, #0]
 8002554:	4b10      	ldr	r3, [pc, #64]	; (8002598 <SystemInit+0x64>)
 8002556:	2200      	movs	r2, #0
 8002558:	609a      	str	r2, [r3, #8]
 800255a:	4b0f      	ldr	r3, [pc, #60]	; (8002598 <SystemInit+0x64>)
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	4a0e      	ldr	r2, [pc, #56]	; (8002598 <SystemInit+0x64>)
 8002560:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8002564:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002568:	6013      	str	r3, [r2, #0]
 800256a:	4b0b      	ldr	r3, [pc, #44]	; (8002598 <SystemInit+0x64>)
 800256c:	4a0b      	ldr	r2, [pc, #44]	; (800259c <SystemInit+0x68>)
 800256e:	605a      	str	r2, [r3, #4]
 8002570:	4b09      	ldr	r3, [pc, #36]	; (8002598 <SystemInit+0x64>)
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	4a08      	ldr	r2, [pc, #32]	; (8002598 <SystemInit+0x64>)
 8002576:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800257a:	6013      	str	r3, [r2, #0]
 800257c:	4b06      	ldr	r3, [pc, #24]	; (8002598 <SystemInit+0x64>)
 800257e:	2200      	movs	r2, #0
 8002580:	60da      	str	r2, [r3, #12]
 8002582:	f000 f88f 	bl	80026a4 <SetSysClock>
 8002586:	4b03      	ldr	r3, [pc, #12]	; (8002594 <SystemInit+0x60>)
 8002588:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800258c:	609a      	str	r2, [r3, #8]
 800258e:	bf00      	nop
 8002590:	bd80      	pop	{r7, pc}
 8002592:	bf00      	nop
 8002594:	e000ed00 	.word	0xe000ed00
 8002598:	40023800 	.word	0x40023800
 800259c:	24003010 	.word	0x24003010

080025a0 <SystemCoreClockUpdate>:
 80025a0:	b480      	push	{r7}
 80025a2:	b087      	sub	sp, #28
 80025a4:	af00      	add	r7, sp, #0
 80025a6:	2300      	movs	r3, #0
 80025a8:	613b      	str	r3, [r7, #16]
 80025aa:	2300      	movs	r3, #0
 80025ac:	617b      	str	r3, [r7, #20]
 80025ae:	2302      	movs	r3, #2
 80025b0:	60fb      	str	r3, [r7, #12]
 80025b2:	2300      	movs	r3, #0
 80025b4:	60bb      	str	r3, [r7, #8]
 80025b6:	2302      	movs	r3, #2
 80025b8:	607b      	str	r3, [r7, #4]
 80025ba:	4b35      	ldr	r3, [pc, #212]	; (8002690 <SystemCoreClockUpdate+0xf0>)
 80025bc:	689b      	ldr	r3, [r3, #8]
 80025be:	f003 030c 	and.w	r3, r3, #12
 80025c2:	613b      	str	r3, [r7, #16]
 80025c4:	693b      	ldr	r3, [r7, #16]
 80025c6:	2b08      	cmp	r3, #8
 80025c8:	d011      	beq.n	80025ee <SystemCoreClockUpdate+0x4e>
 80025ca:	693b      	ldr	r3, [r7, #16]
 80025cc:	2b08      	cmp	r3, #8
 80025ce:	d844      	bhi.n	800265a <SystemCoreClockUpdate+0xba>
 80025d0:	693b      	ldr	r3, [r7, #16]
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d003      	beq.n	80025de <SystemCoreClockUpdate+0x3e>
 80025d6:	693b      	ldr	r3, [r7, #16]
 80025d8:	2b04      	cmp	r3, #4
 80025da:	d004      	beq.n	80025e6 <SystemCoreClockUpdate+0x46>
 80025dc:	e03d      	b.n	800265a <SystemCoreClockUpdate+0xba>
 80025de:	4b2d      	ldr	r3, [pc, #180]	; (8002694 <SystemCoreClockUpdate+0xf4>)
 80025e0:	4a2d      	ldr	r2, [pc, #180]	; (8002698 <SystemCoreClockUpdate+0xf8>)
 80025e2:	601a      	str	r2, [r3, #0]
 80025e4:	e03d      	b.n	8002662 <SystemCoreClockUpdate+0xc2>
 80025e6:	4b2b      	ldr	r3, [pc, #172]	; (8002694 <SystemCoreClockUpdate+0xf4>)
 80025e8:	4a2c      	ldr	r2, [pc, #176]	; (800269c <SystemCoreClockUpdate+0xfc>)
 80025ea:	601a      	str	r2, [r3, #0]
 80025ec:	e039      	b.n	8002662 <SystemCoreClockUpdate+0xc2>
 80025ee:	4b28      	ldr	r3, [pc, #160]	; (8002690 <SystemCoreClockUpdate+0xf0>)
 80025f0:	685b      	ldr	r3, [r3, #4]
 80025f2:	0d9b      	lsrs	r3, r3, #22
 80025f4:	f003 0301 	and.w	r3, r3, #1
 80025f8:	60bb      	str	r3, [r7, #8]
 80025fa:	4b25      	ldr	r3, [pc, #148]	; (8002690 <SystemCoreClockUpdate+0xf0>)
 80025fc:	685b      	ldr	r3, [r3, #4]
 80025fe:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002602:	607b      	str	r3, [r7, #4]
 8002604:	68bb      	ldr	r3, [r7, #8]
 8002606:	2b00      	cmp	r3, #0
 8002608:	d00c      	beq.n	8002624 <SystemCoreClockUpdate+0x84>
 800260a:	4a24      	ldr	r2, [pc, #144]	; (800269c <SystemCoreClockUpdate+0xfc>)
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002612:	4a1f      	ldr	r2, [pc, #124]	; (8002690 <SystemCoreClockUpdate+0xf0>)
 8002614:	6852      	ldr	r2, [r2, #4]
 8002616:	0992      	lsrs	r2, r2, #6
 8002618:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800261c:	fb02 f303 	mul.w	r3, r2, r3
 8002620:	617b      	str	r3, [r7, #20]
 8002622:	e00b      	b.n	800263c <SystemCoreClockUpdate+0x9c>
 8002624:	4a1c      	ldr	r2, [pc, #112]	; (8002698 <SystemCoreClockUpdate+0xf8>)
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	fbb2 f3f3 	udiv	r3, r2, r3
 800262c:	4a18      	ldr	r2, [pc, #96]	; (8002690 <SystemCoreClockUpdate+0xf0>)
 800262e:	6852      	ldr	r2, [r2, #4]
 8002630:	0992      	lsrs	r2, r2, #6
 8002632:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002636:	fb02 f303 	mul.w	r3, r2, r3
 800263a:	617b      	str	r3, [r7, #20]
 800263c:	4b14      	ldr	r3, [pc, #80]	; (8002690 <SystemCoreClockUpdate+0xf0>)
 800263e:	685b      	ldr	r3, [r3, #4]
 8002640:	0c1b      	lsrs	r3, r3, #16
 8002642:	f003 0303 	and.w	r3, r3, #3
 8002646:	3301      	adds	r3, #1
 8002648:	005b      	lsls	r3, r3, #1
 800264a:	60fb      	str	r3, [r7, #12]
 800264c:	697a      	ldr	r2, [r7, #20]
 800264e:	68fb      	ldr	r3, [r7, #12]
 8002650:	fbb2 f3f3 	udiv	r3, r2, r3
 8002654:	4a0f      	ldr	r2, [pc, #60]	; (8002694 <SystemCoreClockUpdate+0xf4>)
 8002656:	6013      	str	r3, [r2, #0]
 8002658:	e003      	b.n	8002662 <SystemCoreClockUpdate+0xc2>
 800265a:	4b0e      	ldr	r3, [pc, #56]	; (8002694 <SystemCoreClockUpdate+0xf4>)
 800265c:	4a0e      	ldr	r2, [pc, #56]	; (8002698 <SystemCoreClockUpdate+0xf8>)
 800265e:	601a      	str	r2, [r3, #0]
 8002660:	bf00      	nop
 8002662:	4b0b      	ldr	r3, [pc, #44]	; (8002690 <SystemCoreClockUpdate+0xf0>)
 8002664:	689b      	ldr	r3, [r3, #8]
 8002666:	091b      	lsrs	r3, r3, #4
 8002668:	f003 030f 	and.w	r3, r3, #15
 800266c:	4a0c      	ldr	r2, [pc, #48]	; (80026a0 <SystemCoreClockUpdate+0x100>)
 800266e:	5cd3      	ldrb	r3, [r2, r3]
 8002670:	b2db      	uxtb	r3, r3
 8002672:	613b      	str	r3, [r7, #16]
 8002674:	4b07      	ldr	r3, [pc, #28]	; (8002694 <SystemCoreClockUpdate+0xf4>)
 8002676:	681a      	ldr	r2, [r3, #0]
 8002678:	693b      	ldr	r3, [r7, #16]
 800267a:	fa22 f303 	lsr.w	r3, r2, r3
 800267e:	4a05      	ldr	r2, [pc, #20]	; (8002694 <SystemCoreClockUpdate+0xf4>)
 8002680:	6013      	str	r3, [r2, #0]
 8002682:	bf00      	nop
 8002684:	371c      	adds	r7, #28
 8002686:	46bd      	mov	sp, r7
 8002688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800268c:	4770      	bx	lr
 800268e:	bf00      	nop
 8002690:	40023800 	.word	0x40023800
 8002694:	20000004 	.word	0x20000004
 8002698:	00f42400 	.word	0x00f42400
 800269c:	017d7840 	.word	0x017d7840
 80026a0:	20000008 	.word	0x20000008

080026a4 <SetSysClock>:
 80026a4:	b480      	push	{r7}
 80026a6:	af00      	add	r7, sp, #0
 80026a8:	4b23      	ldr	r3, [pc, #140]	; (8002738 <SetSysClock+0x94>)
 80026aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026ac:	4a22      	ldr	r2, [pc, #136]	; (8002738 <SetSysClock+0x94>)
 80026ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80026b2:	6413      	str	r3, [r2, #64]	; 0x40
 80026b4:	4b21      	ldr	r3, [pc, #132]	; (800273c <SetSysClock+0x98>)
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	4a20      	ldr	r2, [pc, #128]	; (800273c <SetSysClock+0x98>)
 80026ba:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80026be:	6013      	str	r3, [r2, #0]
 80026c0:	4b1d      	ldr	r3, [pc, #116]	; (8002738 <SetSysClock+0x94>)
 80026c2:	4a1d      	ldr	r2, [pc, #116]	; (8002738 <SetSysClock+0x94>)
 80026c4:	689b      	ldr	r3, [r3, #8]
 80026c6:	6093      	str	r3, [r2, #8]
 80026c8:	4b1b      	ldr	r3, [pc, #108]	; (8002738 <SetSysClock+0x94>)
 80026ca:	4a1b      	ldr	r2, [pc, #108]	; (8002738 <SetSysClock+0x94>)
 80026cc:	689b      	ldr	r3, [r3, #8]
 80026ce:	6093      	str	r3, [r2, #8]
 80026d0:	4b19      	ldr	r3, [pc, #100]	; (8002738 <SetSysClock+0x94>)
 80026d2:	689b      	ldr	r3, [r3, #8]
 80026d4:	4a18      	ldr	r2, [pc, #96]	; (8002738 <SetSysClock+0x94>)
 80026d6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80026da:	6093      	str	r3, [r2, #8]
 80026dc:	4b16      	ldr	r3, [pc, #88]	; (8002738 <SetSysClock+0x94>)
 80026de:	4a18      	ldr	r2, [pc, #96]	; (8002740 <SetSysClock+0x9c>)
 80026e0:	605a      	str	r2, [r3, #4]
 80026e2:	4b15      	ldr	r3, [pc, #84]	; (8002738 <SetSysClock+0x94>)
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	4a14      	ldr	r2, [pc, #80]	; (8002738 <SetSysClock+0x94>)
 80026e8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80026ec:	6013      	str	r3, [r2, #0]
 80026ee:	bf00      	nop
 80026f0:	4b11      	ldr	r3, [pc, #68]	; (8002738 <SetSysClock+0x94>)
 80026f2:	681b      	ldr	r3, [r3, #0]
 80026f4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d0f9      	beq.n	80026f0 <SetSysClock+0x4c>
 80026fc:	4b11      	ldr	r3, [pc, #68]	; (8002744 <SetSysClock+0xa0>)
 80026fe:	f240 6202 	movw	r2, #1538	; 0x602
 8002702:	601a      	str	r2, [r3, #0]
 8002704:	4b0c      	ldr	r3, [pc, #48]	; (8002738 <SetSysClock+0x94>)
 8002706:	689b      	ldr	r3, [r3, #8]
 8002708:	4a0b      	ldr	r2, [pc, #44]	; (8002738 <SetSysClock+0x94>)
 800270a:	f023 0303 	bic.w	r3, r3, #3
 800270e:	6093      	str	r3, [r2, #8]
 8002710:	4b09      	ldr	r3, [pc, #36]	; (8002738 <SetSysClock+0x94>)
 8002712:	689b      	ldr	r3, [r3, #8]
 8002714:	4a08      	ldr	r2, [pc, #32]	; (8002738 <SetSysClock+0x94>)
 8002716:	f043 0302 	orr.w	r3, r3, #2
 800271a:	6093      	str	r3, [r2, #8]
 800271c:	bf00      	nop
 800271e:	4b06      	ldr	r3, [pc, #24]	; (8002738 <SetSysClock+0x94>)
 8002720:	689b      	ldr	r3, [r3, #8]
 8002722:	f003 030c 	and.w	r3, r3, #12
 8002726:	2b08      	cmp	r3, #8
 8002728:	d1f9      	bne.n	800271e <SetSysClock+0x7a>
 800272a:	bf00      	nop
 800272c:	bf00      	nop
 800272e:	46bd      	mov	sp, r7
 8002730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002734:	4770      	bx	lr
 8002736:	bf00      	nop
 8002738:	40023800 	.word	0x40023800
 800273c:	40007000 	.word	0x40007000
 8002740:	08015410 	.word	0x08015410
 8002744:	40023c00 	.word	0x40023c00

08002748 <NVIC_Init>:
 8002748:	b480      	push	{r7}
 800274a:	b085      	sub	sp, #20
 800274c:	af00      	add	r7, sp, #0
 800274e:	6078      	str	r0, [r7, #4]
 8002750:	2300      	movs	r3, #0
 8002752:	73fb      	strb	r3, [r7, #15]
 8002754:	2300      	movs	r3, #0
 8002756:	73bb      	strb	r3, [r7, #14]
 8002758:	230f      	movs	r3, #15
 800275a:	737b      	strb	r3, [r7, #13]
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	78db      	ldrb	r3, [r3, #3]
 8002760:	2b00      	cmp	r3, #0
 8002762:	d039      	beq.n	80027d8 <NVIC_Init+0x90>
 8002764:	4b27      	ldr	r3, [pc, #156]	; (8002804 <NVIC_Init+0xbc>)
 8002766:	68db      	ldr	r3, [r3, #12]
 8002768:	43db      	mvns	r3, r3
 800276a:	0a1b      	lsrs	r3, r3, #8
 800276c:	b2db      	uxtb	r3, r3
 800276e:	f003 0307 	and.w	r3, r3, #7
 8002772:	73fb      	strb	r3, [r7, #15]
 8002774:	7bfb      	ldrb	r3, [r7, #15]
 8002776:	f1c3 0304 	rsb	r3, r3, #4
 800277a:	73bb      	strb	r3, [r7, #14]
 800277c:	7b7a      	ldrb	r2, [r7, #13]
 800277e:	7bfb      	ldrb	r3, [r7, #15]
 8002780:	fa42 f303 	asr.w	r3, r2, r3
 8002784:	737b      	strb	r3, [r7, #13]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	785b      	ldrb	r3, [r3, #1]
 800278a:	461a      	mov	r2, r3
 800278c:	7bbb      	ldrb	r3, [r7, #14]
 800278e:	fa02 f303 	lsl.w	r3, r2, r3
 8002792:	73fb      	strb	r3, [r7, #15]
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	789a      	ldrb	r2, [r3, #2]
 8002798:	7b7b      	ldrb	r3, [r7, #13]
 800279a:	4013      	ands	r3, r2
 800279c:	b2da      	uxtb	r2, r3
 800279e:	7bfb      	ldrb	r3, [r7, #15]
 80027a0:	4313      	orrs	r3, r2
 80027a2:	73fb      	strb	r3, [r7, #15]
 80027a4:	7bfb      	ldrb	r3, [r7, #15]
 80027a6:	011b      	lsls	r3, r3, #4
 80027a8:	73fb      	strb	r3, [r7, #15]
 80027aa:	4a17      	ldr	r2, [pc, #92]	; (8002808 <NVIC_Init+0xc0>)
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	781b      	ldrb	r3, [r3, #0]
 80027b0:	4413      	add	r3, r2
 80027b2:	7bfa      	ldrb	r2, [r7, #15]
 80027b4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	781b      	ldrb	r3, [r3, #0]
 80027bc:	f003 031f 	and.w	r3, r3, #31
 80027c0:	4911      	ldr	r1, [pc, #68]	; (8002808 <NVIC_Init+0xc0>)
 80027c2:	687a      	ldr	r2, [r7, #4]
 80027c4:	7812      	ldrb	r2, [r2, #0]
 80027c6:	0952      	lsrs	r2, r2, #5
 80027c8:	b2d2      	uxtb	r2, r2
 80027ca:	4610      	mov	r0, r2
 80027cc:	2201      	movs	r2, #1
 80027ce:	fa02 f303 	lsl.w	r3, r2, r3
 80027d2:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 80027d6:	e00f      	b.n	80027f8 <NVIC_Init+0xb0>
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	781b      	ldrb	r3, [r3, #0]
 80027dc:	f003 031f 	and.w	r3, r3, #31
 80027e0:	4909      	ldr	r1, [pc, #36]	; (8002808 <NVIC_Init+0xc0>)
 80027e2:	687a      	ldr	r2, [r7, #4]
 80027e4:	7812      	ldrb	r2, [r2, #0]
 80027e6:	0952      	lsrs	r2, r2, #5
 80027e8:	b2d2      	uxtb	r2, r2
 80027ea:	4610      	mov	r0, r2
 80027ec:	2201      	movs	r2, #1
 80027ee:	409a      	lsls	r2, r3
 80027f0:	f100 0320 	add.w	r3, r0, #32
 80027f4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80027f8:	bf00      	nop
 80027fa:	3714      	adds	r7, #20
 80027fc:	46bd      	mov	sp, r7
 80027fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002802:	4770      	bx	lr
 8002804:	e000ed00 	.word	0xe000ed00
 8002808:	e000e100 	.word	0xe000e100

0800280c <EXTI_Init>:
 800280c:	b480      	push	{r7}
 800280e:	b085      	sub	sp, #20
 8002810:	af00      	add	r7, sp, #0
 8002812:	6078      	str	r0, [r7, #4]
 8002814:	2300      	movs	r3, #0
 8002816:	60fb      	str	r3, [r7, #12]
 8002818:	4b34      	ldr	r3, [pc, #208]	; (80028ec <EXTI_Init+0xe0>)
 800281a:	60fb      	str	r3, [r7, #12]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	799b      	ldrb	r3, [r3, #6]
 8002820:	2b00      	cmp	r3, #0
 8002822:	d04f      	beq.n	80028c4 <EXTI_Init+0xb8>
 8002824:	4b31      	ldr	r3, [pc, #196]	; (80028ec <EXTI_Init+0xe0>)
 8002826:	681a      	ldr	r2, [r3, #0]
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	43db      	mvns	r3, r3
 800282e:	492f      	ldr	r1, [pc, #188]	; (80028ec <EXTI_Init+0xe0>)
 8002830:	4013      	ands	r3, r2
 8002832:	600b      	str	r3, [r1, #0]
 8002834:	4b2d      	ldr	r3, [pc, #180]	; (80028ec <EXTI_Init+0xe0>)
 8002836:	685a      	ldr	r2, [r3, #4]
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	43db      	mvns	r3, r3
 800283e:	492b      	ldr	r1, [pc, #172]	; (80028ec <EXTI_Init+0xe0>)
 8002840:	4013      	ands	r3, r2
 8002842:	604b      	str	r3, [r1, #4]
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	791b      	ldrb	r3, [r3, #4]
 8002848:	461a      	mov	r2, r3
 800284a:	68fb      	ldr	r3, [r7, #12]
 800284c:	4413      	add	r3, r2
 800284e:	60fb      	str	r3, [r7, #12]
 8002850:	68fb      	ldr	r3, [r7, #12]
 8002852:	6819      	ldr	r1, [r3, #0]
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	681a      	ldr	r2, [r3, #0]
 8002858:	68fb      	ldr	r3, [r7, #12]
 800285a:	430a      	orrs	r2, r1
 800285c:	601a      	str	r2, [r3, #0]
 800285e:	4b23      	ldr	r3, [pc, #140]	; (80028ec <EXTI_Init+0xe0>)
 8002860:	689a      	ldr	r2, [r3, #8]
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	43db      	mvns	r3, r3
 8002868:	4920      	ldr	r1, [pc, #128]	; (80028ec <EXTI_Init+0xe0>)
 800286a:	4013      	ands	r3, r2
 800286c:	608b      	str	r3, [r1, #8]
 800286e:	4b1f      	ldr	r3, [pc, #124]	; (80028ec <EXTI_Init+0xe0>)
 8002870:	68da      	ldr	r2, [r3, #12]
 8002872:	687b      	ldr	r3, [r7, #4]
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	43db      	mvns	r3, r3
 8002878:	491c      	ldr	r1, [pc, #112]	; (80028ec <EXTI_Init+0xe0>)
 800287a:	4013      	ands	r3, r2
 800287c:	60cb      	str	r3, [r1, #12]
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	795b      	ldrb	r3, [r3, #5]
 8002882:	2b10      	cmp	r3, #16
 8002884:	d10e      	bne.n	80028a4 <EXTI_Init+0x98>
 8002886:	4b19      	ldr	r3, [pc, #100]	; (80028ec <EXTI_Init+0xe0>)
 8002888:	689a      	ldr	r2, [r3, #8]
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	4917      	ldr	r1, [pc, #92]	; (80028ec <EXTI_Init+0xe0>)
 8002890:	4313      	orrs	r3, r2
 8002892:	608b      	str	r3, [r1, #8]
 8002894:	4b15      	ldr	r3, [pc, #84]	; (80028ec <EXTI_Init+0xe0>)
 8002896:	68da      	ldr	r2, [r3, #12]
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	4913      	ldr	r1, [pc, #76]	; (80028ec <EXTI_Init+0xe0>)
 800289e:	4313      	orrs	r3, r2
 80028a0:	60cb      	str	r3, [r1, #12]
 80028a2:	e01d      	b.n	80028e0 <EXTI_Init+0xd4>
 80028a4:	4b11      	ldr	r3, [pc, #68]	; (80028ec <EXTI_Init+0xe0>)
 80028a6:	60fb      	str	r3, [r7, #12]
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	795b      	ldrb	r3, [r3, #5]
 80028ac:	461a      	mov	r2, r3
 80028ae:	68fb      	ldr	r3, [r7, #12]
 80028b0:	4413      	add	r3, r2
 80028b2:	60fb      	str	r3, [r7, #12]
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	6819      	ldr	r1, [r3, #0]
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	681a      	ldr	r2, [r3, #0]
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	430a      	orrs	r2, r1
 80028c0:	601a      	str	r2, [r3, #0]
 80028c2:	e00d      	b.n	80028e0 <EXTI_Init+0xd4>
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	791b      	ldrb	r3, [r3, #4]
 80028c8:	461a      	mov	r2, r3
 80028ca:	68fb      	ldr	r3, [r7, #12]
 80028cc:	4413      	add	r3, r2
 80028ce:	60fb      	str	r3, [r7, #12]
 80028d0:	68fb      	ldr	r3, [r7, #12]
 80028d2:	6819      	ldr	r1, [r3, #0]
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	43da      	mvns	r2, r3
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	400a      	ands	r2, r1
 80028de:	601a      	str	r2, [r3, #0]
 80028e0:	bf00      	nop
 80028e2:	3714      	adds	r7, #20
 80028e4:	46bd      	mov	sp, r7
 80028e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ea:	4770      	bx	lr
 80028ec:	40013c00 	.word	0x40013c00

080028f0 <EXTI_GetFlagStatus>:
 80028f0:	b480      	push	{r7}
 80028f2:	b085      	sub	sp, #20
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	6078      	str	r0, [r7, #4]
 80028f8:	2300      	movs	r3, #0
 80028fa:	73fb      	strb	r3, [r7, #15]
 80028fc:	4b08      	ldr	r3, [pc, #32]	; (8002920 <EXTI_GetFlagStatus+0x30>)
 80028fe:	695a      	ldr	r2, [r3, #20]
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	4013      	ands	r3, r2
 8002904:	2b00      	cmp	r3, #0
 8002906:	d002      	beq.n	800290e <EXTI_GetFlagStatus+0x1e>
 8002908:	2301      	movs	r3, #1
 800290a:	73fb      	strb	r3, [r7, #15]
 800290c:	e001      	b.n	8002912 <EXTI_GetFlagStatus+0x22>
 800290e:	2300      	movs	r3, #0
 8002910:	73fb      	strb	r3, [r7, #15]
 8002912:	7bfb      	ldrb	r3, [r7, #15]
 8002914:	4618      	mov	r0, r3
 8002916:	3714      	adds	r7, #20
 8002918:	46bd      	mov	sp, r7
 800291a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800291e:	4770      	bx	lr
 8002920:	40013c00 	.word	0x40013c00

08002924 <EXTI_ClearITPendingBit>:
 8002924:	b480      	push	{r7}
 8002926:	b083      	sub	sp, #12
 8002928:	af00      	add	r7, sp, #0
 800292a:	6078      	str	r0, [r7, #4]
 800292c:	4a04      	ldr	r2, [pc, #16]	; (8002940 <EXTI_ClearITPendingBit+0x1c>)
 800292e:	687b      	ldr	r3, [r7, #4]
 8002930:	6153      	str	r3, [r2, #20]
 8002932:	bf00      	nop
 8002934:	370c      	adds	r7, #12
 8002936:	46bd      	mov	sp, r7
 8002938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800293c:	4770      	bx	lr
 800293e:	bf00      	nop
 8002940:	40013c00 	.word	0x40013c00

08002944 <GPIO_Init>:
 8002944:	b480      	push	{r7}
 8002946:	b087      	sub	sp, #28
 8002948:	af00      	add	r7, sp, #0
 800294a:	6078      	str	r0, [r7, #4]
 800294c:	6039      	str	r1, [r7, #0]
 800294e:	2300      	movs	r3, #0
 8002950:	617b      	str	r3, [r7, #20]
 8002952:	2300      	movs	r3, #0
 8002954:	613b      	str	r3, [r7, #16]
 8002956:	2300      	movs	r3, #0
 8002958:	60fb      	str	r3, [r7, #12]
 800295a:	2300      	movs	r3, #0
 800295c:	617b      	str	r3, [r7, #20]
 800295e:	e076      	b.n	8002a4e <GPIO_Init+0x10a>
 8002960:	2201      	movs	r2, #1
 8002962:	697b      	ldr	r3, [r7, #20]
 8002964:	fa02 f303 	lsl.w	r3, r2, r3
 8002968:	613b      	str	r3, [r7, #16]
 800296a:	683b      	ldr	r3, [r7, #0]
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	693a      	ldr	r2, [r7, #16]
 8002970:	4013      	ands	r3, r2
 8002972:	60fb      	str	r3, [r7, #12]
 8002974:	68fa      	ldr	r2, [r7, #12]
 8002976:	693b      	ldr	r3, [r7, #16]
 8002978:	429a      	cmp	r2, r3
 800297a:	d165      	bne.n	8002a48 <GPIO_Init+0x104>
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681a      	ldr	r2, [r3, #0]
 8002980:	697b      	ldr	r3, [r7, #20]
 8002982:	005b      	lsls	r3, r3, #1
 8002984:	2103      	movs	r1, #3
 8002986:	fa01 f303 	lsl.w	r3, r1, r3
 800298a:	43db      	mvns	r3, r3
 800298c:	401a      	ands	r2, r3
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	601a      	str	r2, [r3, #0]
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	681a      	ldr	r2, [r3, #0]
 8002996:	683b      	ldr	r3, [r7, #0]
 8002998:	791b      	ldrb	r3, [r3, #4]
 800299a:	4619      	mov	r1, r3
 800299c:	697b      	ldr	r3, [r7, #20]
 800299e:	005b      	lsls	r3, r3, #1
 80029a0:	fa01 f303 	lsl.w	r3, r1, r3
 80029a4:	431a      	orrs	r2, r3
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	601a      	str	r2, [r3, #0]
 80029aa:	683b      	ldr	r3, [r7, #0]
 80029ac:	791b      	ldrb	r3, [r3, #4]
 80029ae:	2b01      	cmp	r3, #1
 80029b0:	d003      	beq.n	80029ba <GPIO_Init+0x76>
 80029b2:	683b      	ldr	r3, [r7, #0]
 80029b4:	791b      	ldrb	r3, [r3, #4]
 80029b6:	2b02      	cmp	r3, #2
 80029b8:	d12e      	bne.n	8002a18 <GPIO_Init+0xd4>
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	689a      	ldr	r2, [r3, #8]
 80029be:	697b      	ldr	r3, [r7, #20]
 80029c0:	005b      	lsls	r3, r3, #1
 80029c2:	2103      	movs	r1, #3
 80029c4:	fa01 f303 	lsl.w	r3, r1, r3
 80029c8:	43db      	mvns	r3, r3
 80029ca:	401a      	ands	r2, r3
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	609a      	str	r2, [r3, #8]
 80029d0:	687b      	ldr	r3, [r7, #4]
 80029d2:	689a      	ldr	r2, [r3, #8]
 80029d4:	683b      	ldr	r3, [r7, #0]
 80029d6:	795b      	ldrb	r3, [r3, #5]
 80029d8:	4619      	mov	r1, r3
 80029da:	697b      	ldr	r3, [r7, #20]
 80029dc:	005b      	lsls	r3, r3, #1
 80029de:	fa01 f303 	lsl.w	r3, r1, r3
 80029e2:	431a      	orrs	r2, r3
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	609a      	str	r2, [r3, #8]
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	685a      	ldr	r2, [r3, #4]
 80029ec:	697b      	ldr	r3, [r7, #20]
 80029ee:	b29b      	uxth	r3, r3
 80029f0:	4619      	mov	r1, r3
 80029f2:	2301      	movs	r3, #1
 80029f4:	408b      	lsls	r3, r1
 80029f6:	43db      	mvns	r3, r3
 80029f8:	401a      	ands	r2, r3
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	605a      	str	r2, [r3, #4]
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	685b      	ldr	r3, [r3, #4]
 8002a02:	683a      	ldr	r2, [r7, #0]
 8002a04:	7992      	ldrb	r2, [r2, #6]
 8002a06:	4611      	mov	r1, r2
 8002a08:	697a      	ldr	r2, [r7, #20]
 8002a0a:	b292      	uxth	r2, r2
 8002a0c:	fa01 f202 	lsl.w	r2, r1, r2
 8002a10:	b292      	uxth	r2, r2
 8002a12:	431a      	orrs	r2, r3
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	605a      	str	r2, [r3, #4]
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	68da      	ldr	r2, [r3, #12]
 8002a1c:	697b      	ldr	r3, [r7, #20]
 8002a1e:	b29b      	uxth	r3, r3
 8002a20:	005b      	lsls	r3, r3, #1
 8002a22:	2103      	movs	r1, #3
 8002a24:	fa01 f303 	lsl.w	r3, r1, r3
 8002a28:	43db      	mvns	r3, r3
 8002a2a:	401a      	ands	r2, r3
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	60da      	str	r2, [r3, #12]
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	68da      	ldr	r2, [r3, #12]
 8002a34:	683b      	ldr	r3, [r7, #0]
 8002a36:	79db      	ldrb	r3, [r3, #7]
 8002a38:	4619      	mov	r1, r3
 8002a3a:	697b      	ldr	r3, [r7, #20]
 8002a3c:	005b      	lsls	r3, r3, #1
 8002a3e:	fa01 f303 	lsl.w	r3, r1, r3
 8002a42:	431a      	orrs	r2, r3
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	60da      	str	r2, [r3, #12]
 8002a48:	697b      	ldr	r3, [r7, #20]
 8002a4a:	3301      	adds	r3, #1
 8002a4c:	617b      	str	r3, [r7, #20]
 8002a4e:	697b      	ldr	r3, [r7, #20]
 8002a50:	2b0f      	cmp	r3, #15
 8002a52:	d985      	bls.n	8002960 <GPIO_Init+0x1c>
 8002a54:	bf00      	nop
 8002a56:	bf00      	nop
 8002a58:	371c      	adds	r7, #28
 8002a5a:	46bd      	mov	sp, r7
 8002a5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a60:	4770      	bx	lr

08002a62 <GPIO_SetBits>:
 8002a62:	b480      	push	{r7}
 8002a64:	b083      	sub	sp, #12
 8002a66:	af00      	add	r7, sp, #0
 8002a68:	6078      	str	r0, [r7, #4]
 8002a6a:	460b      	mov	r3, r1
 8002a6c:	807b      	strh	r3, [r7, #2]
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	887a      	ldrh	r2, [r7, #2]
 8002a72:	831a      	strh	r2, [r3, #24]
 8002a74:	bf00      	nop
 8002a76:	370c      	adds	r7, #12
 8002a78:	46bd      	mov	sp, r7
 8002a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a7e:	4770      	bx	lr

08002a80 <GPIO_ResetBits>:
 8002a80:	b480      	push	{r7}
 8002a82:	b083      	sub	sp, #12
 8002a84:	af00      	add	r7, sp, #0
 8002a86:	6078      	str	r0, [r7, #4]
 8002a88:	460b      	mov	r3, r1
 8002a8a:	807b      	strh	r3, [r7, #2]
 8002a8c:	687b      	ldr	r3, [r7, #4]
 8002a8e:	887a      	ldrh	r2, [r7, #2]
 8002a90:	835a      	strh	r2, [r3, #26]
 8002a92:	bf00      	nop
 8002a94:	370c      	adds	r7, #12
 8002a96:	46bd      	mov	sp, r7
 8002a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a9c:	4770      	bx	lr

08002a9e <GPIO_PinAFConfig>:
 8002a9e:	b480      	push	{r7}
 8002aa0:	b085      	sub	sp, #20
 8002aa2:	af00      	add	r7, sp, #0
 8002aa4:	6078      	str	r0, [r7, #4]
 8002aa6:	460b      	mov	r3, r1
 8002aa8:	807b      	strh	r3, [r7, #2]
 8002aaa:	4613      	mov	r3, r2
 8002aac:	707b      	strb	r3, [r7, #1]
 8002aae:	2300      	movs	r3, #0
 8002ab0:	60fb      	str	r3, [r7, #12]
 8002ab2:	2300      	movs	r3, #0
 8002ab4:	60bb      	str	r3, [r7, #8]
 8002ab6:	787a      	ldrb	r2, [r7, #1]
 8002ab8:	887b      	ldrh	r3, [r7, #2]
 8002aba:	f003 0307 	and.w	r3, r3, #7
 8002abe:	009b      	lsls	r3, r3, #2
 8002ac0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ac4:	60fb      	str	r3, [r7, #12]
 8002ac6:	887b      	ldrh	r3, [r7, #2]
 8002ac8:	08db      	lsrs	r3, r3, #3
 8002aca:	b29b      	uxth	r3, r3
 8002acc:	461a      	mov	r2, r3
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	3208      	adds	r2, #8
 8002ad2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8002ad6:	887b      	ldrh	r3, [r7, #2]
 8002ad8:	f003 0307 	and.w	r3, r3, #7
 8002adc:	009b      	lsls	r3, r3, #2
 8002ade:	210f      	movs	r1, #15
 8002ae0:	fa01 f303 	lsl.w	r3, r1, r3
 8002ae4:	43db      	mvns	r3, r3
 8002ae6:	8879      	ldrh	r1, [r7, #2]
 8002ae8:	08c9      	lsrs	r1, r1, #3
 8002aea:	b289      	uxth	r1, r1
 8002aec:	4608      	mov	r0, r1
 8002aee:	ea02 0103 	and.w	r1, r2, r3
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	f100 0208 	add.w	r2, r0, #8
 8002af8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002afc:	887b      	ldrh	r3, [r7, #2]
 8002afe:	08db      	lsrs	r3, r3, #3
 8002b00:	b29b      	uxth	r3, r3
 8002b02:	461a      	mov	r2, r3
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	3208      	adds	r2, #8
 8002b08:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002b0c:	68fa      	ldr	r2, [r7, #12]
 8002b0e:	4313      	orrs	r3, r2
 8002b10:	60bb      	str	r3, [r7, #8]
 8002b12:	887b      	ldrh	r3, [r7, #2]
 8002b14:	08db      	lsrs	r3, r3, #3
 8002b16:	b29b      	uxth	r3, r3
 8002b18:	461a      	mov	r2, r3
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	3208      	adds	r2, #8
 8002b1e:	68b9      	ldr	r1, [r7, #8]
 8002b20:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002b24:	bf00      	nop
 8002b26:	3714      	adds	r7, #20
 8002b28:	46bd      	mov	sp, r7
 8002b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b2e:	4770      	bx	lr

08002b30 <I2C_Init>:
 8002b30:	b580      	push	{r7, lr}
 8002b32:	b08a      	sub	sp, #40	; 0x28
 8002b34:	af00      	add	r7, sp, #0
 8002b36:	6078      	str	r0, [r7, #4]
 8002b38:	6039      	str	r1, [r7, #0]
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002b3e:	2300      	movs	r3, #0
 8002b40:	847b      	strh	r3, [r7, #34]	; 0x22
 8002b42:	2304      	movs	r3, #4
 8002b44:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002b46:	4b57      	ldr	r3, [pc, #348]	; (8002ca4 <I2C_Init+0x174>)
 8002b48:	61fb      	str	r3, [r7, #28]
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	889b      	ldrh	r3, [r3, #4]
 8002b4e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002b50:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8002b52:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8002b56:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002b58:	f107 030c 	add.w	r3, r7, #12
 8002b5c:	4618      	mov	r0, r3
 8002b5e:	f000 f9a9 	bl	8002eb4 <RCC_GetClocksFreq>
 8002b62:	697b      	ldr	r3, [r7, #20]
 8002b64:	61fb      	str	r3, [r7, #28]
 8002b66:	69fb      	ldr	r3, [r7, #28]
 8002b68:	4a4f      	ldr	r2, [pc, #316]	; (8002ca8 <I2C_Init+0x178>)
 8002b6a:	fba2 2303 	umull	r2, r3, r2, r3
 8002b6e:	0c9b      	lsrs	r3, r3, #18
 8002b70:	847b      	strh	r3, [r7, #34]	; 0x22
 8002b72:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8002b74:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8002b76:	4313      	orrs	r3, r2
 8002b78:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8002b7e:	809a      	strh	r2, [r3, #4]
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	881b      	ldrh	r3, [r3, #0]
 8002b84:	b29b      	uxth	r3, r3
 8002b86:	f023 0301 	bic.w	r3, r3, #1
 8002b8a:	b29a      	uxth	r2, r3
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	801a      	strh	r2, [r3, #0]
 8002b90:	2300      	movs	r3, #0
 8002b92:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002b94:	683b      	ldr	r3, [r7, #0]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	4a44      	ldr	r2, [pc, #272]	; (8002cac <I2C_Init+0x17c>)
 8002b9a:	4293      	cmp	r3, r2
 8002b9c:	d815      	bhi.n	8002bca <I2C_Init+0x9a>
 8002b9e:	683b      	ldr	r3, [r7, #0]
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	005b      	lsls	r3, r3, #1
 8002ba4:	69fa      	ldr	r2, [r7, #28]
 8002ba6:	fbb2 f3f3 	udiv	r3, r2, r3
 8002baa:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002bac:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002bae:	2b03      	cmp	r3, #3
 8002bb0:	d801      	bhi.n	8002bb6 <I2C_Init+0x86>
 8002bb2:	2304      	movs	r3, #4
 8002bb4:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002bb6:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8002bb8:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002bba:	4313      	orrs	r3, r2
 8002bbc:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002bbe:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8002bc0:	3301      	adds	r3, #1
 8002bc2:	b29a      	uxth	r2, r3
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	841a      	strh	r2, [r3, #32]
 8002bc8:	e040      	b.n	8002c4c <I2C_Init+0x11c>
 8002bca:	683b      	ldr	r3, [r7, #0]
 8002bcc:	88db      	ldrh	r3, [r3, #6]
 8002bce:	f64b 72ff 	movw	r2, #49151	; 0xbfff
 8002bd2:	4293      	cmp	r3, r2
 8002bd4:	d109      	bne.n	8002bea <I2C_Init+0xba>
 8002bd6:	683b      	ldr	r3, [r7, #0]
 8002bd8:	681a      	ldr	r2, [r3, #0]
 8002bda:	4613      	mov	r3, r2
 8002bdc:	005b      	lsls	r3, r3, #1
 8002bde:	4413      	add	r3, r2
 8002be0:	69fa      	ldr	r2, [r7, #28]
 8002be2:	fbb2 f3f3 	udiv	r3, r2, r3
 8002be6:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002be8:	e00e      	b.n	8002c08 <I2C_Init+0xd8>
 8002bea:	683b      	ldr	r3, [r7, #0]
 8002bec:	681a      	ldr	r2, [r3, #0]
 8002bee:	4613      	mov	r3, r2
 8002bf0:	009b      	lsls	r3, r3, #2
 8002bf2:	4413      	add	r3, r2
 8002bf4:	009a      	lsls	r2, r3, #2
 8002bf6:	4413      	add	r3, r2
 8002bf8:	69fa      	ldr	r2, [r7, #28]
 8002bfa:	fbb2 f3f3 	udiv	r3, r2, r3
 8002bfe:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002c00:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002c02:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002c06:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002c08:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002c0a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	d103      	bne.n	8002c1a <I2C_Init+0xea>
 8002c12:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002c14:	f043 0301 	orr.w	r3, r3, #1
 8002c18:	84bb      	strh	r3, [r7, #36]	; 0x24
 8002c1a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8002c1c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8002c1e:	4313      	orrs	r3, r2
 8002c20:	b29b      	uxth	r3, r3
 8002c22:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8002c26:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8002c2a:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002c2c:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8002c2e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8002c32:	fb02 f303 	mul.w	r3, r2, r3
 8002c36:	4a1e      	ldr	r2, [pc, #120]	; (8002cb0 <I2C_Init+0x180>)
 8002c38:	fb82 1203 	smull	r1, r2, r2, r3
 8002c3c:	1192      	asrs	r2, r2, #6
 8002c3e:	17db      	asrs	r3, r3, #31
 8002c40:	1ad3      	subs	r3, r2, r3
 8002c42:	b29b      	uxth	r3, r3
 8002c44:	3301      	adds	r3, #1
 8002c46:	b29a      	uxth	r2, r3
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	841a      	strh	r2, [r3, #32]
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8002c50:	839a      	strh	r2, [r3, #28]
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	881b      	ldrh	r3, [r3, #0]
 8002c56:	b29b      	uxth	r3, r3
 8002c58:	f043 0301 	orr.w	r3, r3, #1
 8002c5c:	b29a      	uxth	r2, r3
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	801a      	strh	r2, [r3, #0]
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	881b      	ldrh	r3, [r3, #0]
 8002c66:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002c68:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8002c6a:	f423 6381 	bic.w	r3, r3, #1032	; 0x408
 8002c6e:	f023 0302 	bic.w	r3, r3, #2
 8002c72:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002c74:	683b      	ldr	r3, [r7, #0]
 8002c76:	889a      	ldrh	r2, [r3, #4]
 8002c78:	683b      	ldr	r3, [r7, #0]
 8002c7a:	895b      	ldrh	r3, [r3, #10]
 8002c7c:	4313      	orrs	r3, r2
 8002c7e:	b29a      	uxth	r2, r3
 8002c80:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8002c82:	4313      	orrs	r3, r2
 8002c84:	84fb      	strh	r3, [r7, #38]	; 0x26
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8002c8a:	801a      	strh	r2, [r3, #0]
 8002c8c:	683b      	ldr	r3, [r7, #0]
 8002c8e:	899a      	ldrh	r2, [r3, #12]
 8002c90:	683b      	ldr	r3, [r7, #0]
 8002c92:	891b      	ldrh	r3, [r3, #8]
 8002c94:	4313      	orrs	r3, r2
 8002c96:	b29a      	uxth	r2, r3
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	811a      	strh	r2, [r3, #8]
 8002c9c:	bf00      	nop
 8002c9e:	3728      	adds	r7, #40	; 0x28
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	bd80      	pop	{r7, pc}
 8002ca4:	007a1200 	.word	0x007a1200
 8002ca8:	431bde83 	.word	0x431bde83
 8002cac:	000186a0 	.word	0x000186a0
 8002cb0:	10624dd3 	.word	0x10624dd3

08002cb4 <I2C_Cmd>:
 8002cb4:	b480      	push	{r7}
 8002cb6:	b083      	sub	sp, #12
 8002cb8:	af00      	add	r7, sp, #0
 8002cba:	6078      	str	r0, [r7, #4]
 8002cbc:	460b      	mov	r3, r1
 8002cbe:	70fb      	strb	r3, [r7, #3]
 8002cc0:	78fb      	ldrb	r3, [r7, #3]
 8002cc2:	2b00      	cmp	r3, #0
 8002cc4:	d008      	beq.n	8002cd8 <I2C_Cmd+0x24>
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	881b      	ldrh	r3, [r3, #0]
 8002cca:	b29b      	uxth	r3, r3
 8002ccc:	f043 0301 	orr.w	r3, r3, #1
 8002cd0:	b29a      	uxth	r2, r3
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	801a      	strh	r2, [r3, #0]
 8002cd6:	e007      	b.n	8002ce8 <I2C_Cmd+0x34>
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	881b      	ldrh	r3, [r3, #0]
 8002cdc:	b29b      	uxth	r3, r3
 8002cde:	f023 0301 	bic.w	r3, r3, #1
 8002ce2:	b29a      	uxth	r2, r3
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	801a      	strh	r2, [r3, #0]
 8002ce8:	bf00      	nop
 8002cea:	370c      	adds	r7, #12
 8002cec:	46bd      	mov	sp, r7
 8002cee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cf2:	4770      	bx	lr

08002cf4 <I2C_GenerateSTART>:
 8002cf4:	b480      	push	{r7}
 8002cf6:	b083      	sub	sp, #12
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	6078      	str	r0, [r7, #4]
 8002cfc:	460b      	mov	r3, r1
 8002cfe:	70fb      	strb	r3, [r7, #3]
 8002d00:	78fb      	ldrb	r3, [r7, #3]
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	d008      	beq.n	8002d18 <I2C_GenerateSTART+0x24>
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	881b      	ldrh	r3, [r3, #0]
 8002d0a:	b29b      	uxth	r3, r3
 8002d0c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002d10:	b29a      	uxth	r2, r3
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	801a      	strh	r2, [r3, #0]
 8002d16:	e007      	b.n	8002d28 <I2C_GenerateSTART+0x34>
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	881b      	ldrh	r3, [r3, #0]
 8002d1c:	b29b      	uxth	r3, r3
 8002d1e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002d22:	b29a      	uxth	r2, r3
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	801a      	strh	r2, [r3, #0]
 8002d28:	bf00      	nop
 8002d2a:	370c      	adds	r7, #12
 8002d2c:	46bd      	mov	sp, r7
 8002d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d32:	4770      	bx	lr

08002d34 <I2C_GenerateSTOP>:
 8002d34:	b480      	push	{r7}
 8002d36:	b083      	sub	sp, #12
 8002d38:	af00      	add	r7, sp, #0
 8002d3a:	6078      	str	r0, [r7, #4]
 8002d3c:	460b      	mov	r3, r1
 8002d3e:	70fb      	strb	r3, [r7, #3]
 8002d40:	78fb      	ldrb	r3, [r7, #3]
 8002d42:	2b00      	cmp	r3, #0
 8002d44:	d008      	beq.n	8002d58 <I2C_GenerateSTOP+0x24>
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	881b      	ldrh	r3, [r3, #0]
 8002d4a:	b29b      	uxth	r3, r3
 8002d4c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002d50:	b29a      	uxth	r2, r3
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	801a      	strh	r2, [r3, #0]
 8002d56:	e007      	b.n	8002d68 <I2C_GenerateSTOP+0x34>
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	881b      	ldrh	r3, [r3, #0]
 8002d5c:	b29b      	uxth	r3, r3
 8002d5e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8002d62:	b29a      	uxth	r2, r3
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	801a      	strh	r2, [r3, #0]
 8002d68:	bf00      	nop
 8002d6a:	370c      	adds	r7, #12
 8002d6c:	46bd      	mov	sp, r7
 8002d6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d72:	4770      	bx	lr

08002d74 <I2C_Send7bitAddress>:
 8002d74:	b480      	push	{r7}
 8002d76:	b083      	sub	sp, #12
 8002d78:	af00      	add	r7, sp, #0
 8002d7a:	6078      	str	r0, [r7, #4]
 8002d7c:	460b      	mov	r3, r1
 8002d7e:	70fb      	strb	r3, [r7, #3]
 8002d80:	4613      	mov	r3, r2
 8002d82:	70bb      	strb	r3, [r7, #2]
 8002d84:	78bb      	ldrb	r3, [r7, #2]
 8002d86:	2b00      	cmp	r3, #0
 8002d88:	d004      	beq.n	8002d94 <I2C_Send7bitAddress+0x20>
 8002d8a:	78fb      	ldrb	r3, [r7, #3]
 8002d8c:	f043 0301 	orr.w	r3, r3, #1
 8002d90:	70fb      	strb	r3, [r7, #3]
 8002d92:	e003      	b.n	8002d9c <I2C_Send7bitAddress+0x28>
 8002d94:	78fb      	ldrb	r3, [r7, #3]
 8002d96:	f023 0301 	bic.w	r3, r3, #1
 8002d9a:	70fb      	strb	r3, [r7, #3]
 8002d9c:	78fb      	ldrb	r3, [r7, #3]
 8002d9e:	b29a      	uxth	r2, r3
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	821a      	strh	r2, [r3, #16]
 8002da4:	bf00      	nop
 8002da6:	370c      	adds	r7, #12
 8002da8:	46bd      	mov	sp, r7
 8002daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dae:	4770      	bx	lr

08002db0 <I2C_SendData>:
 8002db0:	b480      	push	{r7}
 8002db2:	b083      	sub	sp, #12
 8002db4:	af00      	add	r7, sp, #0
 8002db6:	6078      	str	r0, [r7, #4]
 8002db8:	460b      	mov	r3, r1
 8002dba:	70fb      	strb	r3, [r7, #3]
 8002dbc:	78fb      	ldrb	r3, [r7, #3]
 8002dbe:	b29a      	uxth	r2, r3
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	821a      	strh	r2, [r3, #16]
 8002dc4:	bf00      	nop
 8002dc6:	370c      	adds	r7, #12
 8002dc8:	46bd      	mov	sp, r7
 8002dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dce:	4770      	bx	lr

08002dd0 <I2C_ReceiveData>:
 8002dd0:	b480      	push	{r7}
 8002dd2:	b083      	sub	sp, #12
 8002dd4:	af00      	add	r7, sp, #0
 8002dd6:	6078      	str	r0, [r7, #4]
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	8a1b      	ldrh	r3, [r3, #16]
 8002ddc:	b29b      	uxth	r3, r3
 8002dde:	b2db      	uxtb	r3, r3
 8002de0:	4618      	mov	r0, r3
 8002de2:	370c      	adds	r7, #12
 8002de4:	46bd      	mov	sp, r7
 8002de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002dea:	4770      	bx	lr

08002dec <I2C_CheckEvent>:
 8002dec:	b480      	push	{r7}
 8002dee:	b087      	sub	sp, #28
 8002df0:	af00      	add	r7, sp, #0
 8002df2:	6078      	str	r0, [r7, #4]
 8002df4:	6039      	str	r1, [r7, #0]
 8002df6:	2300      	movs	r3, #0
 8002df8:	613b      	str	r3, [r7, #16]
 8002dfa:	2300      	movs	r3, #0
 8002dfc:	60fb      	str	r3, [r7, #12]
 8002dfe:	2300      	movs	r3, #0
 8002e00:	60bb      	str	r3, [r7, #8]
 8002e02:	2300      	movs	r3, #0
 8002e04:	75fb      	strb	r3, [r7, #23]
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	8a9b      	ldrh	r3, [r3, #20]
 8002e0a:	b29b      	uxth	r3, r3
 8002e0c:	60fb      	str	r3, [r7, #12]
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	8b1b      	ldrh	r3, [r3, #24]
 8002e12:	b29b      	uxth	r3, r3
 8002e14:	60bb      	str	r3, [r7, #8]
 8002e16:	68bb      	ldr	r3, [r7, #8]
 8002e18:	041b      	lsls	r3, r3, #16
 8002e1a:	60bb      	str	r3, [r7, #8]
 8002e1c:	68fa      	ldr	r2, [r7, #12]
 8002e1e:	68bb      	ldr	r3, [r7, #8]
 8002e20:	4313      	orrs	r3, r2
 8002e22:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002e26:	613b      	str	r3, [r7, #16]
 8002e28:	693a      	ldr	r2, [r7, #16]
 8002e2a:	683b      	ldr	r3, [r7, #0]
 8002e2c:	4013      	ands	r3, r2
 8002e2e:	683a      	ldr	r2, [r7, #0]
 8002e30:	429a      	cmp	r2, r3
 8002e32:	d102      	bne.n	8002e3a <I2C_CheckEvent+0x4e>
 8002e34:	2301      	movs	r3, #1
 8002e36:	75fb      	strb	r3, [r7, #23]
 8002e38:	e001      	b.n	8002e3e <I2C_CheckEvent+0x52>
 8002e3a:	2300      	movs	r3, #0
 8002e3c:	75fb      	strb	r3, [r7, #23]
 8002e3e:	7dfb      	ldrb	r3, [r7, #23]
 8002e40:	4618      	mov	r0, r3
 8002e42:	371c      	adds	r7, #28
 8002e44:	46bd      	mov	sp, r7
 8002e46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e4a:	4770      	bx	lr

08002e4c <I2C_GetFlagStatus>:
 8002e4c:	b480      	push	{r7}
 8002e4e:	b087      	sub	sp, #28
 8002e50:	af00      	add	r7, sp, #0
 8002e52:	6078      	str	r0, [r7, #4]
 8002e54:	6039      	str	r1, [r7, #0]
 8002e56:	2300      	movs	r3, #0
 8002e58:	75fb      	strb	r3, [r7, #23]
 8002e5a:	2300      	movs	r3, #0
 8002e5c:	613b      	str	r3, [r7, #16]
 8002e5e:	2300      	movs	r3, #0
 8002e60:	60fb      	str	r3, [r7, #12]
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	60fb      	str	r3, [r7, #12]
 8002e66:	683b      	ldr	r3, [r7, #0]
 8002e68:	0f1b      	lsrs	r3, r3, #28
 8002e6a:	613b      	str	r3, [r7, #16]
 8002e6c:	683b      	ldr	r3, [r7, #0]
 8002e6e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002e72:	603b      	str	r3, [r7, #0]
 8002e74:	693b      	ldr	r3, [r7, #16]
 8002e76:	2b00      	cmp	r3, #0
 8002e78:	d003      	beq.n	8002e82 <I2C_GetFlagStatus+0x36>
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	3314      	adds	r3, #20
 8002e7e:	60fb      	str	r3, [r7, #12]
 8002e80:	e005      	b.n	8002e8e <I2C_GetFlagStatus+0x42>
 8002e82:	683b      	ldr	r3, [r7, #0]
 8002e84:	0c1b      	lsrs	r3, r3, #16
 8002e86:	603b      	str	r3, [r7, #0]
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	3318      	adds	r3, #24
 8002e8c:	60fb      	str	r3, [r7, #12]
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	681a      	ldr	r2, [r3, #0]
 8002e92:	683b      	ldr	r3, [r7, #0]
 8002e94:	4013      	ands	r3, r2
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	d002      	beq.n	8002ea0 <I2C_GetFlagStatus+0x54>
 8002e9a:	2301      	movs	r3, #1
 8002e9c:	75fb      	strb	r3, [r7, #23]
 8002e9e:	e001      	b.n	8002ea4 <I2C_GetFlagStatus+0x58>
 8002ea0:	2300      	movs	r3, #0
 8002ea2:	75fb      	strb	r3, [r7, #23]
 8002ea4:	7dfb      	ldrb	r3, [r7, #23]
 8002ea6:	4618      	mov	r0, r3
 8002ea8:	371c      	adds	r7, #28
 8002eaa:	46bd      	mov	sp, r7
 8002eac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002eb0:	4770      	bx	lr
	...

08002eb4 <RCC_GetClocksFreq>:
 8002eb4:	b480      	push	{r7}
 8002eb6:	b089      	sub	sp, #36	; 0x24
 8002eb8:	af00      	add	r7, sp, #0
 8002eba:	6078      	str	r0, [r7, #4]
 8002ebc:	2300      	movs	r3, #0
 8002ebe:	61bb      	str	r3, [r7, #24]
 8002ec0:	2300      	movs	r3, #0
 8002ec2:	617b      	str	r3, [r7, #20]
 8002ec4:	2300      	movs	r3, #0
 8002ec6:	61fb      	str	r3, [r7, #28]
 8002ec8:	2302      	movs	r3, #2
 8002eca:	613b      	str	r3, [r7, #16]
 8002ecc:	2300      	movs	r3, #0
 8002ece:	60fb      	str	r3, [r7, #12]
 8002ed0:	2302      	movs	r3, #2
 8002ed2:	60bb      	str	r3, [r7, #8]
 8002ed4:	4b4a      	ldr	r3, [pc, #296]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002ed6:	689b      	ldr	r3, [r3, #8]
 8002ed8:	f003 030c 	and.w	r3, r3, #12
 8002edc:	61bb      	str	r3, [r7, #24]
 8002ede:	69bb      	ldr	r3, [r7, #24]
 8002ee0:	2b08      	cmp	r3, #8
 8002ee2:	d011      	beq.n	8002f08 <RCC_GetClocksFreq+0x54>
 8002ee4:	69bb      	ldr	r3, [r7, #24]
 8002ee6:	2b08      	cmp	r3, #8
 8002ee8:	d844      	bhi.n	8002f74 <RCC_GetClocksFreq+0xc0>
 8002eea:	69bb      	ldr	r3, [r7, #24]
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d003      	beq.n	8002ef8 <RCC_GetClocksFreq+0x44>
 8002ef0:	69bb      	ldr	r3, [r7, #24]
 8002ef2:	2b04      	cmp	r3, #4
 8002ef4:	d004      	beq.n	8002f00 <RCC_GetClocksFreq+0x4c>
 8002ef6:	e03d      	b.n	8002f74 <RCC_GetClocksFreq+0xc0>
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	4a42      	ldr	r2, [pc, #264]	; (8003004 <RCC_GetClocksFreq+0x150>)
 8002efc:	601a      	str	r2, [r3, #0]
 8002efe:	e03d      	b.n	8002f7c <RCC_GetClocksFreq+0xc8>
 8002f00:	687b      	ldr	r3, [r7, #4]
 8002f02:	4a41      	ldr	r2, [pc, #260]	; (8003008 <RCC_GetClocksFreq+0x154>)
 8002f04:	601a      	str	r2, [r3, #0]
 8002f06:	e039      	b.n	8002f7c <RCC_GetClocksFreq+0xc8>
 8002f08:	4b3d      	ldr	r3, [pc, #244]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002f0a:	685b      	ldr	r3, [r3, #4]
 8002f0c:	0d9b      	lsrs	r3, r3, #22
 8002f0e:	f003 0301 	and.w	r3, r3, #1
 8002f12:	60fb      	str	r3, [r7, #12]
 8002f14:	4b3a      	ldr	r3, [pc, #232]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002f16:	685b      	ldr	r3, [r3, #4]
 8002f18:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002f1c:	60bb      	str	r3, [r7, #8]
 8002f1e:	68fb      	ldr	r3, [r7, #12]
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	d00c      	beq.n	8002f3e <RCC_GetClocksFreq+0x8a>
 8002f24:	4a38      	ldr	r2, [pc, #224]	; (8003008 <RCC_GetClocksFreq+0x154>)
 8002f26:	68bb      	ldr	r3, [r7, #8]
 8002f28:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f2c:	4a34      	ldr	r2, [pc, #208]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002f2e:	6852      	ldr	r2, [r2, #4]
 8002f30:	0992      	lsrs	r2, r2, #6
 8002f32:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002f36:	fb02 f303 	mul.w	r3, r2, r3
 8002f3a:	61fb      	str	r3, [r7, #28]
 8002f3c:	e00b      	b.n	8002f56 <RCC_GetClocksFreq+0xa2>
 8002f3e:	4a31      	ldr	r2, [pc, #196]	; (8003004 <RCC_GetClocksFreq+0x150>)
 8002f40:	68bb      	ldr	r3, [r7, #8]
 8002f42:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f46:	4a2e      	ldr	r2, [pc, #184]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002f48:	6852      	ldr	r2, [r2, #4]
 8002f4a:	0992      	lsrs	r2, r2, #6
 8002f4c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002f50:	fb02 f303 	mul.w	r3, r2, r3
 8002f54:	61fb      	str	r3, [r7, #28]
 8002f56:	4b2a      	ldr	r3, [pc, #168]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002f58:	685b      	ldr	r3, [r3, #4]
 8002f5a:	0c1b      	lsrs	r3, r3, #16
 8002f5c:	f003 0303 	and.w	r3, r3, #3
 8002f60:	3301      	adds	r3, #1
 8002f62:	005b      	lsls	r3, r3, #1
 8002f64:	613b      	str	r3, [r7, #16]
 8002f66:	69fa      	ldr	r2, [r7, #28]
 8002f68:	693b      	ldr	r3, [r7, #16]
 8002f6a:	fbb2 f2f3 	udiv	r2, r2, r3
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	601a      	str	r2, [r3, #0]
 8002f72:	e003      	b.n	8002f7c <RCC_GetClocksFreq+0xc8>
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	4a23      	ldr	r2, [pc, #140]	; (8003004 <RCC_GetClocksFreq+0x150>)
 8002f78:	601a      	str	r2, [r3, #0]
 8002f7a:	bf00      	nop
 8002f7c:	4b20      	ldr	r3, [pc, #128]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002f7e:	689b      	ldr	r3, [r3, #8]
 8002f80:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8002f84:	61bb      	str	r3, [r7, #24]
 8002f86:	69bb      	ldr	r3, [r7, #24]
 8002f88:	091b      	lsrs	r3, r3, #4
 8002f8a:	61bb      	str	r3, [r7, #24]
 8002f8c:	4a1f      	ldr	r2, [pc, #124]	; (800300c <RCC_GetClocksFreq+0x158>)
 8002f8e:	69bb      	ldr	r3, [r7, #24]
 8002f90:	4413      	add	r3, r2
 8002f92:	781b      	ldrb	r3, [r3, #0]
 8002f94:	b2db      	uxtb	r3, r3
 8002f96:	617b      	str	r3, [r7, #20]
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	681a      	ldr	r2, [r3, #0]
 8002f9c:	697b      	ldr	r3, [r7, #20]
 8002f9e:	40da      	lsrs	r2, r3
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	605a      	str	r2, [r3, #4]
 8002fa4:	4b16      	ldr	r3, [pc, #88]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002fa6:	689b      	ldr	r3, [r3, #8]
 8002fa8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8002fac:	61bb      	str	r3, [r7, #24]
 8002fae:	69bb      	ldr	r3, [r7, #24]
 8002fb0:	0a9b      	lsrs	r3, r3, #10
 8002fb2:	61bb      	str	r3, [r7, #24]
 8002fb4:	4a15      	ldr	r2, [pc, #84]	; (800300c <RCC_GetClocksFreq+0x158>)
 8002fb6:	69bb      	ldr	r3, [r7, #24]
 8002fb8:	4413      	add	r3, r2
 8002fba:	781b      	ldrb	r3, [r3, #0]
 8002fbc:	b2db      	uxtb	r3, r3
 8002fbe:	617b      	str	r3, [r7, #20]
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	685a      	ldr	r2, [r3, #4]
 8002fc4:	697b      	ldr	r3, [r7, #20]
 8002fc6:	40da      	lsrs	r2, r3
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	609a      	str	r2, [r3, #8]
 8002fcc:	4b0c      	ldr	r3, [pc, #48]	; (8003000 <RCC_GetClocksFreq+0x14c>)
 8002fce:	689b      	ldr	r3, [r3, #8]
 8002fd0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8002fd4:	61bb      	str	r3, [r7, #24]
 8002fd6:	69bb      	ldr	r3, [r7, #24]
 8002fd8:	0b5b      	lsrs	r3, r3, #13
 8002fda:	61bb      	str	r3, [r7, #24]
 8002fdc:	4a0b      	ldr	r2, [pc, #44]	; (800300c <RCC_GetClocksFreq+0x158>)
 8002fde:	69bb      	ldr	r3, [r7, #24]
 8002fe0:	4413      	add	r3, r2
 8002fe2:	781b      	ldrb	r3, [r3, #0]
 8002fe4:	b2db      	uxtb	r3, r3
 8002fe6:	617b      	str	r3, [r7, #20]
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	685a      	ldr	r2, [r3, #4]
 8002fec:	697b      	ldr	r3, [r7, #20]
 8002fee:	40da      	lsrs	r2, r3
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	60da      	str	r2, [r3, #12]
 8002ff4:	bf00      	nop
 8002ff6:	3724      	adds	r7, #36	; 0x24
 8002ff8:	46bd      	mov	sp, r7
 8002ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ffe:	4770      	bx	lr
 8003000:	40023800 	.word	0x40023800
 8003004:	00f42400 	.word	0x00f42400
 8003008:	017d7840 	.word	0x017d7840
 800300c:	20000018 	.word	0x20000018

08003010 <RCC_AHB1PeriphClockCmd>:
 8003010:	b480      	push	{r7}
 8003012:	b083      	sub	sp, #12
 8003014:	af00      	add	r7, sp, #0
 8003016:	6078      	str	r0, [r7, #4]
 8003018:	460b      	mov	r3, r1
 800301a:	70fb      	strb	r3, [r7, #3]
 800301c:	78fb      	ldrb	r3, [r7, #3]
 800301e:	2b00      	cmp	r3, #0
 8003020:	d006      	beq.n	8003030 <RCC_AHB1PeriphClockCmd+0x20>
 8003022:	4b0a      	ldr	r3, [pc, #40]	; (800304c <RCC_AHB1PeriphClockCmd+0x3c>)
 8003024:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003026:	4909      	ldr	r1, [pc, #36]	; (800304c <RCC_AHB1PeriphClockCmd+0x3c>)
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	4313      	orrs	r3, r2
 800302c:	630b      	str	r3, [r1, #48]	; 0x30
 800302e:	e006      	b.n	800303e <RCC_AHB1PeriphClockCmd+0x2e>
 8003030:	4b06      	ldr	r3, [pc, #24]	; (800304c <RCC_AHB1PeriphClockCmd+0x3c>)
 8003032:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	43db      	mvns	r3, r3
 8003038:	4904      	ldr	r1, [pc, #16]	; (800304c <RCC_AHB1PeriphClockCmd+0x3c>)
 800303a:	4013      	ands	r3, r2
 800303c:	630b      	str	r3, [r1, #48]	; 0x30
 800303e:	bf00      	nop
 8003040:	370c      	adds	r7, #12
 8003042:	46bd      	mov	sp, r7
 8003044:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003048:	4770      	bx	lr
 800304a:	bf00      	nop
 800304c:	40023800 	.word	0x40023800

08003050 <RCC_APB1PeriphClockCmd>:
 8003050:	b480      	push	{r7}
 8003052:	b083      	sub	sp, #12
 8003054:	af00      	add	r7, sp, #0
 8003056:	6078      	str	r0, [r7, #4]
 8003058:	460b      	mov	r3, r1
 800305a:	70fb      	strb	r3, [r7, #3]
 800305c:	78fb      	ldrb	r3, [r7, #3]
 800305e:	2b00      	cmp	r3, #0
 8003060:	d006      	beq.n	8003070 <RCC_APB1PeriphClockCmd+0x20>
 8003062:	4b0a      	ldr	r3, [pc, #40]	; (800308c <RCC_APB1PeriphClockCmd+0x3c>)
 8003064:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003066:	4909      	ldr	r1, [pc, #36]	; (800308c <RCC_APB1PeriphClockCmd+0x3c>)
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	4313      	orrs	r3, r2
 800306c:	640b      	str	r3, [r1, #64]	; 0x40
 800306e:	e006      	b.n	800307e <RCC_APB1PeriphClockCmd+0x2e>
 8003070:	4b06      	ldr	r3, [pc, #24]	; (800308c <RCC_APB1PeriphClockCmd+0x3c>)
 8003072:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	43db      	mvns	r3, r3
 8003078:	4904      	ldr	r1, [pc, #16]	; (800308c <RCC_APB1PeriphClockCmd+0x3c>)
 800307a:	4013      	ands	r3, r2
 800307c:	640b      	str	r3, [r1, #64]	; 0x40
 800307e:	bf00      	nop
 8003080:	370c      	adds	r7, #12
 8003082:	46bd      	mov	sp, r7
 8003084:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003088:	4770      	bx	lr
 800308a:	bf00      	nop
 800308c:	40023800 	.word	0x40023800

08003090 <RCC_APB2PeriphClockCmd>:
 8003090:	b480      	push	{r7}
 8003092:	b083      	sub	sp, #12
 8003094:	af00      	add	r7, sp, #0
 8003096:	6078      	str	r0, [r7, #4]
 8003098:	460b      	mov	r3, r1
 800309a:	70fb      	strb	r3, [r7, #3]
 800309c:	78fb      	ldrb	r3, [r7, #3]
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d006      	beq.n	80030b0 <RCC_APB2PeriphClockCmd+0x20>
 80030a2:	4b0a      	ldr	r3, [pc, #40]	; (80030cc <RCC_APB2PeriphClockCmd+0x3c>)
 80030a4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80030a6:	4909      	ldr	r1, [pc, #36]	; (80030cc <RCC_APB2PeriphClockCmd+0x3c>)
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	4313      	orrs	r3, r2
 80030ac:	644b      	str	r3, [r1, #68]	; 0x44
 80030ae:	e006      	b.n	80030be <RCC_APB2PeriphClockCmd+0x2e>
 80030b0:	4b06      	ldr	r3, [pc, #24]	; (80030cc <RCC_APB2PeriphClockCmd+0x3c>)
 80030b2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	43db      	mvns	r3, r3
 80030b8:	4904      	ldr	r1, [pc, #16]	; (80030cc <RCC_APB2PeriphClockCmd+0x3c>)
 80030ba:	4013      	ands	r3, r2
 80030bc:	644b      	str	r3, [r1, #68]	; 0x44
 80030be:	bf00      	nop
 80030c0:	370c      	adds	r7, #12
 80030c2:	46bd      	mov	sp, r7
 80030c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c8:	4770      	bx	lr
 80030ca:	bf00      	nop
 80030cc:	40023800 	.word	0x40023800

080030d0 <SPI_Init>:
 80030d0:	b480      	push	{r7}
 80030d2:	b085      	sub	sp, #20
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	6078      	str	r0, [r7, #4]
 80030d8:	6039      	str	r1, [r7, #0]
 80030da:	2300      	movs	r3, #0
 80030dc:	81fb      	strh	r3, [r7, #14]
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	881b      	ldrh	r3, [r3, #0]
 80030e2:	81fb      	strh	r3, [r7, #14]
 80030e4:	89fb      	ldrh	r3, [r7, #14]
 80030e6:	f403 5341 	and.w	r3, r3, #12352	; 0x3040
 80030ea:	81fb      	strh	r3, [r7, #14]
 80030ec:	683b      	ldr	r3, [r7, #0]
 80030ee:	881a      	ldrh	r2, [r3, #0]
 80030f0:	683b      	ldr	r3, [r7, #0]
 80030f2:	885b      	ldrh	r3, [r3, #2]
 80030f4:	4313      	orrs	r3, r2
 80030f6:	b29a      	uxth	r2, r3
 80030f8:	683b      	ldr	r3, [r7, #0]
 80030fa:	889b      	ldrh	r3, [r3, #4]
 80030fc:	4313      	orrs	r3, r2
 80030fe:	b29a      	uxth	r2, r3
 8003100:	683b      	ldr	r3, [r7, #0]
 8003102:	88db      	ldrh	r3, [r3, #6]
 8003104:	4313      	orrs	r3, r2
 8003106:	b29a      	uxth	r2, r3
 8003108:	683b      	ldr	r3, [r7, #0]
 800310a:	891b      	ldrh	r3, [r3, #8]
 800310c:	4313      	orrs	r3, r2
 800310e:	b29a      	uxth	r2, r3
 8003110:	683b      	ldr	r3, [r7, #0]
 8003112:	895b      	ldrh	r3, [r3, #10]
 8003114:	4313      	orrs	r3, r2
 8003116:	b29a      	uxth	r2, r3
 8003118:	683b      	ldr	r3, [r7, #0]
 800311a:	899b      	ldrh	r3, [r3, #12]
 800311c:	4313      	orrs	r3, r2
 800311e:	b29a      	uxth	r2, r3
 8003120:	683b      	ldr	r3, [r7, #0]
 8003122:	89db      	ldrh	r3, [r3, #14]
 8003124:	4313      	orrs	r3, r2
 8003126:	b29a      	uxth	r2, r3
 8003128:	89fb      	ldrh	r3, [r7, #14]
 800312a:	4313      	orrs	r3, r2
 800312c:	81fb      	strh	r3, [r7, #14]
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	89fa      	ldrh	r2, [r7, #14]
 8003132:	801a      	strh	r2, [r3, #0]
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	8b9b      	ldrh	r3, [r3, #28]
 8003138:	b29b      	uxth	r3, r3
 800313a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800313e:	b29a      	uxth	r2, r3
 8003140:	687b      	ldr	r3, [r7, #4]
 8003142:	839a      	strh	r2, [r3, #28]
 8003144:	683b      	ldr	r3, [r7, #0]
 8003146:	8a1a      	ldrh	r2, [r3, #16]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	821a      	strh	r2, [r3, #16]
 800314c:	bf00      	nop
 800314e:	3714      	adds	r7, #20
 8003150:	46bd      	mov	sp, r7
 8003152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003156:	4770      	bx	lr

08003158 <SPI_Cmd>:
 8003158:	b480      	push	{r7}
 800315a:	b083      	sub	sp, #12
 800315c:	af00      	add	r7, sp, #0
 800315e:	6078      	str	r0, [r7, #4]
 8003160:	460b      	mov	r3, r1
 8003162:	70fb      	strb	r3, [r7, #3]
 8003164:	78fb      	ldrb	r3, [r7, #3]
 8003166:	2b00      	cmp	r3, #0
 8003168:	d008      	beq.n	800317c <SPI_Cmd+0x24>
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	881b      	ldrh	r3, [r3, #0]
 800316e:	b29b      	uxth	r3, r3
 8003170:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003174:	b29a      	uxth	r2, r3
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	801a      	strh	r2, [r3, #0]
 800317a:	e007      	b.n	800318c <SPI_Cmd+0x34>
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	881b      	ldrh	r3, [r3, #0]
 8003180:	b29b      	uxth	r3, r3
 8003182:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003186:	b29a      	uxth	r2, r3
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	801a      	strh	r2, [r3, #0]
 800318c:	bf00      	nop
 800318e:	370c      	adds	r7, #12
 8003190:	46bd      	mov	sp, r7
 8003192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003196:	4770      	bx	lr

08003198 <SPI_I2S_SendData>:
 8003198:	b480      	push	{r7}
 800319a:	b083      	sub	sp, #12
 800319c:	af00      	add	r7, sp, #0
 800319e:	6078      	str	r0, [r7, #4]
 80031a0:	460b      	mov	r3, r1
 80031a2:	807b      	strh	r3, [r7, #2]
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	887a      	ldrh	r2, [r7, #2]
 80031a8:	819a      	strh	r2, [r3, #12]
 80031aa:	bf00      	nop
 80031ac:	370c      	adds	r7, #12
 80031ae:	46bd      	mov	sp, r7
 80031b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031b4:	4770      	bx	lr

080031b6 <SPI_I2S_GetFlagStatus>:
 80031b6:	b480      	push	{r7}
 80031b8:	b085      	sub	sp, #20
 80031ba:	af00      	add	r7, sp, #0
 80031bc:	6078      	str	r0, [r7, #4]
 80031be:	460b      	mov	r3, r1
 80031c0:	807b      	strh	r3, [r7, #2]
 80031c2:	2300      	movs	r3, #0
 80031c4:	73fb      	strb	r3, [r7, #15]
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	891b      	ldrh	r3, [r3, #8]
 80031ca:	b29a      	uxth	r2, r3
 80031cc:	887b      	ldrh	r3, [r7, #2]
 80031ce:	4013      	ands	r3, r2
 80031d0:	b29b      	uxth	r3, r3
 80031d2:	2b00      	cmp	r3, #0
 80031d4:	d002      	beq.n	80031dc <SPI_I2S_GetFlagStatus+0x26>
 80031d6:	2301      	movs	r3, #1
 80031d8:	73fb      	strb	r3, [r7, #15]
 80031da:	e001      	b.n	80031e0 <SPI_I2S_GetFlagStatus+0x2a>
 80031dc:	2300      	movs	r3, #0
 80031de:	73fb      	strb	r3, [r7, #15]
 80031e0:	7bfb      	ldrb	r3, [r7, #15]
 80031e2:	4618      	mov	r0, r3
 80031e4:	3714      	adds	r7, #20
 80031e6:	46bd      	mov	sp, r7
 80031e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031ec:	4770      	bx	lr
	...

080031f0 <SYSCFG_EXTILineConfig>:
 80031f0:	b480      	push	{r7}
 80031f2:	b085      	sub	sp, #20
 80031f4:	af00      	add	r7, sp, #0
 80031f6:	4603      	mov	r3, r0
 80031f8:	460a      	mov	r2, r1
 80031fa:	71fb      	strb	r3, [r7, #7]
 80031fc:	4613      	mov	r3, r2
 80031fe:	71bb      	strb	r3, [r7, #6]
 8003200:	2300      	movs	r3, #0
 8003202:	60fb      	str	r3, [r7, #12]
 8003204:	79bb      	ldrb	r3, [r7, #6]
 8003206:	f003 0303 	and.w	r3, r3, #3
 800320a:	009b      	lsls	r3, r3, #2
 800320c:	220f      	movs	r2, #15
 800320e:	fa02 f303 	lsl.w	r3, r2, r3
 8003212:	60fb      	str	r3, [r7, #12]
 8003214:	4a16      	ldr	r2, [pc, #88]	; (8003270 <SYSCFG_EXTILineConfig+0x80>)
 8003216:	79bb      	ldrb	r3, [r7, #6]
 8003218:	089b      	lsrs	r3, r3, #2
 800321a:	b2db      	uxtb	r3, r3
 800321c:	3302      	adds	r3, #2
 800321e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	43db      	mvns	r3, r3
 8003226:	4812      	ldr	r0, [pc, #72]	; (8003270 <SYSCFG_EXTILineConfig+0x80>)
 8003228:	79b9      	ldrb	r1, [r7, #6]
 800322a:	0889      	lsrs	r1, r1, #2
 800322c:	b2c9      	uxtb	r1, r1
 800322e:	401a      	ands	r2, r3
 8003230:	1c8b      	adds	r3, r1, #2
 8003232:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8003236:	4a0e      	ldr	r2, [pc, #56]	; (8003270 <SYSCFG_EXTILineConfig+0x80>)
 8003238:	79bb      	ldrb	r3, [r7, #6]
 800323a:	089b      	lsrs	r3, r3, #2
 800323c:	b2db      	uxtb	r3, r3
 800323e:	3302      	adds	r3, #2
 8003240:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8003244:	79f9      	ldrb	r1, [r7, #7]
 8003246:	79bb      	ldrb	r3, [r7, #6]
 8003248:	f003 0303 	and.w	r3, r3, #3
 800324c:	009b      	lsls	r3, r3, #2
 800324e:	fa01 f303 	lsl.w	r3, r1, r3
 8003252:	4807      	ldr	r0, [pc, #28]	; (8003270 <SYSCFG_EXTILineConfig+0x80>)
 8003254:	79b9      	ldrb	r1, [r7, #6]
 8003256:	0889      	lsrs	r1, r1, #2
 8003258:	b2c9      	uxtb	r1, r1
 800325a:	431a      	orrs	r2, r3
 800325c:	1c8b      	adds	r3, r1, #2
 800325e:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8003262:	bf00      	nop
 8003264:	3714      	adds	r7, #20
 8003266:	46bd      	mov	sp, r7
 8003268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800326c:	4770      	bx	lr
 800326e:	bf00      	nop
 8003270:	40013800 	.word	0x40013800

08003274 <__errno>:
 8003274:	4b01      	ldr	r3, [pc, #4]	; (800327c <__errno+0x8>)
 8003276:	6818      	ldr	r0, [r3, #0]
 8003278:	4770      	bx	lr
 800327a:	bf00      	nop
 800327c:	20000028 	.word	0x20000028

08003280 <__libc_init_array>:
 8003280:	b570      	push	{r4, r5, r6, lr}
 8003282:	4d0d      	ldr	r5, [pc, #52]	; (80032b8 <__libc_init_array+0x38>)
 8003284:	4c0d      	ldr	r4, [pc, #52]	; (80032bc <__libc_init_array+0x3c>)
 8003286:	1b64      	subs	r4, r4, r5
 8003288:	10a4      	asrs	r4, r4, #2
 800328a:	2600      	movs	r6, #0
 800328c:	42a6      	cmp	r6, r4
 800328e:	d109      	bne.n	80032a4 <__libc_init_array+0x24>
 8003290:	4d0b      	ldr	r5, [pc, #44]	; (80032c0 <__libc_init_array+0x40>)
 8003292:	4c0c      	ldr	r4, [pc, #48]	; (80032c4 <__libc_init_array+0x44>)
 8003294:	f002 fa0e 	bl	80056b4 <_init>
 8003298:	1b64      	subs	r4, r4, r5
 800329a:	10a4      	asrs	r4, r4, #2
 800329c:	2600      	movs	r6, #0
 800329e:	42a6      	cmp	r6, r4
 80032a0:	d105      	bne.n	80032ae <__libc_init_array+0x2e>
 80032a2:	bd70      	pop	{r4, r5, r6, pc}
 80032a4:	f855 3b04 	ldr.w	r3, [r5], #4
 80032a8:	4798      	blx	r3
 80032aa:	3601      	adds	r6, #1
 80032ac:	e7ee      	b.n	800328c <__libc_init_array+0xc>
 80032ae:	f855 3b04 	ldr.w	r3, [r5], #4
 80032b2:	4798      	blx	r3
 80032b4:	3601      	adds	r6, #1
 80032b6:	e7f2      	b.n	800329e <__libc_init_array+0x1e>
 80032b8:	080058b8 	.word	0x080058b8
 80032bc:	080058b8 	.word	0x080058b8
 80032c0:	080058b8 	.word	0x080058b8
 80032c4:	080058bc 	.word	0x080058bc

080032c8 <memset>:
 80032c8:	4402      	add	r2, r0
 80032ca:	4603      	mov	r3, r0
 80032cc:	4293      	cmp	r3, r2
 80032ce:	d100      	bne.n	80032d2 <memset+0xa>
 80032d0:	4770      	bx	lr
 80032d2:	f803 1b01 	strb.w	r1, [r3], #1
 80032d6:	e7f9      	b.n	80032cc <memset+0x4>

080032d8 <rand>:
 80032d8:	4b16      	ldr	r3, [pc, #88]	; (8003334 <rand+0x5c>)
 80032da:	b510      	push	{r4, lr}
 80032dc:	681c      	ldr	r4, [r3, #0]
 80032de:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80032e0:	b9b3      	cbnz	r3, 8003310 <rand+0x38>
 80032e2:	2018      	movs	r0, #24
 80032e4:	f000 f866 	bl	80033b4 <malloc>
 80032e8:	63a0      	str	r0, [r4, #56]	; 0x38
 80032ea:	b928      	cbnz	r0, 80032f8 <rand+0x20>
 80032ec:	4602      	mov	r2, r0
 80032ee:	4b12      	ldr	r3, [pc, #72]	; (8003338 <rand+0x60>)
 80032f0:	4812      	ldr	r0, [pc, #72]	; (800333c <rand+0x64>)
 80032f2:	214e      	movs	r1, #78	; 0x4e
 80032f4:	f000 f82e 	bl	8003354 <__assert_func>
 80032f8:	4a11      	ldr	r2, [pc, #68]	; (8003340 <rand+0x68>)
 80032fa:	4b12      	ldr	r3, [pc, #72]	; (8003344 <rand+0x6c>)
 80032fc:	e9c0 2300 	strd	r2, r3, [r0]
 8003300:	4b11      	ldr	r3, [pc, #68]	; (8003348 <rand+0x70>)
 8003302:	6083      	str	r3, [r0, #8]
 8003304:	230b      	movs	r3, #11
 8003306:	8183      	strh	r3, [r0, #12]
 8003308:	2201      	movs	r2, #1
 800330a:	2300      	movs	r3, #0
 800330c:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8003310:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 8003312:	4a0e      	ldr	r2, [pc, #56]	; (800334c <rand+0x74>)
 8003314:	6920      	ldr	r0, [r4, #16]
 8003316:	6963      	ldr	r3, [r4, #20]
 8003318:	490d      	ldr	r1, [pc, #52]	; (8003350 <rand+0x78>)
 800331a:	4342      	muls	r2, r0
 800331c:	fb01 2203 	mla	r2, r1, r3, r2
 8003320:	fba0 0101 	umull	r0, r1, r0, r1
 8003324:	1c43      	adds	r3, r0, #1
 8003326:	eb42 0001 	adc.w	r0, r2, r1
 800332a:	e9c4 3004 	strd	r3, r0, [r4, #16]
 800332e:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8003332:	bd10      	pop	{r4, pc}
 8003334:	20000028 	.word	0x20000028
 8003338:	080056d4 	.word	0x080056d4
 800333c:	080056eb 	.word	0x080056eb
 8003340:	abcd330e 	.word	0xabcd330e
 8003344:	e66d1234 	.word	0xe66d1234
 8003348:	0005deec 	.word	0x0005deec
 800334c:	5851f42d 	.word	0x5851f42d
 8003350:	4c957f2d 	.word	0x4c957f2d

08003354 <__assert_func>:
 8003354:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003356:	4614      	mov	r4, r2
 8003358:	461a      	mov	r2, r3
 800335a:	4b09      	ldr	r3, [pc, #36]	; (8003380 <__assert_func+0x2c>)
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	4605      	mov	r5, r0
 8003360:	68d8      	ldr	r0, [r3, #12]
 8003362:	b14c      	cbz	r4, 8003378 <__assert_func+0x24>
 8003364:	4b07      	ldr	r3, [pc, #28]	; (8003384 <__assert_func+0x30>)
 8003366:	9100      	str	r1, [sp, #0]
 8003368:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800336c:	4906      	ldr	r1, [pc, #24]	; (8003388 <__assert_func+0x34>)
 800336e:	462b      	mov	r3, r5
 8003370:	f000 f80e 	bl	8003390 <fiprintf>
 8003374:	f000 fcc4 	bl	8003d00 <abort>
 8003378:	4b04      	ldr	r3, [pc, #16]	; (800338c <__assert_func+0x38>)
 800337a:	461c      	mov	r4, r3
 800337c:	e7f3      	b.n	8003366 <__assert_func+0x12>
 800337e:	bf00      	nop
 8003380:	20000028 	.word	0x20000028
 8003384:	08005746 	.word	0x08005746
 8003388:	08005753 	.word	0x08005753
 800338c:	08005781 	.word	0x08005781

08003390 <fiprintf>:
 8003390:	b40e      	push	{r1, r2, r3}
 8003392:	b503      	push	{r0, r1, lr}
 8003394:	4601      	mov	r1, r0
 8003396:	ab03      	add	r3, sp, #12
 8003398:	4805      	ldr	r0, [pc, #20]	; (80033b0 <fiprintf+0x20>)
 800339a:	f853 2b04 	ldr.w	r2, [r3], #4
 800339e:	6800      	ldr	r0, [r0, #0]
 80033a0:	9301      	str	r3, [sp, #4]
 80033a2:	f000 f919 	bl	80035d8 <_vfiprintf_r>
 80033a6:	b002      	add	sp, #8
 80033a8:	f85d eb04 	ldr.w	lr, [sp], #4
 80033ac:	b003      	add	sp, #12
 80033ae:	4770      	bx	lr
 80033b0:	20000028 	.word	0x20000028

080033b4 <malloc>:
 80033b4:	4b02      	ldr	r3, [pc, #8]	; (80033c0 <malloc+0xc>)
 80033b6:	4601      	mov	r1, r0
 80033b8:	6818      	ldr	r0, [r3, #0]
 80033ba:	f000 b86f 	b.w	800349c <_malloc_r>
 80033be:	bf00      	nop
 80033c0:	20000028 	.word	0x20000028

080033c4 <_free_r>:
 80033c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80033c6:	2900      	cmp	r1, #0
 80033c8:	d044      	beq.n	8003454 <_free_r+0x90>
 80033ca:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80033ce:	9001      	str	r0, [sp, #4]
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	f1a1 0404 	sub.w	r4, r1, #4
 80033d6:	bfb8      	it	lt
 80033d8:	18e4      	addlt	r4, r4, r3
 80033da:	f000 feb9 	bl	8004150 <__malloc_lock>
 80033de:	4a1e      	ldr	r2, [pc, #120]	; (8003458 <_free_r+0x94>)
 80033e0:	9801      	ldr	r0, [sp, #4]
 80033e2:	6813      	ldr	r3, [r2, #0]
 80033e4:	b933      	cbnz	r3, 80033f4 <_free_r+0x30>
 80033e6:	6063      	str	r3, [r4, #4]
 80033e8:	6014      	str	r4, [r2, #0]
 80033ea:	b003      	add	sp, #12
 80033ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80033f0:	f000 beb4 	b.w	800415c <__malloc_unlock>
 80033f4:	42a3      	cmp	r3, r4
 80033f6:	d908      	bls.n	800340a <_free_r+0x46>
 80033f8:	6825      	ldr	r5, [r4, #0]
 80033fa:	1961      	adds	r1, r4, r5
 80033fc:	428b      	cmp	r3, r1
 80033fe:	bf01      	itttt	eq
 8003400:	6819      	ldreq	r1, [r3, #0]
 8003402:	685b      	ldreq	r3, [r3, #4]
 8003404:	1949      	addeq	r1, r1, r5
 8003406:	6021      	streq	r1, [r4, #0]
 8003408:	e7ed      	b.n	80033e6 <_free_r+0x22>
 800340a:	461a      	mov	r2, r3
 800340c:	685b      	ldr	r3, [r3, #4]
 800340e:	b10b      	cbz	r3, 8003414 <_free_r+0x50>
 8003410:	42a3      	cmp	r3, r4
 8003412:	d9fa      	bls.n	800340a <_free_r+0x46>
 8003414:	6811      	ldr	r1, [r2, #0]
 8003416:	1855      	adds	r5, r2, r1
 8003418:	42a5      	cmp	r5, r4
 800341a:	d10b      	bne.n	8003434 <_free_r+0x70>
 800341c:	6824      	ldr	r4, [r4, #0]
 800341e:	4421      	add	r1, r4
 8003420:	1854      	adds	r4, r2, r1
 8003422:	42a3      	cmp	r3, r4
 8003424:	6011      	str	r1, [r2, #0]
 8003426:	d1e0      	bne.n	80033ea <_free_r+0x26>
 8003428:	681c      	ldr	r4, [r3, #0]
 800342a:	685b      	ldr	r3, [r3, #4]
 800342c:	6053      	str	r3, [r2, #4]
 800342e:	4421      	add	r1, r4
 8003430:	6011      	str	r1, [r2, #0]
 8003432:	e7da      	b.n	80033ea <_free_r+0x26>
 8003434:	d902      	bls.n	800343c <_free_r+0x78>
 8003436:	230c      	movs	r3, #12
 8003438:	6003      	str	r3, [r0, #0]
 800343a:	e7d6      	b.n	80033ea <_free_r+0x26>
 800343c:	6825      	ldr	r5, [r4, #0]
 800343e:	1961      	adds	r1, r4, r5
 8003440:	428b      	cmp	r3, r1
 8003442:	bf04      	itt	eq
 8003444:	6819      	ldreq	r1, [r3, #0]
 8003446:	685b      	ldreq	r3, [r3, #4]
 8003448:	6063      	str	r3, [r4, #4]
 800344a:	bf04      	itt	eq
 800344c:	1949      	addeq	r1, r1, r5
 800344e:	6021      	streq	r1, [r4, #0]
 8003450:	6054      	str	r4, [r2, #4]
 8003452:	e7ca      	b.n	80033ea <_free_r+0x26>
 8003454:	b003      	add	sp, #12
 8003456:	bd30      	pop	{r4, r5, pc}
 8003458:	20000124 	.word	0x20000124

0800345c <sbrk_aligned>:
 800345c:	b570      	push	{r4, r5, r6, lr}
 800345e:	4e0e      	ldr	r6, [pc, #56]	; (8003498 <sbrk_aligned+0x3c>)
 8003460:	460c      	mov	r4, r1
 8003462:	6831      	ldr	r1, [r6, #0]
 8003464:	4605      	mov	r5, r0
 8003466:	b911      	cbnz	r1, 800346e <sbrk_aligned+0x12>
 8003468:	f000 fb7a 	bl	8003b60 <_sbrk_r>
 800346c:	6030      	str	r0, [r6, #0]
 800346e:	4621      	mov	r1, r4
 8003470:	4628      	mov	r0, r5
 8003472:	f000 fb75 	bl	8003b60 <_sbrk_r>
 8003476:	1c43      	adds	r3, r0, #1
 8003478:	d00a      	beq.n	8003490 <sbrk_aligned+0x34>
 800347a:	1cc4      	adds	r4, r0, #3
 800347c:	f024 0403 	bic.w	r4, r4, #3
 8003480:	42a0      	cmp	r0, r4
 8003482:	d007      	beq.n	8003494 <sbrk_aligned+0x38>
 8003484:	1a21      	subs	r1, r4, r0
 8003486:	4628      	mov	r0, r5
 8003488:	f000 fb6a 	bl	8003b60 <_sbrk_r>
 800348c:	3001      	adds	r0, #1
 800348e:	d101      	bne.n	8003494 <sbrk_aligned+0x38>
 8003490:	f04f 34ff 	mov.w	r4, #4294967295
 8003494:	4620      	mov	r0, r4
 8003496:	bd70      	pop	{r4, r5, r6, pc}
 8003498:	20000128 	.word	0x20000128

0800349c <_malloc_r>:
 800349c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034a0:	1ccd      	adds	r5, r1, #3
 80034a2:	f025 0503 	bic.w	r5, r5, #3
 80034a6:	3508      	adds	r5, #8
 80034a8:	2d0c      	cmp	r5, #12
 80034aa:	bf38      	it	cc
 80034ac:	250c      	movcc	r5, #12
 80034ae:	2d00      	cmp	r5, #0
 80034b0:	4607      	mov	r7, r0
 80034b2:	db01      	blt.n	80034b8 <_malloc_r+0x1c>
 80034b4:	42a9      	cmp	r1, r5
 80034b6:	d905      	bls.n	80034c4 <_malloc_r+0x28>
 80034b8:	230c      	movs	r3, #12
 80034ba:	603b      	str	r3, [r7, #0]
 80034bc:	2600      	movs	r6, #0
 80034be:	4630      	mov	r0, r6
 80034c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80034c4:	4e2e      	ldr	r6, [pc, #184]	; (8003580 <_malloc_r+0xe4>)
 80034c6:	f000 fe43 	bl	8004150 <__malloc_lock>
 80034ca:	6833      	ldr	r3, [r6, #0]
 80034cc:	461c      	mov	r4, r3
 80034ce:	bb34      	cbnz	r4, 800351e <_malloc_r+0x82>
 80034d0:	4629      	mov	r1, r5
 80034d2:	4638      	mov	r0, r7
 80034d4:	f7ff ffc2 	bl	800345c <sbrk_aligned>
 80034d8:	1c43      	adds	r3, r0, #1
 80034da:	4604      	mov	r4, r0
 80034dc:	d14d      	bne.n	800357a <_malloc_r+0xde>
 80034de:	6834      	ldr	r4, [r6, #0]
 80034e0:	4626      	mov	r6, r4
 80034e2:	2e00      	cmp	r6, #0
 80034e4:	d140      	bne.n	8003568 <_malloc_r+0xcc>
 80034e6:	6823      	ldr	r3, [r4, #0]
 80034e8:	4631      	mov	r1, r6
 80034ea:	4638      	mov	r0, r7
 80034ec:	eb04 0803 	add.w	r8, r4, r3
 80034f0:	f000 fb36 	bl	8003b60 <_sbrk_r>
 80034f4:	4580      	cmp	r8, r0
 80034f6:	d13a      	bne.n	800356e <_malloc_r+0xd2>
 80034f8:	6821      	ldr	r1, [r4, #0]
 80034fa:	3503      	adds	r5, #3
 80034fc:	1a6d      	subs	r5, r5, r1
 80034fe:	f025 0503 	bic.w	r5, r5, #3
 8003502:	3508      	adds	r5, #8
 8003504:	2d0c      	cmp	r5, #12
 8003506:	bf38      	it	cc
 8003508:	250c      	movcc	r5, #12
 800350a:	4629      	mov	r1, r5
 800350c:	4638      	mov	r0, r7
 800350e:	f7ff ffa5 	bl	800345c <sbrk_aligned>
 8003512:	3001      	adds	r0, #1
 8003514:	d02b      	beq.n	800356e <_malloc_r+0xd2>
 8003516:	6823      	ldr	r3, [r4, #0]
 8003518:	442b      	add	r3, r5
 800351a:	6023      	str	r3, [r4, #0]
 800351c:	e00e      	b.n	800353c <_malloc_r+0xa0>
 800351e:	6822      	ldr	r2, [r4, #0]
 8003520:	1b52      	subs	r2, r2, r5
 8003522:	d41e      	bmi.n	8003562 <_malloc_r+0xc6>
 8003524:	2a0b      	cmp	r2, #11
 8003526:	d916      	bls.n	8003556 <_malloc_r+0xba>
 8003528:	1961      	adds	r1, r4, r5
 800352a:	42a3      	cmp	r3, r4
 800352c:	6025      	str	r5, [r4, #0]
 800352e:	bf18      	it	ne
 8003530:	6059      	strne	r1, [r3, #4]
 8003532:	6863      	ldr	r3, [r4, #4]
 8003534:	bf08      	it	eq
 8003536:	6031      	streq	r1, [r6, #0]
 8003538:	5162      	str	r2, [r4, r5]
 800353a:	604b      	str	r3, [r1, #4]
 800353c:	4638      	mov	r0, r7
 800353e:	f104 060b 	add.w	r6, r4, #11
 8003542:	f000 fe0b 	bl	800415c <__malloc_unlock>
 8003546:	f026 0607 	bic.w	r6, r6, #7
 800354a:	1d23      	adds	r3, r4, #4
 800354c:	1af2      	subs	r2, r6, r3
 800354e:	d0b6      	beq.n	80034be <_malloc_r+0x22>
 8003550:	1b9b      	subs	r3, r3, r6
 8003552:	50a3      	str	r3, [r4, r2]
 8003554:	e7b3      	b.n	80034be <_malloc_r+0x22>
 8003556:	6862      	ldr	r2, [r4, #4]
 8003558:	42a3      	cmp	r3, r4
 800355a:	bf0c      	ite	eq
 800355c:	6032      	streq	r2, [r6, #0]
 800355e:	605a      	strne	r2, [r3, #4]
 8003560:	e7ec      	b.n	800353c <_malloc_r+0xa0>
 8003562:	4623      	mov	r3, r4
 8003564:	6864      	ldr	r4, [r4, #4]
 8003566:	e7b2      	b.n	80034ce <_malloc_r+0x32>
 8003568:	4634      	mov	r4, r6
 800356a:	6876      	ldr	r6, [r6, #4]
 800356c:	e7b9      	b.n	80034e2 <_malloc_r+0x46>
 800356e:	230c      	movs	r3, #12
 8003570:	603b      	str	r3, [r7, #0]
 8003572:	4638      	mov	r0, r7
 8003574:	f000 fdf2 	bl	800415c <__malloc_unlock>
 8003578:	e7a1      	b.n	80034be <_malloc_r+0x22>
 800357a:	6025      	str	r5, [r4, #0]
 800357c:	e7de      	b.n	800353c <_malloc_r+0xa0>
 800357e:	bf00      	nop
 8003580:	20000124 	.word	0x20000124

08003584 <__sfputc_r>:
 8003584:	6893      	ldr	r3, [r2, #8]
 8003586:	3b01      	subs	r3, #1
 8003588:	2b00      	cmp	r3, #0
 800358a:	b410      	push	{r4}
 800358c:	6093      	str	r3, [r2, #8]
 800358e:	da08      	bge.n	80035a2 <__sfputc_r+0x1e>
 8003590:	6994      	ldr	r4, [r2, #24]
 8003592:	42a3      	cmp	r3, r4
 8003594:	db01      	blt.n	800359a <__sfputc_r+0x16>
 8003596:	290a      	cmp	r1, #10
 8003598:	d103      	bne.n	80035a2 <__sfputc_r+0x1e>
 800359a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800359e:	f000 baef 	b.w	8003b80 <__swbuf_r>
 80035a2:	6813      	ldr	r3, [r2, #0]
 80035a4:	1c58      	adds	r0, r3, #1
 80035a6:	6010      	str	r0, [r2, #0]
 80035a8:	7019      	strb	r1, [r3, #0]
 80035aa:	4608      	mov	r0, r1
 80035ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80035b0:	4770      	bx	lr

080035b2 <__sfputs_r>:
 80035b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80035b4:	4606      	mov	r6, r0
 80035b6:	460f      	mov	r7, r1
 80035b8:	4614      	mov	r4, r2
 80035ba:	18d5      	adds	r5, r2, r3
 80035bc:	42ac      	cmp	r4, r5
 80035be:	d101      	bne.n	80035c4 <__sfputs_r+0x12>
 80035c0:	2000      	movs	r0, #0
 80035c2:	e007      	b.n	80035d4 <__sfputs_r+0x22>
 80035c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80035c8:	463a      	mov	r2, r7
 80035ca:	4630      	mov	r0, r6
 80035cc:	f7ff ffda 	bl	8003584 <__sfputc_r>
 80035d0:	1c43      	adds	r3, r0, #1
 80035d2:	d1f3      	bne.n	80035bc <__sfputs_r+0xa>
 80035d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080035d8 <_vfiprintf_r>:
 80035d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035dc:	460d      	mov	r5, r1
 80035de:	b09d      	sub	sp, #116	; 0x74
 80035e0:	4614      	mov	r4, r2
 80035e2:	4698      	mov	r8, r3
 80035e4:	4606      	mov	r6, r0
 80035e6:	b118      	cbz	r0, 80035f0 <_vfiprintf_r+0x18>
 80035e8:	6983      	ldr	r3, [r0, #24]
 80035ea:	b90b      	cbnz	r3, 80035f0 <_vfiprintf_r+0x18>
 80035ec:	f000 fcaa 	bl	8003f44 <__sinit>
 80035f0:	4b89      	ldr	r3, [pc, #548]	; (8003818 <_vfiprintf_r+0x240>)
 80035f2:	429d      	cmp	r5, r3
 80035f4:	d11b      	bne.n	800362e <_vfiprintf_r+0x56>
 80035f6:	6875      	ldr	r5, [r6, #4]
 80035f8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80035fa:	07d9      	lsls	r1, r3, #31
 80035fc:	d405      	bmi.n	800360a <_vfiprintf_r+0x32>
 80035fe:	89ab      	ldrh	r3, [r5, #12]
 8003600:	059a      	lsls	r2, r3, #22
 8003602:	d402      	bmi.n	800360a <_vfiprintf_r+0x32>
 8003604:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003606:	f000 fd3b 	bl	8004080 <__retarget_lock_acquire_recursive>
 800360a:	89ab      	ldrh	r3, [r5, #12]
 800360c:	071b      	lsls	r3, r3, #28
 800360e:	d501      	bpl.n	8003614 <_vfiprintf_r+0x3c>
 8003610:	692b      	ldr	r3, [r5, #16]
 8003612:	b9eb      	cbnz	r3, 8003650 <_vfiprintf_r+0x78>
 8003614:	4629      	mov	r1, r5
 8003616:	4630      	mov	r0, r6
 8003618:	f000 fb04 	bl	8003c24 <__swsetup_r>
 800361c:	b1c0      	cbz	r0, 8003650 <_vfiprintf_r+0x78>
 800361e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003620:	07dc      	lsls	r4, r3, #31
 8003622:	d50e      	bpl.n	8003642 <_vfiprintf_r+0x6a>
 8003624:	f04f 30ff 	mov.w	r0, #4294967295
 8003628:	b01d      	add	sp, #116	; 0x74
 800362a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800362e:	4b7b      	ldr	r3, [pc, #492]	; (800381c <_vfiprintf_r+0x244>)
 8003630:	429d      	cmp	r5, r3
 8003632:	d101      	bne.n	8003638 <_vfiprintf_r+0x60>
 8003634:	68b5      	ldr	r5, [r6, #8]
 8003636:	e7df      	b.n	80035f8 <_vfiprintf_r+0x20>
 8003638:	4b79      	ldr	r3, [pc, #484]	; (8003820 <_vfiprintf_r+0x248>)
 800363a:	429d      	cmp	r5, r3
 800363c:	bf08      	it	eq
 800363e:	68f5      	ldreq	r5, [r6, #12]
 8003640:	e7da      	b.n	80035f8 <_vfiprintf_r+0x20>
 8003642:	89ab      	ldrh	r3, [r5, #12]
 8003644:	0598      	lsls	r0, r3, #22
 8003646:	d4ed      	bmi.n	8003624 <_vfiprintf_r+0x4c>
 8003648:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800364a:	f000 fd1a 	bl	8004082 <__retarget_lock_release_recursive>
 800364e:	e7e9      	b.n	8003624 <_vfiprintf_r+0x4c>
 8003650:	2300      	movs	r3, #0
 8003652:	9309      	str	r3, [sp, #36]	; 0x24
 8003654:	2320      	movs	r3, #32
 8003656:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800365a:	f8cd 800c 	str.w	r8, [sp, #12]
 800365e:	2330      	movs	r3, #48	; 0x30
 8003660:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8003824 <_vfiprintf_r+0x24c>
 8003664:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003668:	f04f 0901 	mov.w	r9, #1
 800366c:	4623      	mov	r3, r4
 800366e:	469a      	mov	sl, r3
 8003670:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003674:	b10a      	cbz	r2, 800367a <_vfiprintf_r+0xa2>
 8003676:	2a25      	cmp	r2, #37	; 0x25
 8003678:	d1f9      	bne.n	800366e <_vfiprintf_r+0x96>
 800367a:	ebba 0b04 	subs.w	fp, sl, r4
 800367e:	d00b      	beq.n	8003698 <_vfiprintf_r+0xc0>
 8003680:	465b      	mov	r3, fp
 8003682:	4622      	mov	r2, r4
 8003684:	4629      	mov	r1, r5
 8003686:	4630      	mov	r0, r6
 8003688:	f7ff ff93 	bl	80035b2 <__sfputs_r>
 800368c:	3001      	adds	r0, #1
 800368e:	f000 80aa 	beq.w	80037e6 <_vfiprintf_r+0x20e>
 8003692:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003694:	445a      	add	r2, fp
 8003696:	9209      	str	r2, [sp, #36]	; 0x24
 8003698:	f89a 3000 	ldrb.w	r3, [sl]
 800369c:	2b00      	cmp	r3, #0
 800369e:	f000 80a2 	beq.w	80037e6 <_vfiprintf_r+0x20e>
 80036a2:	2300      	movs	r3, #0
 80036a4:	f04f 32ff 	mov.w	r2, #4294967295
 80036a8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80036ac:	f10a 0a01 	add.w	sl, sl, #1
 80036b0:	9304      	str	r3, [sp, #16]
 80036b2:	9307      	str	r3, [sp, #28]
 80036b4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80036b8:	931a      	str	r3, [sp, #104]	; 0x68
 80036ba:	4654      	mov	r4, sl
 80036bc:	2205      	movs	r2, #5
 80036be:	f814 1b01 	ldrb.w	r1, [r4], #1
 80036c2:	4858      	ldr	r0, [pc, #352]	; (8003824 <_vfiprintf_r+0x24c>)
 80036c4:	f7fc fd8c 	bl	80001e0 <memchr>
 80036c8:	9a04      	ldr	r2, [sp, #16]
 80036ca:	b9d8      	cbnz	r0, 8003704 <_vfiprintf_r+0x12c>
 80036cc:	06d1      	lsls	r1, r2, #27
 80036ce:	bf44      	itt	mi
 80036d0:	2320      	movmi	r3, #32
 80036d2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80036d6:	0713      	lsls	r3, r2, #28
 80036d8:	bf44      	itt	mi
 80036da:	232b      	movmi	r3, #43	; 0x2b
 80036dc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80036e0:	f89a 3000 	ldrb.w	r3, [sl]
 80036e4:	2b2a      	cmp	r3, #42	; 0x2a
 80036e6:	d015      	beq.n	8003714 <_vfiprintf_r+0x13c>
 80036e8:	9a07      	ldr	r2, [sp, #28]
 80036ea:	4654      	mov	r4, sl
 80036ec:	2000      	movs	r0, #0
 80036ee:	f04f 0c0a 	mov.w	ip, #10
 80036f2:	4621      	mov	r1, r4
 80036f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80036f8:	3b30      	subs	r3, #48	; 0x30
 80036fa:	2b09      	cmp	r3, #9
 80036fc:	d94e      	bls.n	800379c <_vfiprintf_r+0x1c4>
 80036fe:	b1b0      	cbz	r0, 800372e <_vfiprintf_r+0x156>
 8003700:	9207      	str	r2, [sp, #28]
 8003702:	e014      	b.n	800372e <_vfiprintf_r+0x156>
 8003704:	eba0 0308 	sub.w	r3, r0, r8
 8003708:	fa09 f303 	lsl.w	r3, r9, r3
 800370c:	4313      	orrs	r3, r2
 800370e:	9304      	str	r3, [sp, #16]
 8003710:	46a2      	mov	sl, r4
 8003712:	e7d2      	b.n	80036ba <_vfiprintf_r+0xe2>
 8003714:	9b03      	ldr	r3, [sp, #12]
 8003716:	1d19      	adds	r1, r3, #4
 8003718:	681b      	ldr	r3, [r3, #0]
 800371a:	9103      	str	r1, [sp, #12]
 800371c:	2b00      	cmp	r3, #0
 800371e:	bfbb      	ittet	lt
 8003720:	425b      	neglt	r3, r3
 8003722:	f042 0202 	orrlt.w	r2, r2, #2
 8003726:	9307      	strge	r3, [sp, #28]
 8003728:	9307      	strlt	r3, [sp, #28]
 800372a:	bfb8      	it	lt
 800372c:	9204      	strlt	r2, [sp, #16]
 800372e:	7823      	ldrb	r3, [r4, #0]
 8003730:	2b2e      	cmp	r3, #46	; 0x2e
 8003732:	d10c      	bne.n	800374e <_vfiprintf_r+0x176>
 8003734:	7863      	ldrb	r3, [r4, #1]
 8003736:	2b2a      	cmp	r3, #42	; 0x2a
 8003738:	d135      	bne.n	80037a6 <_vfiprintf_r+0x1ce>
 800373a:	9b03      	ldr	r3, [sp, #12]
 800373c:	1d1a      	adds	r2, r3, #4
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	9203      	str	r2, [sp, #12]
 8003742:	2b00      	cmp	r3, #0
 8003744:	bfb8      	it	lt
 8003746:	f04f 33ff 	movlt.w	r3, #4294967295
 800374a:	3402      	adds	r4, #2
 800374c:	9305      	str	r3, [sp, #20]
 800374e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8003834 <_vfiprintf_r+0x25c>
 8003752:	7821      	ldrb	r1, [r4, #0]
 8003754:	2203      	movs	r2, #3
 8003756:	4650      	mov	r0, sl
 8003758:	f7fc fd42 	bl	80001e0 <memchr>
 800375c:	b140      	cbz	r0, 8003770 <_vfiprintf_r+0x198>
 800375e:	2340      	movs	r3, #64	; 0x40
 8003760:	eba0 000a 	sub.w	r0, r0, sl
 8003764:	fa03 f000 	lsl.w	r0, r3, r0
 8003768:	9b04      	ldr	r3, [sp, #16]
 800376a:	4303      	orrs	r3, r0
 800376c:	3401      	adds	r4, #1
 800376e:	9304      	str	r3, [sp, #16]
 8003770:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003774:	482c      	ldr	r0, [pc, #176]	; (8003828 <_vfiprintf_r+0x250>)
 8003776:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800377a:	2206      	movs	r2, #6
 800377c:	f7fc fd30 	bl	80001e0 <memchr>
 8003780:	2800      	cmp	r0, #0
 8003782:	d03f      	beq.n	8003804 <_vfiprintf_r+0x22c>
 8003784:	4b29      	ldr	r3, [pc, #164]	; (800382c <_vfiprintf_r+0x254>)
 8003786:	bb1b      	cbnz	r3, 80037d0 <_vfiprintf_r+0x1f8>
 8003788:	9b03      	ldr	r3, [sp, #12]
 800378a:	3307      	adds	r3, #7
 800378c:	f023 0307 	bic.w	r3, r3, #7
 8003790:	3308      	adds	r3, #8
 8003792:	9303      	str	r3, [sp, #12]
 8003794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003796:	443b      	add	r3, r7
 8003798:	9309      	str	r3, [sp, #36]	; 0x24
 800379a:	e767      	b.n	800366c <_vfiprintf_r+0x94>
 800379c:	fb0c 3202 	mla	r2, ip, r2, r3
 80037a0:	460c      	mov	r4, r1
 80037a2:	2001      	movs	r0, #1
 80037a4:	e7a5      	b.n	80036f2 <_vfiprintf_r+0x11a>
 80037a6:	2300      	movs	r3, #0
 80037a8:	3401      	adds	r4, #1
 80037aa:	9305      	str	r3, [sp, #20]
 80037ac:	4619      	mov	r1, r3
 80037ae:	f04f 0c0a 	mov.w	ip, #10
 80037b2:	4620      	mov	r0, r4
 80037b4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80037b8:	3a30      	subs	r2, #48	; 0x30
 80037ba:	2a09      	cmp	r2, #9
 80037bc:	d903      	bls.n	80037c6 <_vfiprintf_r+0x1ee>
 80037be:	2b00      	cmp	r3, #0
 80037c0:	d0c5      	beq.n	800374e <_vfiprintf_r+0x176>
 80037c2:	9105      	str	r1, [sp, #20]
 80037c4:	e7c3      	b.n	800374e <_vfiprintf_r+0x176>
 80037c6:	fb0c 2101 	mla	r1, ip, r1, r2
 80037ca:	4604      	mov	r4, r0
 80037cc:	2301      	movs	r3, #1
 80037ce:	e7f0      	b.n	80037b2 <_vfiprintf_r+0x1da>
 80037d0:	ab03      	add	r3, sp, #12
 80037d2:	9300      	str	r3, [sp, #0]
 80037d4:	462a      	mov	r2, r5
 80037d6:	4b16      	ldr	r3, [pc, #88]	; (8003830 <_vfiprintf_r+0x258>)
 80037d8:	a904      	add	r1, sp, #16
 80037da:	4630      	mov	r0, r6
 80037dc:	f3af 8000 	nop.w
 80037e0:	4607      	mov	r7, r0
 80037e2:	1c78      	adds	r0, r7, #1
 80037e4:	d1d6      	bne.n	8003794 <_vfiprintf_r+0x1bc>
 80037e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80037e8:	07d9      	lsls	r1, r3, #31
 80037ea:	d405      	bmi.n	80037f8 <_vfiprintf_r+0x220>
 80037ec:	89ab      	ldrh	r3, [r5, #12]
 80037ee:	059a      	lsls	r2, r3, #22
 80037f0:	d402      	bmi.n	80037f8 <_vfiprintf_r+0x220>
 80037f2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80037f4:	f000 fc45 	bl	8004082 <__retarget_lock_release_recursive>
 80037f8:	89ab      	ldrh	r3, [r5, #12]
 80037fa:	065b      	lsls	r3, r3, #25
 80037fc:	f53f af12 	bmi.w	8003624 <_vfiprintf_r+0x4c>
 8003800:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003802:	e711      	b.n	8003628 <_vfiprintf_r+0x50>
 8003804:	ab03      	add	r3, sp, #12
 8003806:	9300      	str	r3, [sp, #0]
 8003808:	462a      	mov	r2, r5
 800380a:	4b09      	ldr	r3, [pc, #36]	; (8003830 <_vfiprintf_r+0x258>)
 800380c:	a904      	add	r1, sp, #16
 800380e:	4630      	mov	r0, r6
 8003810:	f000 f880 	bl	8003914 <_printf_i>
 8003814:	e7e4      	b.n	80037e0 <_vfiprintf_r+0x208>
 8003816:	bf00      	nop
 8003818:	080057d8 	.word	0x080057d8
 800381c:	080057f8 	.word	0x080057f8
 8003820:	080057b8 	.word	0x080057b8
 8003824:	08005782 	.word	0x08005782
 8003828:	0800578c 	.word	0x0800578c
 800382c:	00000000 	.word	0x00000000
 8003830:	080035b3 	.word	0x080035b3
 8003834:	08005788 	.word	0x08005788

08003838 <_printf_common>:
 8003838:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800383c:	4616      	mov	r6, r2
 800383e:	4699      	mov	r9, r3
 8003840:	688a      	ldr	r2, [r1, #8]
 8003842:	690b      	ldr	r3, [r1, #16]
 8003844:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003848:	4293      	cmp	r3, r2
 800384a:	bfb8      	it	lt
 800384c:	4613      	movlt	r3, r2
 800384e:	6033      	str	r3, [r6, #0]
 8003850:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003854:	4607      	mov	r7, r0
 8003856:	460c      	mov	r4, r1
 8003858:	b10a      	cbz	r2, 800385e <_printf_common+0x26>
 800385a:	3301      	adds	r3, #1
 800385c:	6033      	str	r3, [r6, #0]
 800385e:	6823      	ldr	r3, [r4, #0]
 8003860:	0699      	lsls	r1, r3, #26
 8003862:	bf42      	ittt	mi
 8003864:	6833      	ldrmi	r3, [r6, #0]
 8003866:	3302      	addmi	r3, #2
 8003868:	6033      	strmi	r3, [r6, #0]
 800386a:	6825      	ldr	r5, [r4, #0]
 800386c:	f015 0506 	ands.w	r5, r5, #6
 8003870:	d106      	bne.n	8003880 <_printf_common+0x48>
 8003872:	f104 0a19 	add.w	sl, r4, #25
 8003876:	68e3      	ldr	r3, [r4, #12]
 8003878:	6832      	ldr	r2, [r6, #0]
 800387a:	1a9b      	subs	r3, r3, r2
 800387c:	42ab      	cmp	r3, r5
 800387e:	dc26      	bgt.n	80038ce <_printf_common+0x96>
 8003880:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003884:	1e13      	subs	r3, r2, #0
 8003886:	6822      	ldr	r2, [r4, #0]
 8003888:	bf18      	it	ne
 800388a:	2301      	movne	r3, #1
 800388c:	0692      	lsls	r2, r2, #26
 800388e:	d42b      	bmi.n	80038e8 <_printf_common+0xb0>
 8003890:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003894:	4649      	mov	r1, r9
 8003896:	4638      	mov	r0, r7
 8003898:	47c0      	blx	r8
 800389a:	3001      	adds	r0, #1
 800389c:	d01e      	beq.n	80038dc <_printf_common+0xa4>
 800389e:	6823      	ldr	r3, [r4, #0]
 80038a0:	68e5      	ldr	r5, [r4, #12]
 80038a2:	6832      	ldr	r2, [r6, #0]
 80038a4:	f003 0306 	and.w	r3, r3, #6
 80038a8:	2b04      	cmp	r3, #4
 80038aa:	bf08      	it	eq
 80038ac:	1aad      	subeq	r5, r5, r2
 80038ae:	68a3      	ldr	r3, [r4, #8]
 80038b0:	6922      	ldr	r2, [r4, #16]
 80038b2:	bf0c      	ite	eq
 80038b4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80038b8:	2500      	movne	r5, #0
 80038ba:	4293      	cmp	r3, r2
 80038bc:	bfc4      	itt	gt
 80038be:	1a9b      	subgt	r3, r3, r2
 80038c0:	18ed      	addgt	r5, r5, r3
 80038c2:	2600      	movs	r6, #0
 80038c4:	341a      	adds	r4, #26
 80038c6:	42b5      	cmp	r5, r6
 80038c8:	d11a      	bne.n	8003900 <_printf_common+0xc8>
 80038ca:	2000      	movs	r0, #0
 80038cc:	e008      	b.n	80038e0 <_printf_common+0xa8>
 80038ce:	2301      	movs	r3, #1
 80038d0:	4652      	mov	r2, sl
 80038d2:	4649      	mov	r1, r9
 80038d4:	4638      	mov	r0, r7
 80038d6:	47c0      	blx	r8
 80038d8:	3001      	adds	r0, #1
 80038da:	d103      	bne.n	80038e4 <_printf_common+0xac>
 80038dc:	f04f 30ff 	mov.w	r0, #4294967295
 80038e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80038e4:	3501      	adds	r5, #1
 80038e6:	e7c6      	b.n	8003876 <_printf_common+0x3e>
 80038e8:	18e1      	adds	r1, r4, r3
 80038ea:	1c5a      	adds	r2, r3, #1
 80038ec:	2030      	movs	r0, #48	; 0x30
 80038ee:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80038f2:	4422      	add	r2, r4
 80038f4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80038f8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80038fc:	3302      	adds	r3, #2
 80038fe:	e7c7      	b.n	8003890 <_printf_common+0x58>
 8003900:	2301      	movs	r3, #1
 8003902:	4622      	mov	r2, r4
 8003904:	4649      	mov	r1, r9
 8003906:	4638      	mov	r0, r7
 8003908:	47c0      	blx	r8
 800390a:	3001      	adds	r0, #1
 800390c:	d0e6      	beq.n	80038dc <_printf_common+0xa4>
 800390e:	3601      	adds	r6, #1
 8003910:	e7d9      	b.n	80038c6 <_printf_common+0x8e>
	...

08003914 <_printf_i>:
 8003914:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003918:	7e0f      	ldrb	r7, [r1, #24]
 800391a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800391c:	2f78      	cmp	r7, #120	; 0x78
 800391e:	4691      	mov	r9, r2
 8003920:	4680      	mov	r8, r0
 8003922:	460c      	mov	r4, r1
 8003924:	469a      	mov	sl, r3
 8003926:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800392a:	d807      	bhi.n	800393c <_printf_i+0x28>
 800392c:	2f62      	cmp	r7, #98	; 0x62
 800392e:	d80a      	bhi.n	8003946 <_printf_i+0x32>
 8003930:	2f00      	cmp	r7, #0
 8003932:	f000 80d8 	beq.w	8003ae6 <_printf_i+0x1d2>
 8003936:	2f58      	cmp	r7, #88	; 0x58
 8003938:	f000 80a3 	beq.w	8003a82 <_printf_i+0x16e>
 800393c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003940:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003944:	e03a      	b.n	80039bc <_printf_i+0xa8>
 8003946:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800394a:	2b15      	cmp	r3, #21
 800394c:	d8f6      	bhi.n	800393c <_printf_i+0x28>
 800394e:	a101      	add	r1, pc, #4	; (adr r1, 8003954 <_printf_i+0x40>)
 8003950:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003954:	080039ad 	.word	0x080039ad
 8003958:	080039c1 	.word	0x080039c1
 800395c:	0800393d 	.word	0x0800393d
 8003960:	0800393d 	.word	0x0800393d
 8003964:	0800393d 	.word	0x0800393d
 8003968:	0800393d 	.word	0x0800393d
 800396c:	080039c1 	.word	0x080039c1
 8003970:	0800393d 	.word	0x0800393d
 8003974:	0800393d 	.word	0x0800393d
 8003978:	0800393d 	.word	0x0800393d
 800397c:	0800393d 	.word	0x0800393d
 8003980:	08003acd 	.word	0x08003acd
 8003984:	080039f1 	.word	0x080039f1
 8003988:	08003aaf 	.word	0x08003aaf
 800398c:	0800393d 	.word	0x0800393d
 8003990:	0800393d 	.word	0x0800393d
 8003994:	08003aef 	.word	0x08003aef
 8003998:	0800393d 	.word	0x0800393d
 800399c:	080039f1 	.word	0x080039f1
 80039a0:	0800393d 	.word	0x0800393d
 80039a4:	0800393d 	.word	0x0800393d
 80039a8:	08003ab7 	.word	0x08003ab7
 80039ac:	682b      	ldr	r3, [r5, #0]
 80039ae:	1d1a      	adds	r2, r3, #4
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	602a      	str	r2, [r5, #0]
 80039b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80039b8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80039bc:	2301      	movs	r3, #1
 80039be:	e0a3      	b.n	8003b08 <_printf_i+0x1f4>
 80039c0:	6820      	ldr	r0, [r4, #0]
 80039c2:	6829      	ldr	r1, [r5, #0]
 80039c4:	0606      	lsls	r6, r0, #24
 80039c6:	f101 0304 	add.w	r3, r1, #4
 80039ca:	d50a      	bpl.n	80039e2 <_printf_i+0xce>
 80039cc:	680e      	ldr	r6, [r1, #0]
 80039ce:	602b      	str	r3, [r5, #0]
 80039d0:	2e00      	cmp	r6, #0
 80039d2:	da03      	bge.n	80039dc <_printf_i+0xc8>
 80039d4:	232d      	movs	r3, #45	; 0x2d
 80039d6:	4276      	negs	r6, r6
 80039d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80039dc:	485e      	ldr	r0, [pc, #376]	; (8003b58 <_printf_i+0x244>)
 80039de:	230a      	movs	r3, #10
 80039e0:	e019      	b.n	8003a16 <_printf_i+0x102>
 80039e2:	680e      	ldr	r6, [r1, #0]
 80039e4:	602b      	str	r3, [r5, #0]
 80039e6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80039ea:	bf18      	it	ne
 80039ec:	b236      	sxthne	r6, r6
 80039ee:	e7ef      	b.n	80039d0 <_printf_i+0xbc>
 80039f0:	682b      	ldr	r3, [r5, #0]
 80039f2:	6820      	ldr	r0, [r4, #0]
 80039f4:	1d19      	adds	r1, r3, #4
 80039f6:	6029      	str	r1, [r5, #0]
 80039f8:	0601      	lsls	r1, r0, #24
 80039fa:	d501      	bpl.n	8003a00 <_printf_i+0xec>
 80039fc:	681e      	ldr	r6, [r3, #0]
 80039fe:	e002      	b.n	8003a06 <_printf_i+0xf2>
 8003a00:	0646      	lsls	r6, r0, #25
 8003a02:	d5fb      	bpl.n	80039fc <_printf_i+0xe8>
 8003a04:	881e      	ldrh	r6, [r3, #0]
 8003a06:	4854      	ldr	r0, [pc, #336]	; (8003b58 <_printf_i+0x244>)
 8003a08:	2f6f      	cmp	r7, #111	; 0x6f
 8003a0a:	bf0c      	ite	eq
 8003a0c:	2308      	moveq	r3, #8
 8003a0e:	230a      	movne	r3, #10
 8003a10:	2100      	movs	r1, #0
 8003a12:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8003a16:	6865      	ldr	r5, [r4, #4]
 8003a18:	60a5      	str	r5, [r4, #8]
 8003a1a:	2d00      	cmp	r5, #0
 8003a1c:	bfa2      	ittt	ge
 8003a1e:	6821      	ldrge	r1, [r4, #0]
 8003a20:	f021 0104 	bicge.w	r1, r1, #4
 8003a24:	6021      	strge	r1, [r4, #0]
 8003a26:	b90e      	cbnz	r6, 8003a2c <_printf_i+0x118>
 8003a28:	2d00      	cmp	r5, #0
 8003a2a:	d04d      	beq.n	8003ac8 <_printf_i+0x1b4>
 8003a2c:	4615      	mov	r5, r2
 8003a2e:	fbb6 f1f3 	udiv	r1, r6, r3
 8003a32:	fb03 6711 	mls	r7, r3, r1, r6
 8003a36:	5dc7      	ldrb	r7, [r0, r7]
 8003a38:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8003a3c:	4637      	mov	r7, r6
 8003a3e:	42bb      	cmp	r3, r7
 8003a40:	460e      	mov	r6, r1
 8003a42:	d9f4      	bls.n	8003a2e <_printf_i+0x11a>
 8003a44:	2b08      	cmp	r3, #8
 8003a46:	d10b      	bne.n	8003a60 <_printf_i+0x14c>
 8003a48:	6823      	ldr	r3, [r4, #0]
 8003a4a:	07de      	lsls	r6, r3, #31
 8003a4c:	d508      	bpl.n	8003a60 <_printf_i+0x14c>
 8003a4e:	6923      	ldr	r3, [r4, #16]
 8003a50:	6861      	ldr	r1, [r4, #4]
 8003a52:	4299      	cmp	r1, r3
 8003a54:	bfde      	ittt	le
 8003a56:	2330      	movle	r3, #48	; 0x30
 8003a58:	f805 3c01 	strble.w	r3, [r5, #-1]
 8003a5c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8003a60:	1b52      	subs	r2, r2, r5
 8003a62:	6122      	str	r2, [r4, #16]
 8003a64:	f8cd a000 	str.w	sl, [sp]
 8003a68:	464b      	mov	r3, r9
 8003a6a:	aa03      	add	r2, sp, #12
 8003a6c:	4621      	mov	r1, r4
 8003a6e:	4640      	mov	r0, r8
 8003a70:	f7ff fee2 	bl	8003838 <_printf_common>
 8003a74:	3001      	adds	r0, #1
 8003a76:	d14c      	bne.n	8003b12 <_printf_i+0x1fe>
 8003a78:	f04f 30ff 	mov.w	r0, #4294967295
 8003a7c:	b004      	add	sp, #16
 8003a7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a82:	4835      	ldr	r0, [pc, #212]	; (8003b58 <_printf_i+0x244>)
 8003a84:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8003a88:	6829      	ldr	r1, [r5, #0]
 8003a8a:	6823      	ldr	r3, [r4, #0]
 8003a8c:	f851 6b04 	ldr.w	r6, [r1], #4
 8003a90:	6029      	str	r1, [r5, #0]
 8003a92:	061d      	lsls	r5, r3, #24
 8003a94:	d514      	bpl.n	8003ac0 <_printf_i+0x1ac>
 8003a96:	07df      	lsls	r7, r3, #31
 8003a98:	bf44      	itt	mi
 8003a9a:	f043 0320 	orrmi.w	r3, r3, #32
 8003a9e:	6023      	strmi	r3, [r4, #0]
 8003aa0:	b91e      	cbnz	r6, 8003aaa <_printf_i+0x196>
 8003aa2:	6823      	ldr	r3, [r4, #0]
 8003aa4:	f023 0320 	bic.w	r3, r3, #32
 8003aa8:	6023      	str	r3, [r4, #0]
 8003aaa:	2310      	movs	r3, #16
 8003aac:	e7b0      	b.n	8003a10 <_printf_i+0xfc>
 8003aae:	6823      	ldr	r3, [r4, #0]
 8003ab0:	f043 0320 	orr.w	r3, r3, #32
 8003ab4:	6023      	str	r3, [r4, #0]
 8003ab6:	2378      	movs	r3, #120	; 0x78
 8003ab8:	4828      	ldr	r0, [pc, #160]	; (8003b5c <_printf_i+0x248>)
 8003aba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8003abe:	e7e3      	b.n	8003a88 <_printf_i+0x174>
 8003ac0:	0659      	lsls	r1, r3, #25
 8003ac2:	bf48      	it	mi
 8003ac4:	b2b6      	uxthmi	r6, r6
 8003ac6:	e7e6      	b.n	8003a96 <_printf_i+0x182>
 8003ac8:	4615      	mov	r5, r2
 8003aca:	e7bb      	b.n	8003a44 <_printf_i+0x130>
 8003acc:	682b      	ldr	r3, [r5, #0]
 8003ace:	6826      	ldr	r6, [r4, #0]
 8003ad0:	6961      	ldr	r1, [r4, #20]
 8003ad2:	1d18      	adds	r0, r3, #4
 8003ad4:	6028      	str	r0, [r5, #0]
 8003ad6:	0635      	lsls	r5, r6, #24
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	d501      	bpl.n	8003ae0 <_printf_i+0x1cc>
 8003adc:	6019      	str	r1, [r3, #0]
 8003ade:	e002      	b.n	8003ae6 <_printf_i+0x1d2>
 8003ae0:	0670      	lsls	r0, r6, #25
 8003ae2:	d5fb      	bpl.n	8003adc <_printf_i+0x1c8>
 8003ae4:	8019      	strh	r1, [r3, #0]
 8003ae6:	2300      	movs	r3, #0
 8003ae8:	6123      	str	r3, [r4, #16]
 8003aea:	4615      	mov	r5, r2
 8003aec:	e7ba      	b.n	8003a64 <_printf_i+0x150>
 8003aee:	682b      	ldr	r3, [r5, #0]
 8003af0:	1d1a      	adds	r2, r3, #4
 8003af2:	602a      	str	r2, [r5, #0]
 8003af4:	681d      	ldr	r5, [r3, #0]
 8003af6:	6862      	ldr	r2, [r4, #4]
 8003af8:	2100      	movs	r1, #0
 8003afa:	4628      	mov	r0, r5
 8003afc:	f7fc fb70 	bl	80001e0 <memchr>
 8003b00:	b108      	cbz	r0, 8003b06 <_printf_i+0x1f2>
 8003b02:	1b40      	subs	r0, r0, r5
 8003b04:	6060      	str	r0, [r4, #4]
 8003b06:	6863      	ldr	r3, [r4, #4]
 8003b08:	6123      	str	r3, [r4, #16]
 8003b0a:	2300      	movs	r3, #0
 8003b0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003b10:	e7a8      	b.n	8003a64 <_printf_i+0x150>
 8003b12:	6923      	ldr	r3, [r4, #16]
 8003b14:	462a      	mov	r2, r5
 8003b16:	4649      	mov	r1, r9
 8003b18:	4640      	mov	r0, r8
 8003b1a:	47d0      	blx	sl
 8003b1c:	3001      	adds	r0, #1
 8003b1e:	d0ab      	beq.n	8003a78 <_printf_i+0x164>
 8003b20:	6823      	ldr	r3, [r4, #0]
 8003b22:	079b      	lsls	r3, r3, #30
 8003b24:	d413      	bmi.n	8003b4e <_printf_i+0x23a>
 8003b26:	68e0      	ldr	r0, [r4, #12]
 8003b28:	9b03      	ldr	r3, [sp, #12]
 8003b2a:	4298      	cmp	r0, r3
 8003b2c:	bfb8      	it	lt
 8003b2e:	4618      	movlt	r0, r3
 8003b30:	e7a4      	b.n	8003a7c <_printf_i+0x168>
 8003b32:	2301      	movs	r3, #1
 8003b34:	4632      	mov	r2, r6
 8003b36:	4649      	mov	r1, r9
 8003b38:	4640      	mov	r0, r8
 8003b3a:	47d0      	blx	sl
 8003b3c:	3001      	adds	r0, #1
 8003b3e:	d09b      	beq.n	8003a78 <_printf_i+0x164>
 8003b40:	3501      	adds	r5, #1
 8003b42:	68e3      	ldr	r3, [r4, #12]
 8003b44:	9903      	ldr	r1, [sp, #12]
 8003b46:	1a5b      	subs	r3, r3, r1
 8003b48:	42ab      	cmp	r3, r5
 8003b4a:	dcf2      	bgt.n	8003b32 <_printf_i+0x21e>
 8003b4c:	e7eb      	b.n	8003b26 <_printf_i+0x212>
 8003b4e:	2500      	movs	r5, #0
 8003b50:	f104 0619 	add.w	r6, r4, #25
 8003b54:	e7f5      	b.n	8003b42 <_printf_i+0x22e>
 8003b56:	bf00      	nop
 8003b58:	08005793 	.word	0x08005793
 8003b5c:	080057a4 	.word	0x080057a4

08003b60 <_sbrk_r>:
 8003b60:	b538      	push	{r3, r4, r5, lr}
 8003b62:	4d06      	ldr	r5, [pc, #24]	; (8003b7c <_sbrk_r+0x1c>)
 8003b64:	2300      	movs	r3, #0
 8003b66:	4604      	mov	r4, r0
 8003b68:	4608      	mov	r0, r1
 8003b6a:	602b      	str	r3, [r5, #0]
 8003b6c:	f7fe fc82 	bl	8002474 <_sbrk>
 8003b70:	1c43      	adds	r3, r0, #1
 8003b72:	d102      	bne.n	8003b7a <_sbrk_r+0x1a>
 8003b74:	682b      	ldr	r3, [r5, #0]
 8003b76:	b103      	cbz	r3, 8003b7a <_sbrk_r+0x1a>
 8003b78:	6023      	str	r3, [r4, #0]
 8003b7a:	bd38      	pop	{r3, r4, r5, pc}
 8003b7c:	20000130 	.word	0x20000130

08003b80 <__swbuf_r>:
 8003b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b82:	460e      	mov	r6, r1
 8003b84:	4614      	mov	r4, r2
 8003b86:	4605      	mov	r5, r0
 8003b88:	b118      	cbz	r0, 8003b92 <__swbuf_r+0x12>
 8003b8a:	6983      	ldr	r3, [r0, #24]
 8003b8c:	b90b      	cbnz	r3, 8003b92 <__swbuf_r+0x12>
 8003b8e:	f000 f9d9 	bl	8003f44 <__sinit>
 8003b92:	4b21      	ldr	r3, [pc, #132]	; (8003c18 <__swbuf_r+0x98>)
 8003b94:	429c      	cmp	r4, r3
 8003b96:	d12b      	bne.n	8003bf0 <__swbuf_r+0x70>
 8003b98:	686c      	ldr	r4, [r5, #4]
 8003b9a:	69a3      	ldr	r3, [r4, #24]
 8003b9c:	60a3      	str	r3, [r4, #8]
 8003b9e:	89a3      	ldrh	r3, [r4, #12]
 8003ba0:	071a      	lsls	r2, r3, #28
 8003ba2:	d52f      	bpl.n	8003c04 <__swbuf_r+0x84>
 8003ba4:	6923      	ldr	r3, [r4, #16]
 8003ba6:	b36b      	cbz	r3, 8003c04 <__swbuf_r+0x84>
 8003ba8:	6923      	ldr	r3, [r4, #16]
 8003baa:	6820      	ldr	r0, [r4, #0]
 8003bac:	1ac0      	subs	r0, r0, r3
 8003bae:	6963      	ldr	r3, [r4, #20]
 8003bb0:	b2f6      	uxtb	r6, r6
 8003bb2:	4283      	cmp	r3, r0
 8003bb4:	4637      	mov	r7, r6
 8003bb6:	dc04      	bgt.n	8003bc2 <__swbuf_r+0x42>
 8003bb8:	4621      	mov	r1, r4
 8003bba:	4628      	mov	r0, r5
 8003bbc:	f000 f92e 	bl	8003e1c <_fflush_r>
 8003bc0:	bb30      	cbnz	r0, 8003c10 <__swbuf_r+0x90>
 8003bc2:	68a3      	ldr	r3, [r4, #8]
 8003bc4:	3b01      	subs	r3, #1
 8003bc6:	60a3      	str	r3, [r4, #8]
 8003bc8:	6823      	ldr	r3, [r4, #0]
 8003bca:	1c5a      	adds	r2, r3, #1
 8003bcc:	6022      	str	r2, [r4, #0]
 8003bce:	701e      	strb	r6, [r3, #0]
 8003bd0:	6963      	ldr	r3, [r4, #20]
 8003bd2:	3001      	adds	r0, #1
 8003bd4:	4283      	cmp	r3, r0
 8003bd6:	d004      	beq.n	8003be2 <__swbuf_r+0x62>
 8003bd8:	89a3      	ldrh	r3, [r4, #12]
 8003bda:	07db      	lsls	r3, r3, #31
 8003bdc:	d506      	bpl.n	8003bec <__swbuf_r+0x6c>
 8003bde:	2e0a      	cmp	r6, #10
 8003be0:	d104      	bne.n	8003bec <__swbuf_r+0x6c>
 8003be2:	4621      	mov	r1, r4
 8003be4:	4628      	mov	r0, r5
 8003be6:	f000 f919 	bl	8003e1c <_fflush_r>
 8003bea:	b988      	cbnz	r0, 8003c10 <__swbuf_r+0x90>
 8003bec:	4638      	mov	r0, r7
 8003bee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003bf0:	4b0a      	ldr	r3, [pc, #40]	; (8003c1c <__swbuf_r+0x9c>)
 8003bf2:	429c      	cmp	r4, r3
 8003bf4:	d101      	bne.n	8003bfa <__swbuf_r+0x7a>
 8003bf6:	68ac      	ldr	r4, [r5, #8]
 8003bf8:	e7cf      	b.n	8003b9a <__swbuf_r+0x1a>
 8003bfa:	4b09      	ldr	r3, [pc, #36]	; (8003c20 <__swbuf_r+0xa0>)
 8003bfc:	429c      	cmp	r4, r3
 8003bfe:	bf08      	it	eq
 8003c00:	68ec      	ldreq	r4, [r5, #12]
 8003c02:	e7ca      	b.n	8003b9a <__swbuf_r+0x1a>
 8003c04:	4621      	mov	r1, r4
 8003c06:	4628      	mov	r0, r5
 8003c08:	f000 f80c 	bl	8003c24 <__swsetup_r>
 8003c0c:	2800      	cmp	r0, #0
 8003c0e:	d0cb      	beq.n	8003ba8 <__swbuf_r+0x28>
 8003c10:	f04f 37ff 	mov.w	r7, #4294967295
 8003c14:	e7ea      	b.n	8003bec <__swbuf_r+0x6c>
 8003c16:	bf00      	nop
 8003c18:	080057d8 	.word	0x080057d8
 8003c1c:	080057f8 	.word	0x080057f8
 8003c20:	080057b8 	.word	0x080057b8

08003c24 <__swsetup_r>:
 8003c24:	4b32      	ldr	r3, [pc, #200]	; (8003cf0 <__swsetup_r+0xcc>)
 8003c26:	b570      	push	{r4, r5, r6, lr}
 8003c28:	681d      	ldr	r5, [r3, #0]
 8003c2a:	4606      	mov	r6, r0
 8003c2c:	460c      	mov	r4, r1
 8003c2e:	b125      	cbz	r5, 8003c3a <__swsetup_r+0x16>
 8003c30:	69ab      	ldr	r3, [r5, #24]
 8003c32:	b913      	cbnz	r3, 8003c3a <__swsetup_r+0x16>
 8003c34:	4628      	mov	r0, r5
 8003c36:	f000 f985 	bl	8003f44 <__sinit>
 8003c3a:	4b2e      	ldr	r3, [pc, #184]	; (8003cf4 <__swsetup_r+0xd0>)
 8003c3c:	429c      	cmp	r4, r3
 8003c3e:	d10f      	bne.n	8003c60 <__swsetup_r+0x3c>
 8003c40:	686c      	ldr	r4, [r5, #4]
 8003c42:	89a3      	ldrh	r3, [r4, #12]
 8003c44:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003c48:	0719      	lsls	r1, r3, #28
 8003c4a:	d42c      	bmi.n	8003ca6 <__swsetup_r+0x82>
 8003c4c:	06dd      	lsls	r5, r3, #27
 8003c4e:	d411      	bmi.n	8003c74 <__swsetup_r+0x50>
 8003c50:	2309      	movs	r3, #9
 8003c52:	6033      	str	r3, [r6, #0]
 8003c54:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003c58:	81a3      	strh	r3, [r4, #12]
 8003c5a:	f04f 30ff 	mov.w	r0, #4294967295
 8003c5e:	e03e      	b.n	8003cde <__swsetup_r+0xba>
 8003c60:	4b25      	ldr	r3, [pc, #148]	; (8003cf8 <__swsetup_r+0xd4>)
 8003c62:	429c      	cmp	r4, r3
 8003c64:	d101      	bne.n	8003c6a <__swsetup_r+0x46>
 8003c66:	68ac      	ldr	r4, [r5, #8]
 8003c68:	e7eb      	b.n	8003c42 <__swsetup_r+0x1e>
 8003c6a:	4b24      	ldr	r3, [pc, #144]	; (8003cfc <__swsetup_r+0xd8>)
 8003c6c:	429c      	cmp	r4, r3
 8003c6e:	bf08      	it	eq
 8003c70:	68ec      	ldreq	r4, [r5, #12]
 8003c72:	e7e6      	b.n	8003c42 <__swsetup_r+0x1e>
 8003c74:	0758      	lsls	r0, r3, #29
 8003c76:	d512      	bpl.n	8003c9e <__swsetup_r+0x7a>
 8003c78:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003c7a:	b141      	cbz	r1, 8003c8e <__swsetup_r+0x6a>
 8003c7c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003c80:	4299      	cmp	r1, r3
 8003c82:	d002      	beq.n	8003c8a <__swsetup_r+0x66>
 8003c84:	4630      	mov	r0, r6
 8003c86:	f7ff fb9d 	bl	80033c4 <_free_r>
 8003c8a:	2300      	movs	r3, #0
 8003c8c:	6363      	str	r3, [r4, #52]	; 0x34
 8003c8e:	89a3      	ldrh	r3, [r4, #12]
 8003c90:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003c94:	81a3      	strh	r3, [r4, #12]
 8003c96:	2300      	movs	r3, #0
 8003c98:	6063      	str	r3, [r4, #4]
 8003c9a:	6923      	ldr	r3, [r4, #16]
 8003c9c:	6023      	str	r3, [r4, #0]
 8003c9e:	89a3      	ldrh	r3, [r4, #12]
 8003ca0:	f043 0308 	orr.w	r3, r3, #8
 8003ca4:	81a3      	strh	r3, [r4, #12]
 8003ca6:	6923      	ldr	r3, [r4, #16]
 8003ca8:	b94b      	cbnz	r3, 8003cbe <__swsetup_r+0x9a>
 8003caa:	89a3      	ldrh	r3, [r4, #12]
 8003cac:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003cb0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003cb4:	d003      	beq.n	8003cbe <__swsetup_r+0x9a>
 8003cb6:	4621      	mov	r1, r4
 8003cb8:	4630      	mov	r0, r6
 8003cba:	f000 fa09 	bl	80040d0 <__smakebuf_r>
 8003cbe:	89a0      	ldrh	r0, [r4, #12]
 8003cc0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003cc4:	f010 0301 	ands.w	r3, r0, #1
 8003cc8:	d00a      	beq.n	8003ce0 <__swsetup_r+0xbc>
 8003cca:	2300      	movs	r3, #0
 8003ccc:	60a3      	str	r3, [r4, #8]
 8003cce:	6963      	ldr	r3, [r4, #20]
 8003cd0:	425b      	negs	r3, r3
 8003cd2:	61a3      	str	r3, [r4, #24]
 8003cd4:	6923      	ldr	r3, [r4, #16]
 8003cd6:	b943      	cbnz	r3, 8003cea <__swsetup_r+0xc6>
 8003cd8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8003cdc:	d1ba      	bne.n	8003c54 <__swsetup_r+0x30>
 8003cde:	bd70      	pop	{r4, r5, r6, pc}
 8003ce0:	0781      	lsls	r1, r0, #30
 8003ce2:	bf58      	it	pl
 8003ce4:	6963      	ldrpl	r3, [r4, #20]
 8003ce6:	60a3      	str	r3, [r4, #8]
 8003ce8:	e7f4      	b.n	8003cd4 <__swsetup_r+0xb0>
 8003cea:	2000      	movs	r0, #0
 8003cec:	e7f7      	b.n	8003cde <__swsetup_r+0xba>
 8003cee:	bf00      	nop
 8003cf0:	20000028 	.word	0x20000028
 8003cf4:	080057d8 	.word	0x080057d8
 8003cf8:	080057f8 	.word	0x080057f8
 8003cfc:	080057b8 	.word	0x080057b8

08003d00 <abort>:
 8003d00:	b508      	push	{r3, lr}
 8003d02:	2006      	movs	r0, #6
 8003d04:	f000 fa58 	bl	80041b8 <raise>
 8003d08:	2001      	movs	r0, #1
 8003d0a:	f7fe fb3b 	bl	8002384 <_exit>
	...

08003d10 <__sflush_r>:
 8003d10:	898a      	ldrh	r2, [r1, #12]
 8003d12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d16:	4605      	mov	r5, r0
 8003d18:	0710      	lsls	r0, r2, #28
 8003d1a:	460c      	mov	r4, r1
 8003d1c:	d458      	bmi.n	8003dd0 <__sflush_r+0xc0>
 8003d1e:	684b      	ldr	r3, [r1, #4]
 8003d20:	2b00      	cmp	r3, #0
 8003d22:	dc05      	bgt.n	8003d30 <__sflush_r+0x20>
 8003d24:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	dc02      	bgt.n	8003d30 <__sflush_r+0x20>
 8003d2a:	2000      	movs	r0, #0
 8003d2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d30:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003d32:	2e00      	cmp	r6, #0
 8003d34:	d0f9      	beq.n	8003d2a <__sflush_r+0x1a>
 8003d36:	2300      	movs	r3, #0
 8003d38:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003d3c:	682f      	ldr	r7, [r5, #0]
 8003d3e:	602b      	str	r3, [r5, #0]
 8003d40:	d032      	beq.n	8003da8 <__sflush_r+0x98>
 8003d42:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003d44:	89a3      	ldrh	r3, [r4, #12]
 8003d46:	075a      	lsls	r2, r3, #29
 8003d48:	d505      	bpl.n	8003d56 <__sflush_r+0x46>
 8003d4a:	6863      	ldr	r3, [r4, #4]
 8003d4c:	1ac0      	subs	r0, r0, r3
 8003d4e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003d50:	b10b      	cbz	r3, 8003d56 <__sflush_r+0x46>
 8003d52:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003d54:	1ac0      	subs	r0, r0, r3
 8003d56:	2300      	movs	r3, #0
 8003d58:	4602      	mov	r2, r0
 8003d5a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003d5c:	6a21      	ldr	r1, [r4, #32]
 8003d5e:	4628      	mov	r0, r5
 8003d60:	47b0      	blx	r6
 8003d62:	1c43      	adds	r3, r0, #1
 8003d64:	89a3      	ldrh	r3, [r4, #12]
 8003d66:	d106      	bne.n	8003d76 <__sflush_r+0x66>
 8003d68:	6829      	ldr	r1, [r5, #0]
 8003d6a:	291d      	cmp	r1, #29
 8003d6c:	d82c      	bhi.n	8003dc8 <__sflush_r+0xb8>
 8003d6e:	4a2a      	ldr	r2, [pc, #168]	; (8003e18 <__sflush_r+0x108>)
 8003d70:	40ca      	lsrs	r2, r1
 8003d72:	07d6      	lsls	r6, r2, #31
 8003d74:	d528      	bpl.n	8003dc8 <__sflush_r+0xb8>
 8003d76:	2200      	movs	r2, #0
 8003d78:	6062      	str	r2, [r4, #4]
 8003d7a:	04d9      	lsls	r1, r3, #19
 8003d7c:	6922      	ldr	r2, [r4, #16]
 8003d7e:	6022      	str	r2, [r4, #0]
 8003d80:	d504      	bpl.n	8003d8c <__sflush_r+0x7c>
 8003d82:	1c42      	adds	r2, r0, #1
 8003d84:	d101      	bne.n	8003d8a <__sflush_r+0x7a>
 8003d86:	682b      	ldr	r3, [r5, #0]
 8003d88:	b903      	cbnz	r3, 8003d8c <__sflush_r+0x7c>
 8003d8a:	6560      	str	r0, [r4, #84]	; 0x54
 8003d8c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003d8e:	602f      	str	r7, [r5, #0]
 8003d90:	2900      	cmp	r1, #0
 8003d92:	d0ca      	beq.n	8003d2a <__sflush_r+0x1a>
 8003d94:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003d98:	4299      	cmp	r1, r3
 8003d9a:	d002      	beq.n	8003da2 <__sflush_r+0x92>
 8003d9c:	4628      	mov	r0, r5
 8003d9e:	f7ff fb11 	bl	80033c4 <_free_r>
 8003da2:	2000      	movs	r0, #0
 8003da4:	6360      	str	r0, [r4, #52]	; 0x34
 8003da6:	e7c1      	b.n	8003d2c <__sflush_r+0x1c>
 8003da8:	6a21      	ldr	r1, [r4, #32]
 8003daa:	2301      	movs	r3, #1
 8003dac:	4628      	mov	r0, r5
 8003dae:	47b0      	blx	r6
 8003db0:	1c41      	adds	r1, r0, #1
 8003db2:	d1c7      	bne.n	8003d44 <__sflush_r+0x34>
 8003db4:	682b      	ldr	r3, [r5, #0]
 8003db6:	2b00      	cmp	r3, #0
 8003db8:	d0c4      	beq.n	8003d44 <__sflush_r+0x34>
 8003dba:	2b1d      	cmp	r3, #29
 8003dbc:	d001      	beq.n	8003dc2 <__sflush_r+0xb2>
 8003dbe:	2b16      	cmp	r3, #22
 8003dc0:	d101      	bne.n	8003dc6 <__sflush_r+0xb6>
 8003dc2:	602f      	str	r7, [r5, #0]
 8003dc4:	e7b1      	b.n	8003d2a <__sflush_r+0x1a>
 8003dc6:	89a3      	ldrh	r3, [r4, #12]
 8003dc8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003dcc:	81a3      	strh	r3, [r4, #12]
 8003dce:	e7ad      	b.n	8003d2c <__sflush_r+0x1c>
 8003dd0:	690f      	ldr	r7, [r1, #16]
 8003dd2:	2f00      	cmp	r7, #0
 8003dd4:	d0a9      	beq.n	8003d2a <__sflush_r+0x1a>
 8003dd6:	0793      	lsls	r3, r2, #30
 8003dd8:	680e      	ldr	r6, [r1, #0]
 8003dda:	bf08      	it	eq
 8003ddc:	694b      	ldreq	r3, [r1, #20]
 8003dde:	600f      	str	r7, [r1, #0]
 8003de0:	bf18      	it	ne
 8003de2:	2300      	movne	r3, #0
 8003de4:	eba6 0807 	sub.w	r8, r6, r7
 8003de8:	608b      	str	r3, [r1, #8]
 8003dea:	f1b8 0f00 	cmp.w	r8, #0
 8003dee:	dd9c      	ble.n	8003d2a <__sflush_r+0x1a>
 8003df0:	6a21      	ldr	r1, [r4, #32]
 8003df2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003df4:	4643      	mov	r3, r8
 8003df6:	463a      	mov	r2, r7
 8003df8:	4628      	mov	r0, r5
 8003dfa:	47b0      	blx	r6
 8003dfc:	2800      	cmp	r0, #0
 8003dfe:	dc06      	bgt.n	8003e0e <__sflush_r+0xfe>
 8003e00:	89a3      	ldrh	r3, [r4, #12]
 8003e02:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003e06:	81a3      	strh	r3, [r4, #12]
 8003e08:	f04f 30ff 	mov.w	r0, #4294967295
 8003e0c:	e78e      	b.n	8003d2c <__sflush_r+0x1c>
 8003e0e:	4407      	add	r7, r0
 8003e10:	eba8 0800 	sub.w	r8, r8, r0
 8003e14:	e7e9      	b.n	8003dea <__sflush_r+0xda>
 8003e16:	bf00      	nop
 8003e18:	20400001 	.word	0x20400001

08003e1c <_fflush_r>:
 8003e1c:	b538      	push	{r3, r4, r5, lr}
 8003e1e:	690b      	ldr	r3, [r1, #16]
 8003e20:	4605      	mov	r5, r0
 8003e22:	460c      	mov	r4, r1
 8003e24:	b913      	cbnz	r3, 8003e2c <_fflush_r+0x10>
 8003e26:	2500      	movs	r5, #0
 8003e28:	4628      	mov	r0, r5
 8003e2a:	bd38      	pop	{r3, r4, r5, pc}
 8003e2c:	b118      	cbz	r0, 8003e36 <_fflush_r+0x1a>
 8003e2e:	6983      	ldr	r3, [r0, #24]
 8003e30:	b90b      	cbnz	r3, 8003e36 <_fflush_r+0x1a>
 8003e32:	f000 f887 	bl	8003f44 <__sinit>
 8003e36:	4b14      	ldr	r3, [pc, #80]	; (8003e88 <_fflush_r+0x6c>)
 8003e38:	429c      	cmp	r4, r3
 8003e3a:	d11b      	bne.n	8003e74 <_fflush_r+0x58>
 8003e3c:	686c      	ldr	r4, [r5, #4]
 8003e3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e42:	2b00      	cmp	r3, #0
 8003e44:	d0ef      	beq.n	8003e26 <_fflush_r+0xa>
 8003e46:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003e48:	07d0      	lsls	r0, r2, #31
 8003e4a:	d404      	bmi.n	8003e56 <_fflush_r+0x3a>
 8003e4c:	0599      	lsls	r1, r3, #22
 8003e4e:	d402      	bmi.n	8003e56 <_fflush_r+0x3a>
 8003e50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003e52:	f000 f915 	bl	8004080 <__retarget_lock_acquire_recursive>
 8003e56:	4628      	mov	r0, r5
 8003e58:	4621      	mov	r1, r4
 8003e5a:	f7ff ff59 	bl	8003d10 <__sflush_r>
 8003e5e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003e60:	07da      	lsls	r2, r3, #31
 8003e62:	4605      	mov	r5, r0
 8003e64:	d4e0      	bmi.n	8003e28 <_fflush_r+0xc>
 8003e66:	89a3      	ldrh	r3, [r4, #12]
 8003e68:	059b      	lsls	r3, r3, #22
 8003e6a:	d4dd      	bmi.n	8003e28 <_fflush_r+0xc>
 8003e6c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003e6e:	f000 f908 	bl	8004082 <__retarget_lock_release_recursive>
 8003e72:	e7d9      	b.n	8003e28 <_fflush_r+0xc>
 8003e74:	4b05      	ldr	r3, [pc, #20]	; (8003e8c <_fflush_r+0x70>)
 8003e76:	429c      	cmp	r4, r3
 8003e78:	d101      	bne.n	8003e7e <_fflush_r+0x62>
 8003e7a:	68ac      	ldr	r4, [r5, #8]
 8003e7c:	e7df      	b.n	8003e3e <_fflush_r+0x22>
 8003e7e:	4b04      	ldr	r3, [pc, #16]	; (8003e90 <_fflush_r+0x74>)
 8003e80:	429c      	cmp	r4, r3
 8003e82:	bf08      	it	eq
 8003e84:	68ec      	ldreq	r4, [r5, #12]
 8003e86:	e7da      	b.n	8003e3e <_fflush_r+0x22>
 8003e88:	080057d8 	.word	0x080057d8
 8003e8c:	080057f8 	.word	0x080057f8
 8003e90:	080057b8 	.word	0x080057b8

08003e94 <std>:
 8003e94:	2300      	movs	r3, #0
 8003e96:	b510      	push	{r4, lr}
 8003e98:	4604      	mov	r4, r0
 8003e9a:	e9c0 3300 	strd	r3, r3, [r0]
 8003e9e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003ea2:	6083      	str	r3, [r0, #8]
 8003ea4:	8181      	strh	r1, [r0, #12]
 8003ea6:	6643      	str	r3, [r0, #100]	; 0x64
 8003ea8:	81c2      	strh	r2, [r0, #14]
 8003eaa:	6183      	str	r3, [r0, #24]
 8003eac:	4619      	mov	r1, r3
 8003eae:	2208      	movs	r2, #8
 8003eb0:	305c      	adds	r0, #92	; 0x5c
 8003eb2:	f7ff fa09 	bl	80032c8 <memset>
 8003eb6:	4b05      	ldr	r3, [pc, #20]	; (8003ecc <std+0x38>)
 8003eb8:	6263      	str	r3, [r4, #36]	; 0x24
 8003eba:	4b05      	ldr	r3, [pc, #20]	; (8003ed0 <std+0x3c>)
 8003ebc:	62a3      	str	r3, [r4, #40]	; 0x28
 8003ebe:	4b05      	ldr	r3, [pc, #20]	; (8003ed4 <std+0x40>)
 8003ec0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003ec2:	4b05      	ldr	r3, [pc, #20]	; (8003ed8 <std+0x44>)
 8003ec4:	6224      	str	r4, [r4, #32]
 8003ec6:	6323      	str	r3, [r4, #48]	; 0x30
 8003ec8:	bd10      	pop	{r4, pc}
 8003eca:	bf00      	nop
 8003ecc:	080041f1 	.word	0x080041f1
 8003ed0:	08004213 	.word	0x08004213
 8003ed4:	0800424b 	.word	0x0800424b
 8003ed8:	0800426f 	.word	0x0800426f

08003edc <_cleanup_r>:
 8003edc:	4901      	ldr	r1, [pc, #4]	; (8003ee4 <_cleanup_r+0x8>)
 8003ede:	f000 b8af 	b.w	8004040 <_fwalk_reent>
 8003ee2:	bf00      	nop
 8003ee4:	08003e1d 	.word	0x08003e1d

08003ee8 <__sfmoreglue>:
 8003ee8:	b570      	push	{r4, r5, r6, lr}
 8003eea:	2268      	movs	r2, #104	; 0x68
 8003eec:	1e4d      	subs	r5, r1, #1
 8003eee:	4355      	muls	r5, r2
 8003ef0:	460e      	mov	r6, r1
 8003ef2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003ef6:	f7ff fad1 	bl	800349c <_malloc_r>
 8003efa:	4604      	mov	r4, r0
 8003efc:	b140      	cbz	r0, 8003f10 <__sfmoreglue+0x28>
 8003efe:	2100      	movs	r1, #0
 8003f00:	e9c0 1600 	strd	r1, r6, [r0]
 8003f04:	300c      	adds	r0, #12
 8003f06:	60a0      	str	r0, [r4, #8]
 8003f08:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003f0c:	f7ff f9dc 	bl	80032c8 <memset>
 8003f10:	4620      	mov	r0, r4
 8003f12:	bd70      	pop	{r4, r5, r6, pc}

08003f14 <__sfp_lock_acquire>:
 8003f14:	4801      	ldr	r0, [pc, #4]	; (8003f1c <__sfp_lock_acquire+0x8>)
 8003f16:	f000 b8b3 	b.w	8004080 <__retarget_lock_acquire_recursive>
 8003f1a:	bf00      	nop
 8003f1c:	2000012d 	.word	0x2000012d

08003f20 <__sfp_lock_release>:
 8003f20:	4801      	ldr	r0, [pc, #4]	; (8003f28 <__sfp_lock_release+0x8>)
 8003f22:	f000 b8ae 	b.w	8004082 <__retarget_lock_release_recursive>
 8003f26:	bf00      	nop
 8003f28:	2000012d 	.word	0x2000012d

08003f2c <__sinit_lock_acquire>:
 8003f2c:	4801      	ldr	r0, [pc, #4]	; (8003f34 <__sinit_lock_acquire+0x8>)
 8003f2e:	f000 b8a7 	b.w	8004080 <__retarget_lock_acquire_recursive>
 8003f32:	bf00      	nop
 8003f34:	2000012e 	.word	0x2000012e

08003f38 <__sinit_lock_release>:
 8003f38:	4801      	ldr	r0, [pc, #4]	; (8003f40 <__sinit_lock_release+0x8>)
 8003f3a:	f000 b8a2 	b.w	8004082 <__retarget_lock_release_recursive>
 8003f3e:	bf00      	nop
 8003f40:	2000012e 	.word	0x2000012e

08003f44 <__sinit>:
 8003f44:	b510      	push	{r4, lr}
 8003f46:	4604      	mov	r4, r0
 8003f48:	f7ff fff0 	bl	8003f2c <__sinit_lock_acquire>
 8003f4c:	69a3      	ldr	r3, [r4, #24]
 8003f4e:	b11b      	cbz	r3, 8003f58 <__sinit+0x14>
 8003f50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f54:	f7ff bff0 	b.w	8003f38 <__sinit_lock_release>
 8003f58:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003f5c:	6523      	str	r3, [r4, #80]	; 0x50
 8003f5e:	4b13      	ldr	r3, [pc, #76]	; (8003fac <__sinit+0x68>)
 8003f60:	4a13      	ldr	r2, [pc, #76]	; (8003fb0 <__sinit+0x6c>)
 8003f62:	681b      	ldr	r3, [r3, #0]
 8003f64:	62a2      	str	r2, [r4, #40]	; 0x28
 8003f66:	42a3      	cmp	r3, r4
 8003f68:	bf04      	itt	eq
 8003f6a:	2301      	moveq	r3, #1
 8003f6c:	61a3      	streq	r3, [r4, #24]
 8003f6e:	4620      	mov	r0, r4
 8003f70:	f000 f820 	bl	8003fb4 <__sfp>
 8003f74:	6060      	str	r0, [r4, #4]
 8003f76:	4620      	mov	r0, r4
 8003f78:	f000 f81c 	bl	8003fb4 <__sfp>
 8003f7c:	60a0      	str	r0, [r4, #8]
 8003f7e:	4620      	mov	r0, r4
 8003f80:	f000 f818 	bl	8003fb4 <__sfp>
 8003f84:	2200      	movs	r2, #0
 8003f86:	60e0      	str	r0, [r4, #12]
 8003f88:	2104      	movs	r1, #4
 8003f8a:	6860      	ldr	r0, [r4, #4]
 8003f8c:	f7ff ff82 	bl	8003e94 <std>
 8003f90:	68a0      	ldr	r0, [r4, #8]
 8003f92:	2201      	movs	r2, #1
 8003f94:	2109      	movs	r1, #9
 8003f96:	f7ff ff7d 	bl	8003e94 <std>
 8003f9a:	68e0      	ldr	r0, [r4, #12]
 8003f9c:	2202      	movs	r2, #2
 8003f9e:	2112      	movs	r1, #18
 8003fa0:	f7ff ff78 	bl	8003e94 <std>
 8003fa4:	2301      	movs	r3, #1
 8003fa6:	61a3      	str	r3, [r4, #24]
 8003fa8:	e7d2      	b.n	8003f50 <__sinit+0xc>
 8003faa:	bf00      	nop
 8003fac:	080056d0 	.word	0x080056d0
 8003fb0:	08003edd 	.word	0x08003edd

08003fb4 <__sfp>:
 8003fb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003fb6:	4607      	mov	r7, r0
 8003fb8:	f7ff ffac 	bl	8003f14 <__sfp_lock_acquire>
 8003fbc:	4b1e      	ldr	r3, [pc, #120]	; (8004038 <__sfp+0x84>)
 8003fbe:	681e      	ldr	r6, [r3, #0]
 8003fc0:	69b3      	ldr	r3, [r6, #24]
 8003fc2:	b913      	cbnz	r3, 8003fca <__sfp+0x16>
 8003fc4:	4630      	mov	r0, r6
 8003fc6:	f7ff ffbd 	bl	8003f44 <__sinit>
 8003fca:	3648      	adds	r6, #72	; 0x48
 8003fcc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003fd0:	3b01      	subs	r3, #1
 8003fd2:	d503      	bpl.n	8003fdc <__sfp+0x28>
 8003fd4:	6833      	ldr	r3, [r6, #0]
 8003fd6:	b30b      	cbz	r3, 800401c <__sfp+0x68>
 8003fd8:	6836      	ldr	r6, [r6, #0]
 8003fda:	e7f7      	b.n	8003fcc <__sfp+0x18>
 8003fdc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003fe0:	b9d5      	cbnz	r5, 8004018 <__sfp+0x64>
 8003fe2:	4b16      	ldr	r3, [pc, #88]	; (800403c <__sfp+0x88>)
 8003fe4:	60e3      	str	r3, [r4, #12]
 8003fe6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003fea:	6665      	str	r5, [r4, #100]	; 0x64
 8003fec:	f000 f847 	bl	800407e <__retarget_lock_init_recursive>
 8003ff0:	f7ff ff96 	bl	8003f20 <__sfp_lock_release>
 8003ff4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003ff8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8003ffc:	6025      	str	r5, [r4, #0]
 8003ffe:	61a5      	str	r5, [r4, #24]
 8004000:	2208      	movs	r2, #8
 8004002:	4629      	mov	r1, r5
 8004004:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004008:	f7ff f95e 	bl	80032c8 <memset>
 800400c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004010:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004014:	4620      	mov	r0, r4
 8004016:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004018:	3468      	adds	r4, #104	; 0x68
 800401a:	e7d9      	b.n	8003fd0 <__sfp+0x1c>
 800401c:	2104      	movs	r1, #4
 800401e:	4638      	mov	r0, r7
 8004020:	f7ff ff62 	bl	8003ee8 <__sfmoreglue>
 8004024:	4604      	mov	r4, r0
 8004026:	6030      	str	r0, [r6, #0]
 8004028:	2800      	cmp	r0, #0
 800402a:	d1d5      	bne.n	8003fd8 <__sfp+0x24>
 800402c:	f7ff ff78 	bl	8003f20 <__sfp_lock_release>
 8004030:	230c      	movs	r3, #12
 8004032:	603b      	str	r3, [r7, #0]
 8004034:	e7ee      	b.n	8004014 <__sfp+0x60>
 8004036:	bf00      	nop
 8004038:	080056d0 	.word	0x080056d0
 800403c:	ffff0001 	.word	0xffff0001

08004040 <_fwalk_reent>:
 8004040:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004044:	4606      	mov	r6, r0
 8004046:	4688      	mov	r8, r1
 8004048:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800404c:	2700      	movs	r7, #0
 800404e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004052:	f1b9 0901 	subs.w	r9, r9, #1
 8004056:	d505      	bpl.n	8004064 <_fwalk_reent+0x24>
 8004058:	6824      	ldr	r4, [r4, #0]
 800405a:	2c00      	cmp	r4, #0
 800405c:	d1f7      	bne.n	800404e <_fwalk_reent+0xe>
 800405e:	4638      	mov	r0, r7
 8004060:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004064:	89ab      	ldrh	r3, [r5, #12]
 8004066:	2b01      	cmp	r3, #1
 8004068:	d907      	bls.n	800407a <_fwalk_reent+0x3a>
 800406a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800406e:	3301      	adds	r3, #1
 8004070:	d003      	beq.n	800407a <_fwalk_reent+0x3a>
 8004072:	4629      	mov	r1, r5
 8004074:	4630      	mov	r0, r6
 8004076:	47c0      	blx	r8
 8004078:	4307      	orrs	r7, r0
 800407a:	3568      	adds	r5, #104	; 0x68
 800407c:	e7e9      	b.n	8004052 <_fwalk_reent+0x12>

0800407e <__retarget_lock_init_recursive>:
 800407e:	4770      	bx	lr

08004080 <__retarget_lock_acquire_recursive>:
 8004080:	4770      	bx	lr

08004082 <__retarget_lock_release_recursive>:
 8004082:	4770      	bx	lr

08004084 <__swhatbuf_r>:
 8004084:	b570      	push	{r4, r5, r6, lr}
 8004086:	460e      	mov	r6, r1
 8004088:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800408c:	2900      	cmp	r1, #0
 800408e:	b096      	sub	sp, #88	; 0x58
 8004090:	4614      	mov	r4, r2
 8004092:	461d      	mov	r5, r3
 8004094:	da08      	bge.n	80040a8 <__swhatbuf_r+0x24>
 8004096:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800409a:	2200      	movs	r2, #0
 800409c:	602a      	str	r2, [r5, #0]
 800409e:	061a      	lsls	r2, r3, #24
 80040a0:	d410      	bmi.n	80040c4 <__swhatbuf_r+0x40>
 80040a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80040a6:	e00e      	b.n	80040c6 <__swhatbuf_r+0x42>
 80040a8:	466a      	mov	r2, sp
 80040aa:	f000 f907 	bl	80042bc <_fstat_r>
 80040ae:	2800      	cmp	r0, #0
 80040b0:	dbf1      	blt.n	8004096 <__swhatbuf_r+0x12>
 80040b2:	9a01      	ldr	r2, [sp, #4]
 80040b4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80040b8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80040bc:	425a      	negs	r2, r3
 80040be:	415a      	adcs	r2, r3
 80040c0:	602a      	str	r2, [r5, #0]
 80040c2:	e7ee      	b.n	80040a2 <__swhatbuf_r+0x1e>
 80040c4:	2340      	movs	r3, #64	; 0x40
 80040c6:	2000      	movs	r0, #0
 80040c8:	6023      	str	r3, [r4, #0]
 80040ca:	b016      	add	sp, #88	; 0x58
 80040cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080040d0 <__smakebuf_r>:
 80040d0:	898b      	ldrh	r3, [r1, #12]
 80040d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80040d4:	079d      	lsls	r5, r3, #30
 80040d6:	4606      	mov	r6, r0
 80040d8:	460c      	mov	r4, r1
 80040da:	d507      	bpl.n	80040ec <__smakebuf_r+0x1c>
 80040dc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80040e0:	6023      	str	r3, [r4, #0]
 80040e2:	6123      	str	r3, [r4, #16]
 80040e4:	2301      	movs	r3, #1
 80040e6:	6163      	str	r3, [r4, #20]
 80040e8:	b002      	add	sp, #8
 80040ea:	bd70      	pop	{r4, r5, r6, pc}
 80040ec:	ab01      	add	r3, sp, #4
 80040ee:	466a      	mov	r2, sp
 80040f0:	f7ff ffc8 	bl	8004084 <__swhatbuf_r>
 80040f4:	9900      	ldr	r1, [sp, #0]
 80040f6:	4605      	mov	r5, r0
 80040f8:	4630      	mov	r0, r6
 80040fa:	f7ff f9cf 	bl	800349c <_malloc_r>
 80040fe:	b948      	cbnz	r0, 8004114 <__smakebuf_r+0x44>
 8004100:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004104:	059a      	lsls	r2, r3, #22
 8004106:	d4ef      	bmi.n	80040e8 <__smakebuf_r+0x18>
 8004108:	f023 0303 	bic.w	r3, r3, #3
 800410c:	f043 0302 	orr.w	r3, r3, #2
 8004110:	81a3      	strh	r3, [r4, #12]
 8004112:	e7e3      	b.n	80040dc <__smakebuf_r+0xc>
 8004114:	4b0d      	ldr	r3, [pc, #52]	; (800414c <__smakebuf_r+0x7c>)
 8004116:	62b3      	str	r3, [r6, #40]	; 0x28
 8004118:	89a3      	ldrh	r3, [r4, #12]
 800411a:	6020      	str	r0, [r4, #0]
 800411c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004120:	81a3      	strh	r3, [r4, #12]
 8004122:	9b00      	ldr	r3, [sp, #0]
 8004124:	6163      	str	r3, [r4, #20]
 8004126:	9b01      	ldr	r3, [sp, #4]
 8004128:	6120      	str	r0, [r4, #16]
 800412a:	b15b      	cbz	r3, 8004144 <__smakebuf_r+0x74>
 800412c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004130:	4630      	mov	r0, r6
 8004132:	f000 f8d5 	bl	80042e0 <_isatty_r>
 8004136:	b128      	cbz	r0, 8004144 <__smakebuf_r+0x74>
 8004138:	89a3      	ldrh	r3, [r4, #12]
 800413a:	f023 0303 	bic.w	r3, r3, #3
 800413e:	f043 0301 	orr.w	r3, r3, #1
 8004142:	81a3      	strh	r3, [r4, #12]
 8004144:	89a0      	ldrh	r0, [r4, #12]
 8004146:	4305      	orrs	r5, r0
 8004148:	81a5      	strh	r5, [r4, #12]
 800414a:	e7cd      	b.n	80040e8 <__smakebuf_r+0x18>
 800414c:	08003edd 	.word	0x08003edd

08004150 <__malloc_lock>:
 8004150:	4801      	ldr	r0, [pc, #4]	; (8004158 <__malloc_lock+0x8>)
 8004152:	f7ff bf95 	b.w	8004080 <__retarget_lock_acquire_recursive>
 8004156:	bf00      	nop
 8004158:	2000012c 	.word	0x2000012c

0800415c <__malloc_unlock>:
 800415c:	4801      	ldr	r0, [pc, #4]	; (8004164 <__malloc_unlock+0x8>)
 800415e:	f7ff bf90 	b.w	8004082 <__retarget_lock_release_recursive>
 8004162:	bf00      	nop
 8004164:	2000012c 	.word	0x2000012c

08004168 <_raise_r>:
 8004168:	291f      	cmp	r1, #31
 800416a:	b538      	push	{r3, r4, r5, lr}
 800416c:	4604      	mov	r4, r0
 800416e:	460d      	mov	r5, r1
 8004170:	d904      	bls.n	800417c <_raise_r+0x14>
 8004172:	2316      	movs	r3, #22
 8004174:	6003      	str	r3, [r0, #0]
 8004176:	f04f 30ff 	mov.w	r0, #4294967295
 800417a:	bd38      	pop	{r3, r4, r5, pc}
 800417c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800417e:	b112      	cbz	r2, 8004186 <_raise_r+0x1e>
 8004180:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004184:	b94b      	cbnz	r3, 800419a <_raise_r+0x32>
 8004186:	4620      	mov	r0, r4
 8004188:	f000 f830 	bl	80041ec <_getpid_r>
 800418c:	462a      	mov	r2, r5
 800418e:	4601      	mov	r1, r0
 8004190:	4620      	mov	r0, r4
 8004192:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004196:	f000 b817 	b.w	80041c8 <_kill_r>
 800419a:	2b01      	cmp	r3, #1
 800419c:	d00a      	beq.n	80041b4 <_raise_r+0x4c>
 800419e:	1c59      	adds	r1, r3, #1
 80041a0:	d103      	bne.n	80041aa <_raise_r+0x42>
 80041a2:	2316      	movs	r3, #22
 80041a4:	6003      	str	r3, [r0, #0]
 80041a6:	2001      	movs	r0, #1
 80041a8:	e7e7      	b.n	800417a <_raise_r+0x12>
 80041aa:	2400      	movs	r4, #0
 80041ac:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80041b0:	4628      	mov	r0, r5
 80041b2:	4798      	blx	r3
 80041b4:	2000      	movs	r0, #0
 80041b6:	e7e0      	b.n	800417a <_raise_r+0x12>

080041b8 <raise>:
 80041b8:	4b02      	ldr	r3, [pc, #8]	; (80041c4 <raise+0xc>)
 80041ba:	4601      	mov	r1, r0
 80041bc:	6818      	ldr	r0, [r3, #0]
 80041be:	f7ff bfd3 	b.w	8004168 <_raise_r>
 80041c2:	bf00      	nop
 80041c4:	20000028 	.word	0x20000028

080041c8 <_kill_r>:
 80041c8:	b538      	push	{r3, r4, r5, lr}
 80041ca:	4d07      	ldr	r5, [pc, #28]	; (80041e8 <_kill_r+0x20>)
 80041cc:	2300      	movs	r3, #0
 80041ce:	4604      	mov	r4, r0
 80041d0:	4608      	mov	r0, r1
 80041d2:	4611      	mov	r1, r2
 80041d4:	602b      	str	r3, [r5, #0]
 80041d6:	f7fe f8c5 	bl	8002364 <_kill>
 80041da:	1c43      	adds	r3, r0, #1
 80041dc:	d102      	bne.n	80041e4 <_kill_r+0x1c>
 80041de:	682b      	ldr	r3, [r5, #0]
 80041e0:	b103      	cbz	r3, 80041e4 <_kill_r+0x1c>
 80041e2:	6023      	str	r3, [r4, #0]
 80041e4:	bd38      	pop	{r3, r4, r5, pc}
 80041e6:	bf00      	nop
 80041e8:	20000130 	.word	0x20000130

080041ec <_getpid_r>:
 80041ec:	f7fe b8b2 	b.w	8002354 <_getpid>

080041f0 <__sread>:
 80041f0:	b510      	push	{r4, lr}
 80041f2:	460c      	mov	r4, r1
 80041f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80041f8:	f000 f894 	bl	8004324 <_read_r>
 80041fc:	2800      	cmp	r0, #0
 80041fe:	bfab      	itete	ge
 8004200:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004202:	89a3      	ldrhlt	r3, [r4, #12]
 8004204:	181b      	addge	r3, r3, r0
 8004206:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800420a:	bfac      	ite	ge
 800420c:	6563      	strge	r3, [r4, #84]	; 0x54
 800420e:	81a3      	strhlt	r3, [r4, #12]
 8004210:	bd10      	pop	{r4, pc}

08004212 <__swrite>:
 8004212:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004216:	461f      	mov	r7, r3
 8004218:	898b      	ldrh	r3, [r1, #12]
 800421a:	05db      	lsls	r3, r3, #23
 800421c:	4605      	mov	r5, r0
 800421e:	460c      	mov	r4, r1
 8004220:	4616      	mov	r6, r2
 8004222:	d505      	bpl.n	8004230 <__swrite+0x1e>
 8004224:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004228:	2302      	movs	r3, #2
 800422a:	2200      	movs	r2, #0
 800422c:	f000 f868 	bl	8004300 <_lseek_r>
 8004230:	89a3      	ldrh	r3, [r4, #12]
 8004232:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004236:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800423a:	81a3      	strh	r3, [r4, #12]
 800423c:	4632      	mov	r2, r6
 800423e:	463b      	mov	r3, r7
 8004240:	4628      	mov	r0, r5
 8004242:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004246:	f000 b817 	b.w	8004278 <_write_r>

0800424a <__sseek>:
 800424a:	b510      	push	{r4, lr}
 800424c:	460c      	mov	r4, r1
 800424e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004252:	f000 f855 	bl	8004300 <_lseek_r>
 8004256:	1c43      	adds	r3, r0, #1
 8004258:	89a3      	ldrh	r3, [r4, #12]
 800425a:	bf15      	itete	ne
 800425c:	6560      	strne	r0, [r4, #84]	; 0x54
 800425e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004262:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004266:	81a3      	strheq	r3, [r4, #12]
 8004268:	bf18      	it	ne
 800426a:	81a3      	strhne	r3, [r4, #12]
 800426c:	bd10      	pop	{r4, pc}

0800426e <__sclose>:
 800426e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004272:	f000 b813 	b.w	800429c <_close_r>
	...

08004278 <_write_r>:
 8004278:	b538      	push	{r3, r4, r5, lr}
 800427a:	4d07      	ldr	r5, [pc, #28]	; (8004298 <_write_r+0x20>)
 800427c:	4604      	mov	r4, r0
 800427e:	4608      	mov	r0, r1
 8004280:	4611      	mov	r1, r2
 8004282:	2200      	movs	r2, #0
 8004284:	602a      	str	r2, [r5, #0]
 8004286:	461a      	mov	r2, r3
 8004288:	f7fe f8a3 	bl	80023d2 <_write>
 800428c:	1c43      	adds	r3, r0, #1
 800428e:	d102      	bne.n	8004296 <_write_r+0x1e>
 8004290:	682b      	ldr	r3, [r5, #0]
 8004292:	b103      	cbz	r3, 8004296 <_write_r+0x1e>
 8004294:	6023      	str	r3, [r4, #0]
 8004296:	bd38      	pop	{r3, r4, r5, pc}
 8004298:	20000130 	.word	0x20000130

0800429c <_close_r>:
 800429c:	b538      	push	{r3, r4, r5, lr}
 800429e:	4d06      	ldr	r5, [pc, #24]	; (80042b8 <_close_r+0x1c>)
 80042a0:	2300      	movs	r3, #0
 80042a2:	4604      	mov	r4, r0
 80042a4:	4608      	mov	r0, r1
 80042a6:	602b      	str	r3, [r5, #0]
 80042a8:	f7fe f8af 	bl	800240a <_close>
 80042ac:	1c43      	adds	r3, r0, #1
 80042ae:	d102      	bne.n	80042b6 <_close_r+0x1a>
 80042b0:	682b      	ldr	r3, [r5, #0]
 80042b2:	b103      	cbz	r3, 80042b6 <_close_r+0x1a>
 80042b4:	6023      	str	r3, [r4, #0]
 80042b6:	bd38      	pop	{r3, r4, r5, pc}
 80042b8:	20000130 	.word	0x20000130

080042bc <_fstat_r>:
 80042bc:	b538      	push	{r3, r4, r5, lr}
 80042be:	4d07      	ldr	r5, [pc, #28]	; (80042dc <_fstat_r+0x20>)
 80042c0:	2300      	movs	r3, #0
 80042c2:	4604      	mov	r4, r0
 80042c4:	4608      	mov	r0, r1
 80042c6:	4611      	mov	r1, r2
 80042c8:	602b      	str	r3, [r5, #0]
 80042ca:	f7fe f8aa 	bl	8002422 <_fstat>
 80042ce:	1c43      	adds	r3, r0, #1
 80042d0:	d102      	bne.n	80042d8 <_fstat_r+0x1c>
 80042d2:	682b      	ldr	r3, [r5, #0]
 80042d4:	b103      	cbz	r3, 80042d8 <_fstat_r+0x1c>
 80042d6:	6023      	str	r3, [r4, #0]
 80042d8:	bd38      	pop	{r3, r4, r5, pc}
 80042da:	bf00      	nop
 80042dc:	20000130 	.word	0x20000130

080042e0 <_isatty_r>:
 80042e0:	b538      	push	{r3, r4, r5, lr}
 80042e2:	4d06      	ldr	r5, [pc, #24]	; (80042fc <_isatty_r+0x1c>)
 80042e4:	2300      	movs	r3, #0
 80042e6:	4604      	mov	r4, r0
 80042e8:	4608      	mov	r0, r1
 80042ea:	602b      	str	r3, [r5, #0]
 80042ec:	f7fe f8a9 	bl	8002442 <_isatty>
 80042f0:	1c43      	adds	r3, r0, #1
 80042f2:	d102      	bne.n	80042fa <_isatty_r+0x1a>
 80042f4:	682b      	ldr	r3, [r5, #0]
 80042f6:	b103      	cbz	r3, 80042fa <_isatty_r+0x1a>
 80042f8:	6023      	str	r3, [r4, #0]
 80042fa:	bd38      	pop	{r3, r4, r5, pc}
 80042fc:	20000130 	.word	0x20000130

08004300 <_lseek_r>:
 8004300:	b538      	push	{r3, r4, r5, lr}
 8004302:	4d07      	ldr	r5, [pc, #28]	; (8004320 <_lseek_r+0x20>)
 8004304:	4604      	mov	r4, r0
 8004306:	4608      	mov	r0, r1
 8004308:	4611      	mov	r1, r2
 800430a:	2200      	movs	r2, #0
 800430c:	602a      	str	r2, [r5, #0]
 800430e:	461a      	mov	r2, r3
 8004310:	f7fe f8a2 	bl	8002458 <_lseek>
 8004314:	1c43      	adds	r3, r0, #1
 8004316:	d102      	bne.n	800431e <_lseek_r+0x1e>
 8004318:	682b      	ldr	r3, [r5, #0]
 800431a:	b103      	cbz	r3, 800431e <_lseek_r+0x1e>
 800431c:	6023      	str	r3, [r4, #0]
 800431e:	bd38      	pop	{r3, r4, r5, pc}
 8004320:	20000130 	.word	0x20000130

08004324 <_read_r>:
 8004324:	b538      	push	{r3, r4, r5, lr}
 8004326:	4d07      	ldr	r5, [pc, #28]	; (8004344 <_read_r+0x20>)
 8004328:	4604      	mov	r4, r0
 800432a:	4608      	mov	r0, r1
 800432c:	4611      	mov	r1, r2
 800432e:	2200      	movs	r2, #0
 8004330:	602a      	str	r2, [r5, #0]
 8004332:	461a      	mov	r2, r3
 8004334:	f7fe f830 	bl	8002398 <_read>
 8004338:	1c43      	adds	r3, r0, #1
 800433a:	d102      	bne.n	8004342 <_read_r+0x1e>
 800433c:	682b      	ldr	r3, [r5, #0]
 800433e:	b103      	cbz	r3, 8004342 <_read_r+0x1e>
 8004340:	6023      	str	r3, [r4, #0]
 8004342:	bd38      	pop	{r3, r4, r5, pc}
 8004344:	20000130 	.word	0x20000130

08004348 <atan2>:
 8004348:	f000 b89e 	b.w	8004488 <__ieee754_atan2>

0800434c <pow>:
 800434c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800434e:	ed2d 8b02 	vpush	{d8}
 8004352:	eeb0 8a40 	vmov.f32	s16, s0
 8004356:	eef0 8a60 	vmov.f32	s17, s1
 800435a:	ec55 4b11 	vmov	r4, r5, d1
 800435e:	f000 f95f 	bl	8004620 <__ieee754_pow>
 8004362:	4622      	mov	r2, r4
 8004364:	462b      	mov	r3, r5
 8004366:	4620      	mov	r0, r4
 8004368:	4629      	mov	r1, r5
 800436a:	ec57 6b10 	vmov	r6, r7, d0
 800436e:	f7fc fbdd 	bl	8000b2c <__aeabi_dcmpun>
 8004372:	2800      	cmp	r0, #0
 8004374:	d13b      	bne.n	80043ee <pow+0xa2>
 8004376:	ec51 0b18 	vmov	r0, r1, d8
 800437a:	2200      	movs	r2, #0
 800437c:	2300      	movs	r3, #0
 800437e:	f7fc fba3 	bl	8000ac8 <__aeabi_dcmpeq>
 8004382:	b1b8      	cbz	r0, 80043b4 <pow+0x68>
 8004384:	2200      	movs	r2, #0
 8004386:	2300      	movs	r3, #0
 8004388:	4620      	mov	r0, r4
 800438a:	4629      	mov	r1, r5
 800438c:	f7fc fb9c 	bl	8000ac8 <__aeabi_dcmpeq>
 8004390:	2800      	cmp	r0, #0
 8004392:	d146      	bne.n	8004422 <pow+0xd6>
 8004394:	ec45 4b10 	vmov	d0, r4, r5
 8004398:	f001 f8fb 	bl	8005592 <finite>
 800439c:	b338      	cbz	r0, 80043ee <pow+0xa2>
 800439e:	2200      	movs	r2, #0
 80043a0:	2300      	movs	r3, #0
 80043a2:	4620      	mov	r0, r4
 80043a4:	4629      	mov	r1, r5
 80043a6:	f7fc fb99 	bl	8000adc <__aeabi_dcmplt>
 80043aa:	b300      	cbz	r0, 80043ee <pow+0xa2>
 80043ac:	f7fe ff62 	bl	8003274 <__errno>
 80043b0:	2322      	movs	r3, #34	; 0x22
 80043b2:	e01b      	b.n	80043ec <pow+0xa0>
 80043b4:	ec47 6b10 	vmov	d0, r6, r7
 80043b8:	f001 f8eb 	bl	8005592 <finite>
 80043bc:	b9e0      	cbnz	r0, 80043f8 <pow+0xac>
 80043be:	eeb0 0a48 	vmov.f32	s0, s16
 80043c2:	eef0 0a68 	vmov.f32	s1, s17
 80043c6:	f001 f8e4 	bl	8005592 <finite>
 80043ca:	b1a8      	cbz	r0, 80043f8 <pow+0xac>
 80043cc:	ec45 4b10 	vmov	d0, r4, r5
 80043d0:	f001 f8df 	bl	8005592 <finite>
 80043d4:	b180      	cbz	r0, 80043f8 <pow+0xac>
 80043d6:	4632      	mov	r2, r6
 80043d8:	463b      	mov	r3, r7
 80043da:	4630      	mov	r0, r6
 80043dc:	4639      	mov	r1, r7
 80043de:	f7fc fba5 	bl	8000b2c <__aeabi_dcmpun>
 80043e2:	2800      	cmp	r0, #0
 80043e4:	d0e2      	beq.n	80043ac <pow+0x60>
 80043e6:	f7fe ff45 	bl	8003274 <__errno>
 80043ea:	2321      	movs	r3, #33	; 0x21
 80043ec:	6003      	str	r3, [r0, #0]
 80043ee:	ecbd 8b02 	vpop	{d8}
 80043f2:	ec47 6b10 	vmov	d0, r6, r7
 80043f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80043f8:	2200      	movs	r2, #0
 80043fa:	2300      	movs	r3, #0
 80043fc:	4630      	mov	r0, r6
 80043fe:	4639      	mov	r1, r7
 8004400:	f7fc fb62 	bl	8000ac8 <__aeabi_dcmpeq>
 8004404:	2800      	cmp	r0, #0
 8004406:	d0f2      	beq.n	80043ee <pow+0xa2>
 8004408:	eeb0 0a48 	vmov.f32	s0, s16
 800440c:	eef0 0a68 	vmov.f32	s1, s17
 8004410:	f001 f8bf 	bl	8005592 <finite>
 8004414:	2800      	cmp	r0, #0
 8004416:	d0ea      	beq.n	80043ee <pow+0xa2>
 8004418:	ec45 4b10 	vmov	d0, r4, r5
 800441c:	f001 f8b9 	bl	8005592 <finite>
 8004420:	e7c3      	b.n	80043aa <pow+0x5e>
 8004422:	4f01      	ldr	r7, [pc, #4]	; (8004428 <pow+0xdc>)
 8004424:	2600      	movs	r6, #0
 8004426:	e7e2      	b.n	80043ee <pow+0xa2>
 8004428:	3ff00000 	.word	0x3ff00000

0800442c <sqrt>:
 800442c:	b538      	push	{r3, r4, r5, lr}
 800442e:	ed2d 8b02 	vpush	{d8}
 8004432:	ec55 4b10 	vmov	r4, r5, d0
 8004436:	f000 fe21 	bl	800507c <__ieee754_sqrt>
 800443a:	4622      	mov	r2, r4
 800443c:	462b      	mov	r3, r5
 800443e:	4620      	mov	r0, r4
 8004440:	4629      	mov	r1, r5
 8004442:	eeb0 8a40 	vmov.f32	s16, s0
 8004446:	eef0 8a60 	vmov.f32	s17, s1
 800444a:	f7fc fb6f 	bl	8000b2c <__aeabi_dcmpun>
 800444e:	b990      	cbnz	r0, 8004476 <sqrt+0x4a>
 8004450:	2200      	movs	r2, #0
 8004452:	2300      	movs	r3, #0
 8004454:	4620      	mov	r0, r4
 8004456:	4629      	mov	r1, r5
 8004458:	f7fc fb40 	bl	8000adc <__aeabi_dcmplt>
 800445c:	b158      	cbz	r0, 8004476 <sqrt+0x4a>
 800445e:	f7fe ff09 	bl	8003274 <__errno>
 8004462:	2321      	movs	r3, #33	; 0x21
 8004464:	6003      	str	r3, [r0, #0]
 8004466:	2200      	movs	r2, #0
 8004468:	2300      	movs	r3, #0
 800446a:	4610      	mov	r0, r2
 800446c:	4619      	mov	r1, r3
 800446e:	f7fc f9ed 	bl	800084c <__aeabi_ddiv>
 8004472:	ec41 0b18 	vmov	d8, r0, r1
 8004476:	eeb0 0a48 	vmov.f32	s0, s16
 800447a:	eef0 0a68 	vmov.f32	s1, s17
 800447e:	ecbd 8b02 	vpop	{d8}
 8004482:	bd38      	pop	{r3, r4, r5, pc}
 8004484:	0000      	movs	r0, r0
	...

08004488 <__ieee754_atan2>:
 8004488:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800448c:	ec57 6b11 	vmov	r6, r7, d1
 8004490:	4273      	negs	r3, r6
 8004492:	f8df e184 	ldr.w	lr, [pc, #388]	; 8004618 <__ieee754_atan2+0x190>
 8004496:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 800449a:	4333      	orrs	r3, r6
 800449c:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 80044a0:	4573      	cmp	r3, lr
 80044a2:	ec51 0b10 	vmov	r0, r1, d0
 80044a6:	ee11 8a10 	vmov	r8, s2
 80044aa:	d80a      	bhi.n	80044c2 <__ieee754_atan2+0x3a>
 80044ac:	4244      	negs	r4, r0
 80044ae:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80044b2:	4304      	orrs	r4, r0
 80044b4:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 80044b8:	4574      	cmp	r4, lr
 80044ba:	ee10 9a10 	vmov	r9, s0
 80044be:	468c      	mov	ip, r1
 80044c0:	d907      	bls.n	80044d2 <__ieee754_atan2+0x4a>
 80044c2:	4632      	mov	r2, r6
 80044c4:	463b      	mov	r3, r7
 80044c6:	f7fb fee1 	bl	800028c <__adddf3>
 80044ca:	ec41 0b10 	vmov	d0, r0, r1
 80044ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80044d2:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 80044d6:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80044da:	4334      	orrs	r4, r6
 80044dc:	d103      	bne.n	80044e6 <__ieee754_atan2+0x5e>
 80044de:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80044e2:	f000 bead 	b.w	8005240 <atan>
 80044e6:	17bc      	asrs	r4, r7, #30
 80044e8:	f004 0402 	and.w	r4, r4, #2
 80044ec:	ea53 0909 	orrs.w	r9, r3, r9
 80044f0:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 80044f4:	d107      	bne.n	8004506 <__ieee754_atan2+0x7e>
 80044f6:	2c02      	cmp	r4, #2
 80044f8:	d060      	beq.n	80045bc <__ieee754_atan2+0x134>
 80044fa:	2c03      	cmp	r4, #3
 80044fc:	d1e5      	bne.n	80044ca <__ieee754_atan2+0x42>
 80044fe:	a142      	add	r1, pc, #264	; (adr r1, 8004608 <__ieee754_atan2+0x180>)
 8004500:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004504:	e7e1      	b.n	80044ca <__ieee754_atan2+0x42>
 8004506:	ea52 0808 	orrs.w	r8, r2, r8
 800450a:	d106      	bne.n	800451a <__ieee754_atan2+0x92>
 800450c:	f1bc 0f00 	cmp.w	ip, #0
 8004510:	da5f      	bge.n	80045d2 <__ieee754_atan2+0x14a>
 8004512:	a13f      	add	r1, pc, #252	; (adr r1, 8004610 <__ieee754_atan2+0x188>)
 8004514:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004518:	e7d7      	b.n	80044ca <__ieee754_atan2+0x42>
 800451a:	4572      	cmp	r2, lr
 800451c:	d10f      	bne.n	800453e <__ieee754_atan2+0xb6>
 800451e:	4293      	cmp	r3, r2
 8004520:	f104 34ff 	add.w	r4, r4, #4294967295
 8004524:	d107      	bne.n	8004536 <__ieee754_atan2+0xae>
 8004526:	2c02      	cmp	r4, #2
 8004528:	d84c      	bhi.n	80045c4 <__ieee754_atan2+0x13c>
 800452a:	4b35      	ldr	r3, [pc, #212]	; (8004600 <__ieee754_atan2+0x178>)
 800452c:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8004530:	e9d4 0100 	ldrd	r0, r1, [r4]
 8004534:	e7c9      	b.n	80044ca <__ieee754_atan2+0x42>
 8004536:	2c02      	cmp	r4, #2
 8004538:	d848      	bhi.n	80045cc <__ieee754_atan2+0x144>
 800453a:	4b32      	ldr	r3, [pc, #200]	; (8004604 <__ieee754_atan2+0x17c>)
 800453c:	e7f6      	b.n	800452c <__ieee754_atan2+0xa4>
 800453e:	4573      	cmp	r3, lr
 8004540:	d0e4      	beq.n	800450c <__ieee754_atan2+0x84>
 8004542:	1a9b      	subs	r3, r3, r2
 8004544:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 8004548:	ea4f 5223 	mov.w	r2, r3, asr #20
 800454c:	da1e      	bge.n	800458c <__ieee754_atan2+0x104>
 800454e:	2f00      	cmp	r7, #0
 8004550:	da01      	bge.n	8004556 <__ieee754_atan2+0xce>
 8004552:	323c      	adds	r2, #60	; 0x3c
 8004554:	db1e      	blt.n	8004594 <__ieee754_atan2+0x10c>
 8004556:	4632      	mov	r2, r6
 8004558:	463b      	mov	r3, r7
 800455a:	f7fc f977 	bl	800084c <__aeabi_ddiv>
 800455e:	ec41 0b10 	vmov	d0, r0, r1
 8004562:	f001 f80d 	bl	8005580 <fabs>
 8004566:	f000 fe6b 	bl	8005240 <atan>
 800456a:	ec51 0b10 	vmov	r0, r1, d0
 800456e:	2c01      	cmp	r4, #1
 8004570:	d013      	beq.n	800459a <__ieee754_atan2+0x112>
 8004572:	2c02      	cmp	r4, #2
 8004574:	d015      	beq.n	80045a2 <__ieee754_atan2+0x11a>
 8004576:	2c00      	cmp	r4, #0
 8004578:	d0a7      	beq.n	80044ca <__ieee754_atan2+0x42>
 800457a:	a319      	add	r3, pc, #100	; (adr r3, 80045e0 <__ieee754_atan2+0x158>)
 800457c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004580:	f7fb fe82 	bl	8000288 <__aeabi_dsub>
 8004584:	a318      	add	r3, pc, #96	; (adr r3, 80045e8 <__ieee754_atan2+0x160>)
 8004586:	e9d3 2300 	ldrd	r2, r3, [r3]
 800458a:	e014      	b.n	80045b6 <__ieee754_atan2+0x12e>
 800458c:	a118      	add	r1, pc, #96	; (adr r1, 80045f0 <__ieee754_atan2+0x168>)
 800458e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004592:	e7ec      	b.n	800456e <__ieee754_atan2+0xe6>
 8004594:	2000      	movs	r0, #0
 8004596:	2100      	movs	r1, #0
 8004598:	e7e9      	b.n	800456e <__ieee754_atan2+0xe6>
 800459a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800459e:	4619      	mov	r1, r3
 80045a0:	e793      	b.n	80044ca <__ieee754_atan2+0x42>
 80045a2:	a30f      	add	r3, pc, #60	; (adr r3, 80045e0 <__ieee754_atan2+0x158>)
 80045a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80045a8:	f7fb fe6e 	bl	8000288 <__aeabi_dsub>
 80045ac:	4602      	mov	r2, r0
 80045ae:	460b      	mov	r3, r1
 80045b0:	a10d      	add	r1, pc, #52	; (adr r1, 80045e8 <__ieee754_atan2+0x160>)
 80045b2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80045b6:	f7fb fe67 	bl	8000288 <__aeabi_dsub>
 80045ba:	e786      	b.n	80044ca <__ieee754_atan2+0x42>
 80045bc:	a10a      	add	r1, pc, #40	; (adr r1, 80045e8 <__ieee754_atan2+0x160>)
 80045be:	e9d1 0100 	ldrd	r0, r1, [r1]
 80045c2:	e782      	b.n	80044ca <__ieee754_atan2+0x42>
 80045c4:	a10c      	add	r1, pc, #48	; (adr r1, 80045f8 <__ieee754_atan2+0x170>)
 80045c6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80045ca:	e77e      	b.n	80044ca <__ieee754_atan2+0x42>
 80045cc:	2000      	movs	r0, #0
 80045ce:	2100      	movs	r1, #0
 80045d0:	e77b      	b.n	80044ca <__ieee754_atan2+0x42>
 80045d2:	a107      	add	r1, pc, #28	; (adr r1, 80045f0 <__ieee754_atan2+0x168>)
 80045d4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80045d8:	e777      	b.n	80044ca <__ieee754_atan2+0x42>
 80045da:	bf00      	nop
 80045dc:	f3af 8000 	nop.w
 80045e0:	33145c07 	.word	0x33145c07
 80045e4:	3ca1a626 	.word	0x3ca1a626
 80045e8:	54442d18 	.word	0x54442d18
 80045ec:	400921fb 	.word	0x400921fb
 80045f0:	54442d18 	.word	0x54442d18
 80045f4:	3ff921fb 	.word	0x3ff921fb
 80045f8:	54442d18 	.word	0x54442d18
 80045fc:	3fe921fb 	.word	0x3fe921fb
 8004600:	08005818 	.word	0x08005818
 8004604:	08005830 	.word	0x08005830
 8004608:	54442d18 	.word	0x54442d18
 800460c:	c00921fb 	.word	0xc00921fb
 8004610:	54442d18 	.word	0x54442d18
 8004614:	bff921fb 	.word	0xbff921fb
 8004618:	7ff00000 	.word	0x7ff00000
 800461c:	00000000 	.word	0x00000000

08004620 <__ieee754_pow>:
 8004620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004624:	ed2d 8b06 	vpush	{d8-d10}
 8004628:	b089      	sub	sp, #36	; 0x24
 800462a:	ed8d 1b00 	vstr	d1, [sp]
 800462e:	e9dd 2900 	ldrd	r2, r9, [sp]
 8004632:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 8004636:	ea58 0102 	orrs.w	r1, r8, r2
 800463a:	ec57 6b10 	vmov	r6, r7, d0
 800463e:	d115      	bne.n	800466c <__ieee754_pow+0x4c>
 8004640:	19b3      	adds	r3, r6, r6
 8004642:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 8004646:	4152      	adcs	r2, r2
 8004648:	4299      	cmp	r1, r3
 800464a:	4b89      	ldr	r3, [pc, #548]	; (8004870 <__ieee754_pow+0x250>)
 800464c:	4193      	sbcs	r3, r2
 800464e:	f080 84d2 	bcs.w	8004ff6 <__ieee754_pow+0x9d6>
 8004652:	e9dd 2300 	ldrd	r2, r3, [sp]
 8004656:	4630      	mov	r0, r6
 8004658:	4639      	mov	r1, r7
 800465a:	f7fb fe17 	bl	800028c <__adddf3>
 800465e:	ec41 0b10 	vmov	d0, r0, r1
 8004662:	b009      	add	sp, #36	; 0x24
 8004664:	ecbd 8b06 	vpop	{d8-d10}
 8004668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800466c:	4b81      	ldr	r3, [pc, #516]	; (8004874 <__ieee754_pow+0x254>)
 800466e:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 8004672:	429c      	cmp	r4, r3
 8004674:	ee10 aa10 	vmov	sl, s0
 8004678:	463d      	mov	r5, r7
 800467a:	dc06      	bgt.n	800468a <__ieee754_pow+0x6a>
 800467c:	d101      	bne.n	8004682 <__ieee754_pow+0x62>
 800467e:	2e00      	cmp	r6, #0
 8004680:	d1e7      	bne.n	8004652 <__ieee754_pow+0x32>
 8004682:	4598      	cmp	r8, r3
 8004684:	dc01      	bgt.n	800468a <__ieee754_pow+0x6a>
 8004686:	d10f      	bne.n	80046a8 <__ieee754_pow+0x88>
 8004688:	b172      	cbz	r2, 80046a8 <__ieee754_pow+0x88>
 800468a:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 800468e:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 8004692:	ea55 050a 	orrs.w	r5, r5, sl
 8004696:	d1dc      	bne.n	8004652 <__ieee754_pow+0x32>
 8004698:	e9dd 3200 	ldrd	r3, r2, [sp]
 800469c:	18db      	adds	r3, r3, r3
 800469e:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 80046a2:	4152      	adcs	r2, r2
 80046a4:	429d      	cmp	r5, r3
 80046a6:	e7d0      	b.n	800464a <__ieee754_pow+0x2a>
 80046a8:	2d00      	cmp	r5, #0
 80046aa:	da3b      	bge.n	8004724 <__ieee754_pow+0x104>
 80046ac:	4b72      	ldr	r3, [pc, #456]	; (8004878 <__ieee754_pow+0x258>)
 80046ae:	4598      	cmp	r8, r3
 80046b0:	dc51      	bgt.n	8004756 <__ieee754_pow+0x136>
 80046b2:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 80046b6:	4598      	cmp	r8, r3
 80046b8:	f340 84ac 	ble.w	8005014 <__ieee754_pow+0x9f4>
 80046bc:	ea4f 5328 	mov.w	r3, r8, asr #20
 80046c0:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80046c4:	2b14      	cmp	r3, #20
 80046c6:	dd0f      	ble.n	80046e8 <__ieee754_pow+0xc8>
 80046c8:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 80046cc:	fa22 f103 	lsr.w	r1, r2, r3
 80046d0:	fa01 f303 	lsl.w	r3, r1, r3
 80046d4:	4293      	cmp	r3, r2
 80046d6:	f040 849d 	bne.w	8005014 <__ieee754_pow+0x9f4>
 80046da:	f001 0101 	and.w	r1, r1, #1
 80046de:	f1c1 0302 	rsb	r3, r1, #2
 80046e2:	9304      	str	r3, [sp, #16]
 80046e4:	b182      	cbz	r2, 8004708 <__ieee754_pow+0xe8>
 80046e6:	e05f      	b.n	80047a8 <__ieee754_pow+0x188>
 80046e8:	2a00      	cmp	r2, #0
 80046ea:	d15b      	bne.n	80047a4 <__ieee754_pow+0x184>
 80046ec:	f1c3 0314 	rsb	r3, r3, #20
 80046f0:	fa48 f103 	asr.w	r1, r8, r3
 80046f4:	fa01 f303 	lsl.w	r3, r1, r3
 80046f8:	4543      	cmp	r3, r8
 80046fa:	f040 8488 	bne.w	800500e <__ieee754_pow+0x9ee>
 80046fe:	f001 0101 	and.w	r1, r1, #1
 8004702:	f1c1 0302 	rsb	r3, r1, #2
 8004706:	9304      	str	r3, [sp, #16]
 8004708:	4b5c      	ldr	r3, [pc, #368]	; (800487c <__ieee754_pow+0x25c>)
 800470a:	4598      	cmp	r8, r3
 800470c:	d132      	bne.n	8004774 <__ieee754_pow+0x154>
 800470e:	f1b9 0f00 	cmp.w	r9, #0
 8004712:	f280 8478 	bge.w	8005006 <__ieee754_pow+0x9e6>
 8004716:	4959      	ldr	r1, [pc, #356]	; (800487c <__ieee754_pow+0x25c>)
 8004718:	4632      	mov	r2, r6
 800471a:	463b      	mov	r3, r7
 800471c:	2000      	movs	r0, #0
 800471e:	f7fc f895 	bl	800084c <__aeabi_ddiv>
 8004722:	e79c      	b.n	800465e <__ieee754_pow+0x3e>
 8004724:	2300      	movs	r3, #0
 8004726:	9304      	str	r3, [sp, #16]
 8004728:	2a00      	cmp	r2, #0
 800472a:	d13d      	bne.n	80047a8 <__ieee754_pow+0x188>
 800472c:	4b51      	ldr	r3, [pc, #324]	; (8004874 <__ieee754_pow+0x254>)
 800472e:	4598      	cmp	r8, r3
 8004730:	d1ea      	bne.n	8004708 <__ieee754_pow+0xe8>
 8004732:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8004736:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 800473a:	ea53 030a 	orrs.w	r3, r3, sl
 800473e:	f000 845a 	beq.w	8004ff6 <__ieee754_pow+0x9d6>
 8004742:	4b4f      	ldr	r3, [pc, #316]	; (8004880 <__ieee754_pow+0x260>)
 8004744:	429c      	cmp	r4, r3
 8004746:	dd08      	ble.n	800475a <__ieee754_pow+0x13a>
 8004748:	f1b9 0f00 	cmp.w	r9, #0
 800474c:	f2c0 8457 	blt.w	8004ffe <__ieee754_pow+0x9de>
 8004750:	e9dd 0100 	ldrd	r0, r1, [sp]
 8004754:	e783      	b.n	800465e <__ieee754_pow+0x3e>
 8004756:	2302      	movs	r3, #2
 8004758:	e7e5      	b.n	8004726 <__ieee754_pow+0x106>
 800475a:	f1b9 0f00 	cmp.w	r9, #0
 800475e:	f04f 0000 	mov.w	r0, #0
 8004762:	f04f 0100 	mov.w	r1, #0
 8004766:	f6bf af7a 	bge.w	800465e <__ieee754_pow+0x3e>
 800476a:	e9dd 0300 	ldrd	r0, r3, [sp]
 800476e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8004772:	e774      	b.n	800465e <__ieee754_pow+0x3e>
 8004774:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 8004778:	d106      	bne.n	8004788 <__ieee754_pow+0x168>
 800477a:	4632      	mov	r2, r6
 800477c:	463b      	mov	r3, r7
 800477e:	4630      	mov	r0, r6
 8004780:	4639      	mov	r1, r7
 8004782:	f7fb ff39 	bl	80005f8 <__aeabi_dmul>
 8004786:	e76a      	b.n	800465e <__ieee754_pow+0x3e>
 8004788:	4b3e      	ldr	r3, [pc, #248]	; (8004884 <__ieee754_pow+0x264>)
 800478a:	4599      	cmp	r9, r3
 800478c:	d10c      	bne.n	80047a8 <__ieee754_pow+0x188>
 800478e:	2d00      	cmp	r5, #0
 8004790:	db0a      	blt.n	80047a8 <__ieee754_pow+0x188>
 8004792:	ec47 6b10 	vmov	d0, r6, r7
 8004796:	b009      	add	sp, #36	; 0x24
 8004798:	ecbd 8b06 	vpop	{d8-d10}
 800479c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047a0:	f000 bc6c 	b.w	800507c <__ieee754_sqrt>
 80047a4:	2300      	movs	r3, #0
 80047a6:	9304      	str	r3, [sp, #16]
 80047a8:	ec47 6b10 	vmov	d0, r6, r7
 80047ac:	f000 fee8 	bl	8005580 <fabs>
 80047b0:	ec51 0b10 	vmov	r0, r1, d0
 80047b4:	f1ba 0f00 	cmp.w	sl, #0
 80047b8:	d129      	bne.n	800480e <__ieee754_pow+0x1ee>
 80047ba:	b124      	cbz	r4, 80047c6 <__ieee754_pow+0x1a6>
 80047bc:	4b2f      	ldr	r3, [pc, #188]	; (800487c <__ieee754_pow+0x25c>)
 80047be:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 80047c2:	429a      	cmp	r2, r3
 80047c4:	d123      	bne.n	800480e <__ieee754_pow+0x1ee>
 80047c6:	f1b9 0f00 	cmp.w	r9, #0
 80047ca:	da05      	bge.n	80047d8 <__ieee754_pow+0x1b8>
 80047cc:	4602      	mov	r2, r0
 80047ce:	460b      	mov	r3, r1
 80047d0:	2000      	movs	r0, #0
 80047d2:	492a      	ldr	r1, [pc, #168]	; (800487c <__ieee754_pow+0x25c>)
 80047d4:	f7fc f83a 	bl	800084c <__aeabi_ddiv>
 80047d8:	2d00      	cmp	r5, #0
 80047da:	f6bf af40 	bge.w	800465e <__ieee754_pow+0x3e>
 80047de:	9b04      	ldr	r3, [sp, #16]
 80047e0:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 80047e4:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80047e8:	4323      	orrs	r3, r4
 80047ea:	d108      	bne.n	80047fe <__ieee754_pow+0x1de>
 80047ec:	4602      	mov	r2, r0
 80047ee:	460b      	mov	r3, r1
 80047f0:	4610      	mov	r0, r2
 80047f2:	4619      	mov	r1, r3
 80047f4:	f7fb fd48 	bl	8000288 <__aeabi_dsub>
 80047f8:	4602      	mov	r2, r0
 80047fa:	460b      	mov	r3, r1
 80047fc:	e78f      	b.n	800471e <__ieee754_pow+0xfe>
 80047fe:	9b04      	ldr	r3, [sp, #16]
 8004800:	2b01      	cmp	r3, #1
 8004802:	f47f af2c 	bne.w	800465e <__ieee754_pow+0x3e>
 8004806:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800480a:	4619      	mov	r1, r3
 800480c:	e727      	b.n	800465e <__ieee754_pow+0x3e>
 800480e:	0feb      	lsrs	r3, r5, #31
 8004810:	3b01      	subs	r3, #1
 8004812:	9306      	str	r3, [sp, #24]
 8004814:	9a06      	ldr	r2, [sp, #24]
 8004816:	9b04      	ldr	r3, [sp, #16]
 8004818:	4313      	orrs	r3, r2
 800481a:	d102      	bne.n	8004822 <__ieee754_pow+0x202>
 800481c:	4632      	mov	r2, r6
 800481e:	463b      	mov	r3, r7
 8004820:	e7e6      	b.n	80047f0 <__ieee754_pow+0x1d0>
 8004822:	4b19      	ldr	r3, [pc, #100]	; (8004888 <__ieee754_pow+0x268>)
 8004824:	4598      	cmp	r8, r3
 8004826:	f340 80fb 	ble.w	8004a20 <__ieee754_pow+0x400>
 800482a:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 800482e:	4598      	cmp	r8, r3
 8004830:	4b13      	ldr	r3, [pc, #76]	; (8004880 <__ieee754_pow+0x260>)
 8004832:	dd0c      	ble.n	800484e <__ieee754_pow+0x22e>
 8004834:	429c      	cmp	r4, r3
 8004836:	dc0f      	bgt.n	8004858 <__ieee754_pow+0x238>
 8004838:	f1b9 0f00 	cmp.w	r9, #0
 800483c:	da0f      	bge.n	800485e <__ieee754_pow+0x23e>
 800483e:	2000      	movs	r0, #0
 8004840:	b009      	add	sp, #36	; 0x24
 8004842:	ecbd 8b06 	vpop	{d8-d10}
 8004846:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800484a:	f000 bcf0 	b.w	800522e <__math_oflow>
 800484e:	429c      	cmp	r4, r3
 8004850:	dbf2      	blt.n	8004838 <__ieee754_pow+0x218>
 8004852:	4b0a      	ldr	r3, [pc, #40]	; (800487c <__ieee754_pow+0x25c>)
 8004854:	429c      	cmp	r4, r3
 8004856:	dd19      	ble.n	800488c <__ieee754_pow+0x26c>
 8004858:	f1b9 0f00 	cmp.w	r9, #0
 800485c:	dcef      	bgt.n	800483e <__ieee754_pow+0x21e>
 800485e:	2000      	movs	r0, #0
 8004860:	b009      	add	sp, #36	; 0x24
 8004862:	ecbd 8b06 	vpop	{d8-d10}
 8004866:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800486a:	f000 bcd7 	b.w	800521c <__math_uflow>
 800486e:	bf00      	nop
 8004870:	fff00000 	.word	0xfff00000
 8004874:	7ff00000 	.word	0x7ff00000
 8004878:	433fffff 	.word	0x433fffff
 800487c:	3ff00000 	.word	0x3ff00000
 8004880:	3fefffff 	.word	0x3fefffff
 8004884:	3fe00000 	.word	0x3fe00000
 8004888:	41e00000 	.word	0x41e00000
 800488c:	4b60      	ldr	r3, [pc, #384]	; (8004a10 <__ieee754_pow+0x3f0>)
 800488e:	2200      	movs	r2, #0
 8004890:	f7fb fcfa 	bl	8000288 <__aeabi_dsub>
 8004894:	a354      	add	r3, pc, #336	; (adr r3, 80049e8 <__ieee754_pow+0x3c8>)
 8004896:	e9d3 2300 	ldrd	r2, r3, [r3]
 800489a:	4604      	mov	r4, r0
 800489c:	460d      	mov	r5, r1
 800489e:	f7fb feab 	bl	80005f8 <__aeabi_dmul>
 80048a2:	a353      	add	r3, pc, #332	; (adr r3, 80049f0 <__ieee754_pow+0x3d0>)
 80048a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80048a8:	4606      	mov	r6, r0
 80048aa:	460f      	mov	r7, r1
 80048ac:	4620      	mov	r0, r4
 80048ae:	4629      	mov	r1, r5
 80048b0:	f7fb fea2 	bl	80005f8 <__aeabi_dmul>
 80048b4:	4b57      	ldr	r3, [pc, #348]	; (8004a14 <__ieee754_pow+0x3f4>)
 80048b6:	4682      	mov	sl, r0
 80048b8:	468b      	mov	fp, r1
 80048ba:	2200      	movs	r2, #0
 80048bc:	4620      	mov	r0, r4
 80048be:	4629      	mov	r1, r5
 80048c0:	f7fb fe9a 	bl	80005f8 <__aeabi_dmul>
 80048c4:	4602      	mov	r2, r0
 80048c6:	460b      	mov	r3, r1
 80048c8:	a14b      	add	r1, pc, #300	; (adr r1, 80049f8 <__ieee754_pow+0x3d8>)
 80048ca:	e9d1 0100 	ldrd	r0, r1, [r1]
 80048ce:	f7fb fcdb 	bl	8000288 <__aeabi_dsub>
 80048d2:	4622      	mov	r2, r4
 80048d4:	462b      	mov	r3, r5
 80048d6:	f7fb fe8f 	bl	80005f8 <__aeabi_dmul>
 80048da:	4602      	mov	r2, r0
 80048dc:	460b      	mov	r3, r1
 80048de:	2000      	movs	r0, #0
 80048e0:	494d      	ldr	r1, [pc, #308]	; (8004a18 <__ieee754_pow+0x3f8>)
 80048e2:	f7fb fcd1 	bl	8000288 <__aeabi_dsub>
 80048e6:	4622      	mov	r2, r4
 80048e8:	4680      	mov	r8, r0
 80048ea:	4689      	mov	r9, r1
 80048ec:	462b      	mov	r3, r5
 80048ee:	4620      	mov	r0, r4
 80048f0:	4629      	mov	r1, r5
 80048f2:	f7fb fe81 	bl	80005f8 <__aeabi_dmul>
 80048f6:	4602      	mov	r2, r0
 80048f8:	460b      	mov	r3, r1
 80048fa:	4640      	mov	r0, r8
 80048fc:	4649      	mov	r1, r9
 80048fe:	f7fb fe7b 	bl	80005f8 <__aeabi_dmul>
 8004902:	a33f      	add	r3, pc, #252	; (adr r3, 8004a00 <__ieee754_pow+0x3e0>)
 8004904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004908:	f7fb fe76 	bl	80005f8 <__aeabi_dmul>
 800490c:	4602      	mov	r2, r0
 800490e:	460b      	mov	r3, r1
 8004910:	4650      	mov	r0, sl
 8004912:	4659      	mov	r1, fp
 8004914:	f7fb fcb8 	bl	8000288 <__aeabi_dsub>
 8004918:	4602      	mov	r2, r0
 800491a:	460b      	mov	r3, r1
 800491c:	4680      	mov	r8, r0
 800491e:	4689      	mov	r9, r1
 8004920:	4630      	mov	r0, r6
 8004922:	4639      	mov	r1, r7
 8004924:	f7fb fcb2 	bl	800028c <__adddf3>
 8004928:	2000      	movs	r0, #0
 800492a:	4632      	mov	r2, r6
 800492c:	463b      	mov	r3, r7
 800492e:	4604      	mov	r4, r0
 8004930:	460d      	mov	r5, r1
 8004932:	f7fb fca9 	bl	8000288 <__aeabi_dsub>
 8004936:	4602      	mov	r2, r0
 8004938:	460b      	mov	r3, r1
 800493a:	4640      	mov	r0, r8
 800493c:	4649      	mov	r1, r9
 800493e:	f7fb fca3 	bl	8000288 <__aeabi_dsub>
 8004942:	9b04      	ldr	r3, [sp, #16]
 8004944:	9a06      	ldr	r2, [sp, #24]
 8004946:	3b01      	subs	r3, #1
 8004948:	4313      	orrs	r3, r2
 800494a:	4682      	mov	sl, r0
 800494c:	468b      	mov	fp, r1
 800494e:	f040 81e7 	bne.w	8004d20 <__ieee754_pow+0x700>
 8004952:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 8004a08 <__ieee754_pow+0x3e8>
 8004956:	eeb0 8a47 	vmov.f32	s16, s14
 800495a:	eef0 8a67 	vmov.f32	s17, s15
 800495e:	e9dd 6700 	ldrd	r6, r7, [sp]
 8004962:	2600      	movs	r6, #0
 8004964:	4632      	mov	r2, r6
 8004966:	463b      	mov	r3, r7
 8004968:	e9dd 0100 	ldrd	r0, r1, [sp]
 800496c:	f7fb fc8c 	bl	8000288 <__aeabi_dsub>
 8004970:	4622      	mov	r2, r4
 8004972:	462b      	mov	r3, r5
 8004974:	f7fb fe40 	bl	80005f8 <__aeabi_dmul>
 8004978:	e9dd 2300 	ldrd	r2, r3, [sp]
 800497c:	4680      	mov	r8, r0
 800497e:	4689      	mov	r9, r1
 8004980:	4650      	mov	r0, sl
 8004982:	4659      	mov	r1, fp
 8004984:	f7fb fe38 	bl	80005f8 <__aeabi_dmul>
 8004988:	4602      	mov	r2, r0
 800498a:	460b      	mov	r3, r1
 800498c:	4640      	mov	r0, r8
 800498e:	4649      	mov	r1, r9
 8004990:	f7fb fc7c 	bl	800028c <__adddf3>
 8004994:	4632      	mov	r2, r6
 8004996:	463b      	mov	r3, r7
 8004998:	4680      	mov	r8, r0
 800499a:	4689      	mov	r9, r1
 800499c:	4620      	mov	r0, r4
 800499e:	4629      	mov	r1, r5
 80049a0:	f7fb fe2a 	bl	80005f8 <__aeabi_dmul>
 80049a4:	460b      	mov	r3, r1
 80049a6:	4604      	mov	r4, r0
 80049a8:	460d      	mov	r5, r1
 80049aa:	4602      	mov	r2, r0
 80049ac:	4649      	mov	r1, r9
 80049ae:	4640      	mov	r0, r8
 80049b0:	f7fb fc6c 	bl	800028c <__adddf3>
 80049b4:	4b19      	ldr	r3, [pc, #100]	; (8004a1c <__ieee754_pow+0x3fc>)
 80049b6:	4299      	cmp	r1, r3
 80049b8:	ec45 4b19 	vmov	d9, r4, r5
 80049bc:	4606      	mov	r6, r0
 80049be:	460f      	mov	r7, r1
 80049c0:	468b      	mov	fp, r1
 80049c2:	f340 82f1 	ble.w	8004fa8 <__ieee754_pow+0x988>
 80049c6:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 80049ca:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 80049ce:	4303      	orrs	r3, r0
 80049d0:	f000 81e4 	beq.w	8004d9c <__ieee754_pow+0x77c>
 80049d4:	ec51 0b18 	vmov	r0, r1, d8
 80049d8:	2200      	movs	r2, #0
 80049da:	2300      	movs	r3, #0
 80049dc:	f7fc f87e 	bl	8000adc <__aeabi_dcmplt>
 80049e0:	3800      	subs	r0, #0
 80049e2:	bf18      	it	ne
 80049e4:	2001      	movne	r0, #1
 80049e6:	e72b      	b.n	8004840 <__ieee754_pow+0x220>
 80049e8:	60000000 	.word	0x60000000
 80049ec:	3ff71547 	.word	0x3ff71547
 80049f0:	f85ddf44 	.word	0xf85ddf44
 80049f4:	3e54ae0b 	.word	0x3e54ae0b
 80049f8:	55555555 	.word	0x55555555
 80049fc:	3fd55555 	.word	0x3fd55555
 8004a00:	652b82fe 	.word	0x652b82fe
 8004a04:	3ff71547 	.word	0x3ff71547
 8004a08:	00000000 	.word	0x00000000
 8004a0c:	bff00000 	.word	0xbff00000
 8004a10:	3ff00000 	.word	0x3ff00000
 8004a14:	3fd00000 	.word	0x3fd00000
 8004a18:	3fe00000 	.word	0x3fe00000
 8004a1c:	408fffff 	.word	0x408fffff
 8004a20:	4bd5      	ldr	r3, [pc, #852]	; (8004d78 <__ieee754_pow+0x758>)
 8004a22:	402b      	ands	r3, r5
 8004a24:	2200      	movs	r2, #0
 8004a26:	b92b      	cbnz	r3, 8004a34 <__ieee754_pow+0x414>
 8004a28:	4bd4      	ldr	r3, [pc, #848]	; (8004d7c <__ieee754_pow+0x75c>)
 8004a2a:	f7fb fde5 	bl	80005f8 <__aeabi_dmul>
 8004a2e:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8004a32:	460c      	mov	r4, r1
 8004a34:	1523      	asrs	r3, r4, #20
 8004a36:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8004a3a:	4413      	add	r3, r2
 8004a3c:	9305      	str	r3, [sp, #20]
 8004a3e:	4bd0      	ldr	r3, [pc, #832]	; (8004d80 <__ieee754_pow+0x760>)
 8004a40:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8004a44:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8004a48:	429c      	cmp	r4, r3
 8004a4a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8004a4e:	dd08      	ble.n	8004a62 <__ieee754_pow+0x442>
 8004a50:	4bcc      	ldr	r3, [pc, #816]	; (8004d84 <__ieee754_pow+0x764>)
 8004a52:	429c      	cmp	r4, r3
 8004a54:	f340 8162 	ble.w	8004d1c <__ieee754_pow+0x6fc>
 8004a58:	9b05      	ldr	r3, [sp, #20]
 8004a5a:	3301      	adds	r3, #1
 8004a5c:	9305      	str	r3, [sp, #20]
 8004a5e:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8004a62:	2400      	movs	r4, #0
 8004a64:	00e3      	lsls	r3, r4, #3
 8004a66:	9307      	str	r3, [sp, #28]
 8004a68:	4bc7      	ldr	r3, [pc, #796]	; (8004d88 <__ieee754_pow+0x768>)
 8004a6a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004a6e:	ed93 7b00 	vldr	d7, [r3]
 8004a72:	4629      	mov	r1, r5
 8004a74:	ec53 2b17 	vmov	r2, r3, d7
 8004a78:	eeb0 9a47 	vmov.f32	s18, s14
 8004a7c:	eef0 9a67 	vmov.f32	s19, s15
 8004a80:	4682      	mov	sl, r0
 8004a82:	f7fb fc01 	bl	8000288 <__aeabi_dsub>
 8004a86:	4652      	mov	r2, sl
 8004a88:	4606      	mov	r6, r0
 8004a8a:	460f      	mov	r7, r1
 8004a8c:	462b      	mov	r3, r5
 8004a8e:	ec51 0b19 	vmov	r0, r1, d9
 8004a92:	f7fb fbfb 	bl	800028c <__adddf3>
 8004a96:	4602      	mov	r2, r0
 8004a98:	460b      	mov	r3, r1
 8004a9a:	2000      	movs	r0, #0
 8004a9c:	49bb      	ldr	r1, [pc, #748]	; (8004d8c <__ieee754_pow+0x76c>)
 8004a9e:	f7fb fed5 	bl	800084c <__aeabi_ddiv>
 8004aa2:	ec41 0b1a 	vmov	d10, r0, r1
 8004aa6:	4602      	mov	r2, r0
 8004aa8:	460b      	mov	r3, r1
 8004aaa:	4630      	mov	r0, r6
 8004aac:	4639      	mov	r1, r7
 8004aae:	f7fb fda3 	bl	80005f8 <__aeabi_dmul>
 8004ab2:	2300      	movs	r3, #0
 8004ab4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004ab8:	9302      	str	r3, [sp, #8]
 8004aba:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8004abe:	46ab      	mov	fp, r5
 8004ac0:	106d      	asrs	r5, r5, #1
 8004ac2:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8004ac6:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 8004aca:	ec41 0b18 	vmov	d8, r0, r1
 8004ace:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8004ad2:	2200      	movs	r2, #0
 8004ad4:	4640      	mov	r0, r8
 8004ad6:	4649      	mov	r1, r9
 8004ad8:	4614      	mov	r4, r2
 8004ada:	461d      	mov	r5, r3
 8004adc:	f7fb fd8c 	bl	80005f8 <__aeabi_dmul>
 8004ae0:	4602      	mov	r2, r0
 8004ae2:	460b      	mov	r3, r1
 8004ae4:	4630      	mov	r0, r6
 8004ae6:	4639      	mov	r1, r7
 8004ae8:	f7fb fbce 	bl	8000288 <__aeabi_dsub>
 8004aec:	ec53 2b19 	vmov	r2, r3, d9
 8004af0:	4606      	mov	r6, r0
 8004af2:	460f      	mov	r7, r1
 8004af4:	4620      	mov	r0, r4
 8004af6:	4629      	mov	r1, r5
 8004af8:	f7fb fbc6 	bl	8000288 <__aeabi_dsub>
 8004afc:	4602      	mov	r2, r0
 8004afe:	460b      	mov	r3, r1
 8004b00:	4650      	mov	r0, sl
 8004b02:	4659      	mov	r1, fp
 8004b04:	f7fb fbc0 	bl	8000288 <__aeabi_dsub>
 8004b08:	4642      	mov	r2, r8
 8004b0a:	464b      	mov	r3, r9
 8004b0c:	f7fb fd74 	bl	80005f8 <__aeabi_dmul>
 8004b10:	4602      	mov	r2, r0
 8004b12:	460b      	mov	r3, r1
 8004b14:	4630      	mov	r0, r6
 8004b16:	4639      	mov	r1, r7
 8004b18:	f7fb fbb6 	bl	8000288 <__aeabi_dsub>
 8004b1c:	ec53 2b1a 	vmov	r2, r3, d10
 8004b20:	f7fb fd6a 	bl	80005f8 <__aeabi_dmul>
 8004b24:	ec53 2b18 	vmov	r2, r3, d8
 8004b28:	ec41 0b19 	vmov	d9, r0, r1
 8004b2c:	ec51 0b18 	vmov	r0, r1, d8
 8004b30:	f7fb fd62 	bl	80005f8 <__aeabi_dmul>
 8004b34:	a37c      	add	r3, pc, #496	; (adr r3, 8004d28 <__ieee754_pow+0x708>)
 8004b36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b3a:	4604      	mov	r4, r0
 8004b3c:	460d      	mov	r5, r1
 8004b3e:	f7fb fd5b 	bl	80005f8 <__aeabi_dmul>
 8004b42:	a37b      	add	r3, pc, #492	; (adr r3, 8004d30 <__ieee754_pow+0x710>)
 8004b44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b48:	f7fb fba0 	bl	800028c <__adddf3>
 8004b4c:	4622      	mov	r2, r4
 8004b4e:	462b      	mov	r3, r5
 8004b50:	f7fb fd52 	bl	80005f8 <__aeabi_dmul>
 8004b54:	a378      	add	r3, pc, #480	; (adr r3, 8004d38 <__ieee754_pow+0x718>)
 8004b56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b5a:	f7fb fb97 	bl	800028c <__adddf3>
 8004b5e:	4622      	mov	r2, r4
 8004b60:	462b      	mov	r3, r5
 8004b62:	f7fb fd49 	bl	80005f8 <__aeabi_dmul>
 8004b66:	a376      	add	r3, pc, #472	; (adr r3, 8004d40 <__ieee754_pow+0x720>)
 8004b68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b6c:	f7fb fb8e 	bl	800028c <__adddf3>
 8004b70:	4622      	mov	r2, r4
 8004b72:	462b      	mov	r3, r5
 8004b74:	f7fb fd40 	bl	80005f8 <__aeabi_dmul>
 8004b78:	a373      	add	r3, pc, #460	; (adr r3, 8004d48 <__ieee754_pow+0x728>)
 8004b7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b7e:	f7fb fb85 	bl	800028c <__adddf3>
 8004b82:	4622      	mov	r2, r4
 8004b84:	462b      	mov	r3, r5
 8004b86:	f7fb fd37 	bl	80005f8 <__aeabi_dmul>
 8004b8a:	a371      	add	r3, pc, #452	; (adr r3, 8004d50 <__ieee754_pow+0x730>)
 8004b8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b90:	f7fb fb7c 	bl	800028c <__adddf3>
 8004b94:	4622      	mov	r2, r4
 8004b96:	4606      	mov	r6, r0
 8004b98:	460f      	mov	r7, r1
 8004b9a:	462b      	mov	r3, r5
 8004b9c:	4620      	mov	r0, r4
 8004b9e:	4629      	mov	r1, r5
 8004ba0:	f7fb fd2a 	bl	80005f8 <__aeabi_dmul>
 8004ba4:	4602      	mov	r2, r0
 8004ba6:	460b      	mov	r3, r1
 8004ba8:	4630      	mov	r0, r6
 8004baa:	4639      	mov	r1, r7
 8004bac:	f7fb fd24 	bl	80005f8 <__aeabi_dmul>
 8004bb0:	4642      	mov	r2, r8
 8004bb2:	4604      	mov	r4, r0
 8004bb4:	460d      	mov	r5, r1
 8004bb6:	464b      	mov	r3, r9
 8004bb8:	ec51 0b18 	vmov	r0, r1, d8
 8004bbc:	f7fb fb66 	bl	800028c <__adddf3>
 8004bc0:	ec53 2b19 	vmov	r2, r3, d9
 8004bc4:	f7fb fd18 	bl	80005f8 <__aeabi_dmul>
 8004bc8:	4622      	mov	r2, r4
 8004bca:	462b      	mov	r3, r5
 8004bcc:	f7fb fb5e 	bl	800028c <__adddf3>
 8004bd0:	4642      	mov	r2, r8
 8004bd2:	4682      	mov	sl, r0
 8004bd4:	468b      	mov	fp, r1
 8004bd6:	464b      	mov	r3, r9
 8004bd8:	4640      	mov	r0, r8
 8004bda:	4649      	mov	r1, r9
 8004bdc:	f7fb fd0c 	bl	80005f8 <__aeabi_dmul>
 8004be0:	4b6b      	ldr	r3, [pc, #428]	; (8004d90 <__ieee754_pow+0x770>)
 8004be2:	2200      	movs	r2, #0
 8004be4:	4606      	mov	r6, r0
 8004be6:	460f      	mov	r7, r1
 8004be8:	f7fb fb50 	bl	800028c <__adddf3>
 8004bec:	4652      	mov	r2, sl
 8004bee:	465b      	mov	r3, fp
 8004bf0:	f7fb fb4c 	bl	800028c <__adddf3>
 8004bf4:	2000      	movs	r0, #0
 8004bf6:	4604      	mov	r4, r0
 8004bf8:	460d      	mov	r5, r1
 8004bfa:	4602      	mov	r2, r0
 8004bfc:	460b      	mov	r3, r1
 8004bfe:	4640      	mov	r0, r8
 8004c00:	4649      	mov	r1, r9
 8004c02:	f7fb fcf9 	bl	80005f8 <__aeabi_dmul>
 8004c06:	4b62      	ldr	r3, [pc, #392]	; (8004d90 <__ieee754_pow+0x770>)
 8004c08:	4680      	mov	r8, r0
 8004c0a:	4689      	mov	r9, r1
 8004c0c:	2200      	movs	r2, #0
 8004c0e:	4620      	mov	r0, r4
 8004c10:	4629      	mov	r1, r5
 8004c12:	f7fb fb39 	bl	8000288 <__aeabi_dsub>
 8004c16:	4632      	mov	r2, r6
 8004c18:	463b      	mov	r3, r7
 8004c1a:	f7fb fb35 	bl	8000288 <__aeabi_dsub>
 8004c1e:	4602      	mov	r2, r0
 8004c20:	460b      	mov	r3, r1
 8004c22:	4650      	mov	r0, sl
 8004c24:	4659      	mov	r1, fp
 8004c26:	f7fb fb2f 	bl	8000288 <__aeabi_dsub>
 8004c2a:	ec53 2b18 	vmov	r2, r3, d8
 8004c2e:	f7fb fce3 	bl	80005f8 <__aeabi_dmul>
 8004c32:	4622      	mov	r2, r4
 8004c34:	4606      	mov	r6, r0
 8004c36:	460f      	mov	r7, r1
 8004c38:	462b      	mov	r3, r5
 8004c3a:	ec51 0b19 	vmov	r0, r1, d9
 8004c3e:	f7fb fcdb 	bl	80005f8 <__aeabi_dmul>
 8004c42:	4602      	mov	r2, r0
 8004c44:	460b      	mov	r3, r1
 8004c46:	4630      	mov	r0, r6
 8004c48:	4639      	mov	r1, r7
 8004c4a:	f7fb fb1f 	bl	800028c <__adddf3>
 8004c4e:	4606      	mov	r6, r0
 8004c50:	460f      	mov	r7, r1
 8004c52:	4602      	mov	r2, r0
 8004c54:	460b      	mov	r3, r1
 8004c56:	4640      	mov	r0, r8
 8004c58:	4649      	mov	r1, r9
 8004c5a:	f7fb fb17 	bl	800028c <__adddf3>
 8004c5e:	a33e      	add	r3, pc, #248	; (adr r3, 8004d58 <__ieee754_pow+0x738>)
 8004c60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c64:	2000      	movs	r0, #0
 8004c66:	4604      	mov	r4, r0
 8004c68:	460d      	mov	r5, r1
 8004c6a:	f7fb fcc5 	bl	80005f8 <__aeabi_dmul>
 8004c6e:	4642      	mov	r2, r8
 8004c70:	ec41 0b18 	vmov	d8, r0, r1
 8004c74:	464b      	mov	r3, r9
 8004c76:	4620      	mov	r0, r4
 8004c78:	4629      	mov	r1, r5
 8004c7a:	f7fb fb05 	bl	8000288 <__aeabi_dsub>
 8004c7e:	4602      	mov	r2, r0
 8004c80:	460b      	mov	r3, r1
 8004c82:	4630      	mov	r0, r6
 8004c84:	4639      	mov	r1, r7
 8004c86:	f7fb faff 	bl	8000288 <__aeabi_dsub>
 8004c8a:	a335      	add	r3, pc, #212	; (adr r3, 8004d60 <__ieee754_pow+0x740>)
 8004c8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c90:	f7fb fcb2 	bl	80005f8 <__aeabi_dmul>
 8004c94:	a334      	add	r3, pc, #208	; (adr r3, 8004d68 <__ieee754_pow+0x748>)
 8004c96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c9a:	4606      	mov	r6, r0
 8004c9c:	460f      	mov	r7, r1
 8004c9e:	4620      	mov	r0, r4
 8004ca0:	4629      	mov	r1, r5
 8004ca2:	f7fb fca9 	bl	80005f8 <__aeabi_dmul>
 8004ca6:	4602      	mov	r2, r0
 8004ca8:	460b      	mov	r3, r1
 8004caa:	4630      	mov	r0, r6
 8004cac:	4639      	mov	r1, r7
 8004cae:	f7fb faed 	bl	800028c <__adddf3>
 8004cb2:	9a07      	ldr	r2, [sp, #28]
 8004cb4:	4b37      	ldr	r3, [pc, #220]	; (8004d94 <__ieee754_pow+0x774>)
 8004cb6:	4413      	add	r3, r2
 8004cb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004cbc:	f7fb fae6 	bl	800028c <__adddf3>
 8004cc0:	4682      	mov	sl, r0
 8004cc2:	9805      	ldr	r0, [sp, #20]
 8004cc4:	468b      	mov	fp, r1
 8004cc6:	f7fb fc2d 	bl	8000524 <__aeabi_i2d>
 8004cca:	9a07      	ldr	r2, [sp, #28]
 8004ccc:	4b32      	ldr	r3, [pc, #200]	; (8004d98 <__ieee754_pow+0x778>)
 8004cce:	4413      	add	r3, r2
 8004cd0:	e9d3 8900 	ldrd	r8, r9, [r3]
 8004cd4:	4606      	mov	r6, r0
 8004cd6:	460f      	mov	r7, r1
 8004cd8:	4652      	mov	r2, sl
 8004cda:	465b      	mov	r3, fp
 8004cdc:	ec51 0b18 	vmov	r0, r1, d8
 8004ce0:	f7fb fad4 	bl	800028c <__adddf3>
 8004ce4:	4642      	mov	r2, r8
 8004ce6:	464b      	mov	r3, r9
 8004ce8:	f7fb fad0 	bl	800028c <__adddf3>
 8004cec:	4632      	mov	r2, r6
 8004cee:	463b      	mov	r3, r7
 8004cf0:	f7fb facc 	bl	800028c <__adddf3>
 8004cf4:	2000      	movs	r0, #0
 8004cf6:	4632      	mov	r2, r6
 8004cf8:	463b      	mov	r3, r7
 8004cfa:	4604      	mov	r4, r0
 8004cfc:	460d      	mov	r5, r1
 8004cfe:	f7fb fac3 	bl	8000288 <__aeabi_dsub>
 8004d02:	4642      	mov	r2, r8
 8004d04:	464b      	mov	r3, r9
 8004d06:	f7fb fabf 	bl	8000288 <__aeabi_dsub>
 8004d0a:	ec53 2b18 	vmov	r2, r3, d8
 8004d0e:	f7fb fabb 	bl	8000288 <__aeabi_dsub>
 8004d12:	4602      	mov	r2, r0
 8004d14:	460b      	mov	r3, r1
 8004d16:	4650      	mov	r0, sl
 8004d18:	4659      	mov	r1, fp
 8004d1a:	e610      	b.n	800493e <__ieee754_pow+0x31e>
 8004d1c:	2401      	movs	r4, #1
 8004d1e:	e6a1      	b.n	8004a64 <__ieee754_pow+0x444>
 8004d20:	ed9f 7b13 	vldr	d7, [pc, #76]	; 8004d70 <__ieee754_pow+0x750>
 8004d24:	e617      	b.n	8004956 <__ieee754_pow+0x336>
 8004d26:	bf00      	nop
 8004d28:	4a454eef 	.word	0x4a454eef
 8004d2c:	3fca7e28 	.word	0x3fca7e28
 8004d30:	93c9db65 	.word	0x93c9db65
 8004d34:	3fcd864a 	.word	0x3fcd864a
 8004d38:	a91d4101 	.word	0xa91d4101
 8004d3c:	3fd17460 	.word	0x3fd17460
 8004d40:	518f264d 	.word	0x518f264d
 8004d44:	3fd55555 	.word	0x3fd55555
 8004d48:	db6fabff 	.word	0xdb6fabff
 8004d4c:	3fdb6db6 	.word	0x3fdb6db6
 8004d50:	33333303 	.word	0x33333303
 8004d54:	3fe33333 	.word	0x3fe33333
 8004d58:	e0000000 	.word	0xe0000000
 8004d5c:	3feec709 	.word	0x3feec709
 8004d60:	dc3a03fd 	.word	0xdc3a03fd
 8004d64:	3feec709 	.word	0x3feec709
 8004d68:	145b01f5 	.word	0x145b01f5
 8004d6c:	be3e2fe0 	.word	0xbe3e2fe0
 8004d70:	00000000 	.word	0x00000000
 8004d74:	3ff00000 	.word	0x3ff00000
 8004d78:	7ff00000 	.word	0x7ff00000
 8004d7c:	43400000 	.word	0x43400000
 8004d80:	0003988e 	.word	0x0003988e
 8004d84:	000bb679 	.word	0x000bb679
 8004d88:	08005848 	.word	0x08005848
 8004d8c:	3ff00000 	.word	0x3ff00000
 8004d90:	40080000 	.word	0x40080000
 8004d94:	08005868 	.word	0x08005868
 8004d98:	08005858 	.word	0x08005858
 8004d9c:	a3b5      	add	r3, pc, #724	; (adr r3, 8005074 <__ieee754_pow+0xa54>)
 8004d9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004da2:	4640      	mov	r0, r8
 8004da4:	4649      	mov	r1, r9
 8004da6:	f7fb fa71 	bl	800028c <__adddf3>
 8004daa:	4622      	mov	r2, r4
 8004dac:	ec41 0b1a 	vmov	d10, r0, r1
 8004db0:	462b      	mov	r3, r5
 8004db2:	4630      	mov	r0, r6
 8004db4:	4639      	mov	r1, r7
 8004db6:	f7fb fa67 	bl	8000288 <__aeabi_dsub>
 8004dba:	4602      	mov	r2, r0
 8004dbc:	460b      	mov	r3, r1
 8004dbe:	ec51 0b1a 	vmov	r0, r1, d10
 8004dc2:	f7fb fea9 	bl	8000b18 <__aeabi_dcmpgt>
 8004dc6:	2800      	cmp	r0, #0
 8004dc8:	f47f ae04 	bne.w	80049d4 <__ieee754_pow+0x3b4>
 8004dcc:	4aa4      	ldr	r2, [pc, #656]	; (8005060 <__ieee754_pow+0xa40>)
 8004dce:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8004dd2:	4293      	cmp	r3, r2
 8004dd4:	f340 8108 	ble.w	8004fe8 <__ieee754_pow+0x9c8>
 8004dd8:	151b      	asrs	r3, r3, #20
 8004dda:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8004dde:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8004de2:	fa4a f303 	asr.w	r3, sl, r3
 8004de6:	445b      	add	r3, fp
 8004de8:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8004dec:	4e9d      	ldr	r6, [pc, #628]	; (8005064 <__ieee754_pow+0xa44>)
 8004dee:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 8004df2:	4116      	asrs	r6, r2
 8004df4:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8004df8:	2000      	movs	r0, #0
 8004dfa:	ea23 0106 	bic.w	r1, r3, r6
 8004dfe:	f1c2 0214 	rsb	r2, r2, #20
 8004e02:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8004e06:	fa4a fa02 	asr.w	sl, sl, r2
 8004e0a:	f1bb 0f00 	cmp.w	fp, #0
 8004e0e:	4602      	mov	r2, r0
 8004e10:	460b      	mov	r3, r1
 8004e12:	4620      	mov	r0, r4
 8004e14:	4629      	mov	r1, r5
 8004e16:	bfb8      	it	lt
 8004e18:	f1ca 0a00 	rsblt	sl, sl, #0
 8004e1c:	f7fb fa34 	bl	8000288 <__aeabi_dsub>
 8004e20:	ec41 0b19 	vmov	d9, r0, r1
 8004e24:	4642      	mov	r2, r8
 8004e26:	464b      	mov	r3, r9
 8004e28:	ec51 0b19 	vmov	r0, r1, d9
 8004e2c:	f7fb fa2e 	bl	800028c <__adddf3>
 8004e30:	a37b      	add	r3, pc, #492	; (adr r3, 8005020 <__ieee754_pow+0xa00>)
 8004e32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e36:	2000      	movs	r0, #0
 8004e38:	4604      	mov	r4, r0
 8004e3a:	460d      	mov	r5, r1
 8004e3c:	f7fb fbdc 	bl	80005f8 <__aeabi_dmul>
 8004e40:	ec53 2b19 	vmov	r2, r3, d9
 8004e44:	4606      	mov	r6, r0
 8004e46:	460f      	mov	r7, r1
 8004e48:	4620      	mov	r0, r4
 8004e4a:	4629      	mov	r1, r5
 8004e4c:	f7fb fa1c 	bl	8000288 <__aeabi_dsub>
 8004e50:	4602      	mov	r2, r0
 8004e52:	460b      	mov	r3, r1
 8004e54:	4640      	mov	r0, r8
 8004e56:	4649      	mov	r1, r9
 8004e58:	f7fb fa16 	bl	8000288 <__aeabi_dsub>
 8004e5c:	a372      	add	r3, pc, #456	; (adr r3, 8005028 <__ieee754_pow+0xa08>)
 8004e5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e62:	f7fb fbc9 	bl	80005f8 <__aeabi_dmul>
 8004e66:	a372      	add	r3, pc, #456	; (adr r3, 8005030 <__ieee754_pow+0xa10>)
 8004e68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e6c:	4680      	mov	r8, r0
 8004e6e:	4689      	mov	r9, r1
 8004e70:	4620      	mov	r0, r4
 8004e72:	4629      	mov	r1, r5
 8004e74:	f7fb fbc0 	bl	80005f8 <__aeabi_dmul>
 8004e78:	4602      	mov	r2, r0
 8004e7a:	460b      	mov	r3, r1
 8004e7c:	4640      	mov	r0, r8
 8004e7e:	4649      	mov	r1, r9
 8004e80:	f7fb fa04 	bl	800028c <__adddf3>
 8004e84:	4604      	mov	r4, r0
 8004e86:	460d      	mov	r5, r1
 8004e88:	4602      	mov	r2, r0
 8004e8a:	460b      	mov	r3, r1
 8004e8c:	4630      	mov	r0, r6
 8004e8e:	4639      	mov	r1, r7
 8004e90:	f7fb f9fc 	bl	800028c <__adddf3>
 8004e94:	4632      	mov	r2, r6
 8004e96:	463b      	mov	r3, r7
 8004e98:	4680      	mov	r8, r0
 8004e9a:	4689      	mov	r9, r1
 8004e9c:	f7fb f9f4 	bl	8000288 <__aeabi_dsub>
 8004ea0:	4602      	mov	r2, r0
 8004ea2:	460b      	mov	r3, r1
 8004ea4:	4620      	mov	r0, r4
 8004ea6:	4629      	mov	r1, r5
 8004ea8:	f7fb f9ee 	bl	8000288 <__aeabi_dsub>
 8004eac:	4642      	mov	r2, r8
 8004eae:	4606      	mov	r6, r0
 8004eb0:	460f      	mov	r7, r1
 8004eb2:	464b      	mov	r3, r9
 8004eb4:	4640      	mov	r0, r8
 8004eb6:	4649      	mov	r1, r9
 8004eb8:	f7fb fb9e 	bl	80005f8 <__aeabi_dmul>
 8004ebc:	a35e      	add	r3, pc, #376	; (adr r3, 8005038 <__ieee754_pow+0xa18>)
 8004ebe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ec2:	4604      	mov	r4, r0
 8004ec4:	460d      	mov	r5, r1
 8004ec6:	f7fb fb97 	bl	80005f8 <__aeabi_dmul>
 8004eca:	a35d      	add	r3, pc, #372	; (adr r3, 8005040 <__ieee754_pow+0xa20>)
 8004ecc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ed0:	f7fb f9da 	bl	8000288 <__aeabi_dsub>
 8004ed4:	4622      	mov	r2, r4
 8004ed6:	462b      	mov	r3, r5
 8004ed8:	f7fb fb8e 	bl	80005f8 <__aeabi_dmul>
 8004edc:	a35a      	add	r3, pc, #360	; (adr r3, 8005048 <__ieee754_pow+0xa28>)
 8004ede:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ee2:	f7fb f9d3 	bl	800028c <__adddf3>
 8004ee6:	4622      	mov	r2, r4
 8004ee8:	462b      	mov	r3, r5
 8004eea:	f7fb fb85 	bl	80005f8 <__aeabi_dmul>
 8004eee:	a358      	add	r3, pc, #352	; (adr r3, 8005050 <__ieee754_pow+0xa30>)
 8004ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ef4:	f7fb f9c8 	bl	8000288 <__aeabi_dsub>
 8004ef8:	4622      	mov	r2, r4
 8004efa:	462b      	mov	r3, r5
 8004efc:	f7fb fb7c 	bl	80005f8 <__aeabi_dmul>
 8004f00:	a355      	add	r3, pc, #340	; (adr r3, 8005058 <__ieee754_pow+0xa38>)
 8004f02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f06:	f7fb f9c1 	bl	800028c <__adddf3>
 8004f0a:	4622      	mov	r2, r4
 8004f0c:	462b      	mov	r3, r5
 8004f0e:	f7fb fb73 	bl	80005f8 <__aeabi_dmul>
 8004f12:	4602      	mov	r2, r0
 8004f14:	460b      	mov	r3, r1
 8004f16:	4640      	mov	r0, r8
 8004f18:	4649      	mov	r1, r9
 8004f1a:	f7fb f9b5 	bl	8000288 <__aeabi_dsub>
 8004f1e:	4604      	mov	r4, r0
 8004f20:	460d      	mov	r5, r1
 8004f22:	4602      	mov	r2, r0
 8004f24:	460b      	mov	r3, r1
 8004f26:	4640      	mov	r0, r8
 8004f28:	4649      	mov	r1, r9
 8004f2a:	f7fb fb65 	bl	80005f8 <__aeabi_dmul>
 8004f2e:	2200      	movs	r2, #0
 8004f30:	ec41 0b19 	vmov	d9, r0, r1
 8004f34:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004f38:	4620      	mov	r0, r4
 8004f3a:	4629      	mov	r1, r5
 8004f3c:	f7fb f9a4 	bl	8000288 <__aeabi_dsub>
 8004f40:	4602      	mov	r2, r0
 8004f42:	460b      	mov	r3, r1
 8004f44:	ec51 0b19 	vmov	r0, r1, d9
 8004f48:	f7fb fc80 	bl	800084c <__aeabi_ddiv>
 8004f4c:	4632      	mov	r2, r6
 8004f4e:	4604      	mov	r4, r0
 8004f50:	460d      	mov	r5, r1
 8004f52:	463b      	mov	r3, r7
 8004f54:	4640      	mov	r0, r8
 8004f56:	4649      	mov	r1, r9
 8004f58:	f7fb fb4e 	bl	80005f8 <__aeabi_dmul>
 8004f5c:	4632      	mov	r2, r6
 8004f5e:	463b      	mov	r3, r7
 8004f60:	f7fb f994 	bl	800028c <__adddf3>
 8004f64:	4602      	mov	r2, r0
 8004f66:	460b      	mov	r3, r1
 8004f68:	4620      	mov	r0, r4
 8004f6a:	4629      	mov	r1, r5
 8004f6c:	f7fb f98c 	bl	8000288 <__aeabi_dsub>
 8004f70:	4642      	mov	r2, r8
 8004f72:	464b      	mov	r3, r9
 8004f74:	f7fb f988 	bl	8000288 <__aeabi_dsub>
 8004f78:	460b      	mov	r3, r1
 8004f7a:	4602      	mov	r2, r0
 8004f7c:	493a      	ldr	r1, [pc, #232]	; (8005068 <__ieee754_pow+0xa48>)
 8004f7e:	2000      	movs	r0, #0
 8004f80:	f7fb f982 	bl	8000288 <__aeabi_dsub>
 8004f84:	ec41 0b10 	vmov	d0, r0, r1
 8004f88:	ee10 3a90 	vmov	r3, s1
 8004f8c:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 8004f90:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004f94:	da2b      	bge.n	8004fee <__ieee754_pow+0x9ce>
 8004f96:	4650      	mov	r0, sl
 8004f98:	f000 fb06 	bl	80055a8 <scalbn>
 8004f9c:	ec51 0b10 	vmov	r0, r1, d0
 8004fa0:	ec53 2b18 	vmov	r2, r3, d8
 8004fa4:	f7ff bbed 	b.w	8004782 <__ieee754_pow+0x162>
 8004fa8:	4b30      	ldr	r3, [pc, #192]	; (800506c <__ieee754_pow+0xa4c>)
 8004faa:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8004fae:	429e      	cmp	r6, r3
 8004fb0:	f77f af0c 	ble.w	8004dcc <__ieee754_pow+0x7ac>
 8004fb4:	4b2e      	ldr	r3, [pc, #184]	; (8005070 <__ieee754_pow+0xa50>)
 8004fb6:	440b      	add	r3, r1
 8004fb8:	4303      	orrs	r3, r0
 8004fba:	d009      	beq.n	8004fd0 <__ieee754_pow+0x9b0>
 8004fbc:	ec51 0b18 	vmov	r0, r1, d8
 8004fc0:	2200      	movs	r2, #0
 8004fc2:	2300      	movs	r3, #0
 8004fc4:	f7fb fd8a 	bl	8000adc <__aeabi_dcmplt>
 8004fc8:	3800      	subs	r0, #0
 8004fca:	bf18      	it	ne
 8004fcc:	2001      	movne	r0, #1
 8004fce:	e447      	b.n	8004860 <__ieee754_pow+0x240>
 8004fd0:	4622      	mov	r2, r4
 8004fd2:	462b      	mov	r3, r5
 8004fd4:	f7fb f958 	bl	8000288 <__aeabi_dsub>
 8004fd8:	4642      	mov	r2, r8
 8004fda:	464b      	mov	r3, r9
 8004fdc:	f7fb fd92 	bl	8000b04 <__aeabi_dcmpge>
 8004fe0:	2800      	cmp	r0, #0
 8004fe2:	f43f aef3 	beq.w	8004dcc <__ieee754_pow+0x7ac>
 8004fe6:	e7e9      	b.n	8004fbc <__ieee754_pow+0x99c>
 8004fe8:	f04f 0a00 	mov.w	sl, #0
 8004fec:	e71a      	b.n	8004e24 <__ieee754_pow+0x804>
 8004fee:	ec51 0b10 	vmov	r0, r1, d0
 8004ff2:	4619      	mov	r1, r3
 8004ff4:	e7d4      	b.n	8004fa0 <__ieee754_pow+0x980>
 8004ff6:	491c      	ldr	r1, [pc, #112]	; (8005068 <__ieee754_pow+0xa48>)
 8004ff8:	2000      	movs	r0, #0
 8004ffa:	f7ff bb30 	b.w	800465e <__ieee754_pow+0x3e>
 8004ffe:	2000      	movs	r0, #0
 8005000:	2100      	movs	r1, #0
 8005002:	f7ff bb2c 	b.w	800465e <__ieee754_pow+0x3e>
 8005006:	4630      	mov	r0, r6
 8005008:	4639      	mov	r1, r7
 800500a:	f7ff bb28 	b.w	800465e <__ieee754_pow+0x3e>
 800500e:	9204      	str	r2, [sp, #16]
 8005010:	f7ff bb7a 	b.w	8004708 <__ieee754_pow+0xe8>
 8005014:	2300      	movs	r3, #0
 8005016:	f7ff bb64 	b.w	80046e2 <__ieee754_pow+0xc2>
 800501a:	bf00      	nop
 800501c:	f3af 8000 	nop.w
 8005020:	00000000 	.word	0x00000000
 8005024:	3fe62e43 	.word	0x3fe62e43
 8005028:	fefa39ef 	.word	0xfefa39ef
 800502c:	3fe62e42 	.word	0x3fe62e42
 8005030:	0ca86c39 	.word	0x0ca86c39
 8005034:	be205c61 	.word	0xbe205c61
 8005038:	72bea4d0 	.word	0x72bea4d0
 800503c:	3e663769 	.word	0x3e663769
 8005040:	c5d26bf1 	.word	0xc5d26bf1
 8005044:	3ebbbd41 	.word	0x3ebbbd41
 8005048:	af25de2c 	.word	0xaf25de2c
 800504c:	3f11566a 	.word	0x3f11566a
 8005050:	16bebd93 	.word	0x16bebd93
 8005054:	3f66c16c 	.word	0x3f66c16c
 8005058:	5555553e 	.word	0x5555553e
 800505c:	3fc55555 	.word	0x3fc55555
 8005060:	3fe00000 	.word	0x3fe00000
 8005064:	000fffff 	.word	0x000fffff
 8005068:	3ff00000 	.word	0x3ff00000
 800506c:	4090cbff 	.word	0x4090cbff
 8005070:	3f6f3400 	.word	0x3f6f3400
 8005074:	652b82fe 	.word	0x652b82fe
 8005078:	3c971547 	.word	0x3c971547

0800507c <__ieee754_sqrt>:
 800507c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005080:	ec55 4b10 	vmov	r4, r5, d0
 8005084:	4e55      	ldr	r6, [pc, #340]	; (80051dc <__ieee754_sqrt+0x160>)
 8005086:	43ae      	bics	r6, r5
 8005088:	ee10 0a10 	vmov	r0, s0
 800508c:	ee10 3a10 	vmov	r3, s0
 8005090:	462a      	mov	r2, r5
 8005092:	4629      	mov	r1, r5
 8005094:	d110      	bne.n	80050b8 <__ieee754_sqrt+0x3c>
 8005096:	ee10 2a10 	vmov	r2, s0
 800509a:	462b      	mov	r3, r5
 800509c:	f7fb faac 	bl	80005f8 <__aeabi_dmul>
 80050a0:	4602      	mov	r2, r0
 80050a2:	460b      	mov	r3, r1
 80050a4:	4620      	mov	r0, r4
 80050a6:	4629      	mov	r1, r5
 80050a8:	f7fb f8f0 	bl	800028c <__adddf3>
 80050ac:	4604      	mov	r4, r0
 80050ae:	460d      	mov	r5, r1
 80050b0:	ec45 4b10 	vmov	d0, r4, r5
 80050b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80050b8:	2d00      	cmp	r5, #0
 80050ba:	dc10      	bgt.n	80050de <__ieee754_sqrt+0x62>
 80050bc:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80050c0:	4330      	orrs	r0, r6
 80050c2:	d0f5      	beq.n	80050b0 <__ieee754_sqrt+0x34>
 80050c4:	b15d      	cbz	r5, 80050de <__ieee754_sqrt+0x62>
 80050c6:	ee10 2a10 	vmov	r2, s0
 80050ca:	462b      	mov	r3, r5
 80050cc:	ee10 0a10 	vmov	r0, s0
 80050d0:	f7fb f8da 	bl	8000288 <__aeabi_dsub>
 80050d4:	4602      	mov	r2, r0
 80050d6:	460b      	mov	r3, r1
 80050d8:	f7fb fbb8 	bl	800084c <__aeabi_ddiv>
 80050dc:	e7e6      	b.n	80050ac <__ieee754_sqrt+0x30>
 80050de:	1512      	asrs	r2, r2, #20
 80050e0:	d074      	beq.n	80051cc <__ieee754_sqrt+0x150>
 80050e2:	07d4      	lsls	r4, r2, #31
 80050e4:	f3c1 0113 	ubfx	r1, r1, #0, #20
 80050e8:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 80050ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80050f0:	bf5e      	ittt	pl
 80050f2:	0fda      	lsrpl	r2, r3, #31
 80050f4:	005b      	lslpl	r3, r3, #1
 80050f6:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 80050fa:	2400      	movs	r4, #0
 80050fc:	0fda      	lsrs	r2, r3, #31
 80050fe:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8005102:	107f      	asrs	r7, r7, #1
 8005104:	005b      	lsls	r3, r3, #1
 8005106:	2516      	movs	r5, #22
 8005108:	4620      	mov	r0, r4
 800510a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800510e:	1886      	adds	r6, r0, r2
 8005110:	428e      	cmp	r6, r1
 8005112:	bfde      	ittt	le
 8005114:	1b89      	suble	r1, r1, r6
 8005116:	18b0      	addle	r0, r6, r2
 8005118:	18a4      	addle	r4, r4, r2
 800511a:	0049      	lsls	r1, r1, #1
 800511c:	3d01      	subs	r5, #1
 800511e:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 8005122:	ea4f 0252 	mov.w	r2, r2, lsr #1
 8005126:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800512a:	d1f0      	bne.n	800510e <__ieee754_sqrt+0x92>
 800512c:	462a      	mov	r2, r5
 800512e:	f04f 0e20 	mov.w	lr, #32
 8005132:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8005136:	4281      	cmp	r1, r0
 8005138:	eb06 0c05 	add.w	ip, r6, r5
 800513c:	dc02      	bgt.n	8005144 <__ieee754_sqrt+0xc8>
 800513e:	d113      	bne.n	8005168 <__ieee754_sqrt+0xec>
 8005140:	459c      	cmp	ip, r3
 8005142:	d811      	bhi.n	8005168 <__ieee754_sqrt+0xec>
 8005144:	f1bc 0f00 	cmp.w	ip, #0
 8005148:	eb0c 0506 	add.w	r5, ip, r6
 800514c:	da43      	bge.n	80051d6 <__ieee754_sqrt+0x15a>
 800514e:	2d00      	cmp	r5, #0
 8005150:	db41      	blt.n	80051d6 <__ieee754_sqrt+0x15a>
 8005152:	f100 0801 	add.w	r8, r0, #1
 8005156:	1a09      	subs	r1, r1, r0
 8005158:	459c      	cmp	ip, r3
 800515a:	bf88      	it	hi
 800515c:	f101 31ff 	addhi.w	r1, r1, #4294967295
 8005160:	eba3 030c 	sub.w	r3, r3, ip
 8005164:	4432      	add	r2, r6
 8005166:	4640      	mov	r0, r8
 8005168:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 800516c:	f1be 0e01 	subs.w	lr, lr, #1
 8005170:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 8005174:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8005178:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800517c:	d1db      	bne.n	8005136 <__ieee754_sqrt+0xba>
 800517e:	430b      	orrs	r3, r1
 8005180:	d006      	beq.n	8005190 <__ieee754_sqrt+0x114>
 8005182:	1c50      	adds	r0, r2, #1
 8005184:	bf13      	iteet	ne
 8005186:	3201      	addne	r2, #1
 8005188:	3401      	addeq	r4, #1
 800518a:	4672      	moveq	r2, lr
 800518c:	f022 0201 	bicne.w	r2, r2, #1
 8005190:	1063      	asrs	r3, r4, #1
 8005192:	0852      	lsrs	r2, r2, #1
 8005194:	07e1      	lsls	r1, r4, #31
 8005196:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 800519a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 800519e:	bf48      	it	mi
 80051a0:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 80051a4:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 80051a8:	4614      	mov	r4, r2
 80051aa:	e781      	b.n	80050b0 <__ieee754_sqrt+0x34>
 80051ac:	0ad9      	lsrs	r1, r3, #11
 80051ae:	3815      	subs	r0, #21
 80051b0:	055b      	lsls	r3, r3, #21
 80051b2:	2900      	cmp	r1, #0
 80051b4:	d0fa      	beq.n	80051ac <__ieee754_sqrt+0x130>
 80051b6:	02cd      	lsls	r5, r1, #11
 80051b8:	d50a      	bpl.n	80051d0 <__ieee754_sqrt+0x154>
 80051ba:	f1c2 0420 	rsb	r4, r2, #32
 80051be:	fa23 f404 	lsr.w	r4, r3, r4
 80051c2:	1e55      	subs	r5, r2, #1
 80051c4:	4093      	lsls	r3, r2
 80051c6:	4321      	orrs	r1, r4
 80051c8:	1b42      	subs	r2, r0, r5
 80051ca:	e78a      	b.n	80050e2 <__ieee754_sqrt+0x66>
 80051cc:	4610      	mov	r0, r2
 80051ce:	e7f0      	b.n	80051b2 <__ieee754_sqrt+0x136>
 80051d0:	0049      	lsls	r1, r1, #1
 80051d2:	3201      	adds	r2, #1
 80051d4:	e7ef      	b.n	80051b6 <__ieee754_sqrt+0x13a>
 80051d6:	4680      	mov	r8, r0
 80051d8:	e7bd      	b.n	8005156 <__ieee754_sqrt+0xda>
 80051da:	bf00      	nop
 80051dc:	7ff00000 	.word	0x7ff00000

080051e0 <with_errno>:
 80051e0:	b570      	push	{r4, r5, r6, lr}
 80051e2:	4604      	mov	r4, r0
 80051e4:	460d      	mov	r5, r1
 80051e6:	4616      	mov	r6, r2
 80051e8:	f7fe f844 	bl	8003274 <__errno>
 80051ec:	4629      	mov	r1, r5
 80051ee:	6006      	str	r6, [r0, #0]
 80051f0:	4620      	mov	r0, r4
 80051f2:	bd70      	pop	{r4, r5, r6, pc}

080051f4 <xflow>:
 80051f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80051f6:	4614      	mov	r4, r2
 80051f8:	461d      	mov	r5, r3
 80051fa:	b108      	cbz	r0, 8005200 <xflow+0xc>
 80051fc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8005200:	e9cd 2300 	strd	r2, r3, [sp]
 8005204:	e9dd 2300 	ldrd	r2, r3, [sp]
 8005208:	4620      	mov	r0, r4
 800520a:	4629      	mov	r1, r5
 800520c:	f7fb f9f4 	bl	80005f8 <__aeabi_dmul>
 8005210:	2222      	movs	r2, #34	; 0x22
 8005212:	b003      	add	sp, #12
 8005214:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005218:	f7ff bfe2 	b.w	80051e0 <with_errno>

0800521c <__math_uflow>:
 800521c:	b508      	push	{r3, lr}
 800521e:	2200      	movs	r2, #0
 8005220:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8005224:	f7ff ffe6 	bl	80051f4 <xflow>
 8005228:	ec41 0b10 	vmov	d0, r0, r1
 800522c:	bd08      	pop	{r3, pc}

0800522e <__math_oflow>:
 800522e:	b508      	push	{r3, lr}
 8005230:	2200      	movs	r2, #0
 8005232:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8005236:	f7ff ffdd 	bl	80051f4 <xflow>
 800523a:	ec41 0b10 	vmov	d0, r0, r1
 800523e:	bd08      	pop	{r3, pc}

08005240 <atan>:
 8005240:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005244:	ec55 4b10 	vmov	r4, r5, d0
 8005248:	4bc3      	ldr	r3, [pc, #780]	; (8005558 <atan+0x318>)
 800524a:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800524e:	429e      	cmp	r6, r3
 8005250:	46ab      	mov	fp, r5
 8005252:	dd18      	ble.n	8005286 <atan+0x46>
 8005254:	4bc1      	ldr	r3, [pc, #772]	; (800555c <atan+0x31c>)
 8005256:	429e      	cmp	r6, r3
 8005258:	dc01      	bgt.n	800525e <atan+0x1e>
 800525a:	d109      	bne.n	8005270 <atan+0x30>
 800525c:	b144      	cbz	r4, 8005270 <atan+0x30>
 800525e:	4622      	mov	r2, r4
 8005260:	462b      	mov	r3, r5
 8005262:	4620      	mov	r0, r4
 8005264:	4629      	mov	r1, r5
 8005266:	f7fb f811 	bl	800028c <__adddf3>
 800526a:	4604      	mov	r4, r0
 800526c:	460d      	mov	r5, r1
 800526e:	e006      	b.n	800527e <atan+0x3e>
 8005270:	f1bb 0f00 	cmp.w	fp, #0
 8005274:	f300 8131 	bgt.w	80054da <atan+0x29a>
 8005278:	a59b      	add	r5, pc, #620	; (adr r5, 80054e8 <atan+0x2a8>)
 800527a:	e9d5 4500 	ldrd	r4, r5, [r5]
 800527e:	ec45 4b10 	vmov	d0, r4, r5
 8005282:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005286:	4bb6      	ldr	r3, [pc, #728]	; (8005560 <atan+0x320>)
 8005288:	429e      	cmp	r6, r3
 800528a:	dc14      	bgt.n	80052b6 <atan+0x76>
 800528c:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8005290:	429e      	cmp	r6, r3
 8005292:	dc0d      	bgt.n	80052b0 <atan+0x70>
 8005294:	a396      	add	r3, pc, #600	; (adr r3, 80054f0 <atan+0x2b0>)
 8005296:	e9d3 2300 	ldrd	r2, r3, [r3]
 800529a:	ee10 0a10 	vmov	r0, s0
 800529e:	4629      	mov	r1, r5
 80052a0:	f7fa fff4 	bl	800028c <__adddf3>
 80052a4:	4baf      	ldr	r3, [pc, #700]	; (8005564 <atan+0x324>)
 80052a6:	2200      	movs	r2, #0
 80052a8:	f7fb fc36 	bl	8000b18 <__aeabi_dcmpgt>
 80052ac:	2800      	cmp	r0, #0
 80052ae:	d1e6      	bne.n	800527e <atan+0x3e>
 80052b0:	f04f 3aff 	mov.w	sl, #4294967295
 80052b4:	e02b      	b.n	800530e <atan+0xce>
 80052b6:	f000 f963 	bl	8005580 <fabs>
 80052ba:	4bab      	ldr	r3, [pc, #684]	; (8005568 <atan+0x328>)
 80052bc:	429e      	cmp	r6, r3
 80052be:	ec55 4b10 	vmov	r4, r5, d0
 80052c2:	f300 80bf 	bgt.w	8005444 <atan+0x204>
 80052c6:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 80052ca:	429e      	cmp	r6, r3
 80052cc:	f300 80a0 	bgt.w	8005410 <atan+0x1d0>
 80052d0:	ee10 2a10 	vmov	r2, s0
 80052d4:	ee10 0a10 	vmov	r0, s0
 80052d8:	462b      	mov	r3, r5
 80052da:	4629      	mov	r1, r5
 80052dc:	f7fa ffd6 	bl	800028c <__adddf3>
 80052e0:	4ba0      	ldr	r3, [pc, #640]	; (8005564 <atan+0x324>)
 80052e2:	2200      	movs	r2, #0
 80052e4:	f7fa ffd0 	bl	8000288 <__aeabi_dsub>
 80052e8:	2200      	movs	r2, #0
 80052ea:	4606      	mov	r6, r0
 80052ec:	460f      	mov	r7, r1
 80052ee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80052f2:	4620      	mov	r0, r4
 80052f4:	4629      	mov	r1, r5
 80052f6:	f7fa ffc9 	bl	800028c <__adddf3>
 80052fa:	4602      	mov	r2, r0
 80052fc:	460b      	mov	r3, r1
 80052fe:	4630      	mov	r0, r6
 8005300:	4639      	mov	r1, r7
 8005302:	f7fb faa3 	bl	800084c <__aeabi_ddiv>
 8005306:	f04f 0a00 	mov.w	sl, #0
 800530a:	4604      	mov	r4, r0
 800530c:	460d      	mov	r5, r1
 800530e:	4622      	mov	r2, r4
 8005310:	462b      	mov	r3, r5
 8005312:	4620      	mov	r0, r4
 8005314:	4629      	mov	r1, r5
 8005316:	f7fb f96f 	bl	80005f8 <__aeabi_dmul>
 800531a:	4602      	mov	r2, r0
 800531c:	460b      	mov	r3, r1
 800531e:	4680      	mov	r8, r0
 8005320:	4689      	mov	r9, r1
 8005322:	f7fb f969 	bl	80005f8 <__aeabi_dmul>
 8005326:	a374      	add	r3, pc, #464	; (adr r3, 80054f8 <atan+0x2b8>)
 8005328:	e9d3 2300 	ldrd	r2, r3, [r3]
 800532c:	4606      	mov	r6, r0
 800532e:	460f      	mov	r7, r1
 8005330:	f7fb f962 	bl	80005f8 <__aeabi_dmul>
 8005334:	a372      	add	r3, pc, #456	; (adr r3, 8005500 <atan+0x2c0>)
 8005336:	e9d3 2300 	ldrd	r2, r3, [r3]
 800533a:	f7fa ffa7 	bl	800028c <__adddf3>
 800533e:	4632      	mov	r2, r6
 8005340:	463b      	mov	r3, r7
 8005342:	f7fb f959 	bl	80005f8 <__aeabi_dmul>
 8005346:	a370      	add	r3, pc, #448	; (adr r3, 8005508 <atan+0x2c8>)
 8005348:	e9d3 2300 	ldrd	r2, r3, [r3]
 800534c:	f7fa ff9e 	bl	800028c <__adddf3>
 8005350:	4632      	mov	r2, r6
 8005352:	463b      	mov	r3, r7
 8005354:	f7fb f950 	bl	80005f8 <__aeabi_dmul>
 8005358:	a36d      	add	r3, pc, #436	; (adr r3, 8005510 <atan+0x2d0>)
 800535a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800535e:	f7fa ff95 	bl	800028c <__adddf3>
 8005362:	4632      	mov	r2, r6
 8005364:	463b      	mov	r3, r7
 8005366:	f7fb f947 	bl	80005f8 <__aeabi_dmul>
 800536a:	a36b      	add	r3, pc, #428	; (adr r3, 8005518 <atan+0x2d8>)
 800536c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005370:	f7fa ff8c 	bl	800028c <__adddf3>
 8005374:	4632      	mov	r2, r6
 8005376:	463b      	mov	r3, r7
 8005378:	f7fb f93e 	bl	80005f8 <__aeabi_dmul>
 800537c:	a368      	add	r3, pc, #416	; (adr r3, 8005520 <atan+0x2e0>)
 800537e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005382:	f7fa ff83 	bl	800028c <__adddf3>
 8005386:	4642      	mov	r2, r8
 8005388:	464b      	mov	r3, r9
 800538a:	f7fb f935 	bl	80005f8 <__aeabi_dmul>
 800538e:	a366      	add	r3, pc, #408	; (adr r3, 8005528 <atan+0x2e8>)
 8005390:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005394:	4680      	mov	r8, r0
 8005396:	4689      	mov	r9, r1
 8005398:	4630      	mov	r0, r6
 800539a:	4639      	mov	r1, r7
 800539c:	f7fb f92c 	bl	80005f8 <__aeabi_dmul>
 80053a0:	a363      	add	r3, pc, #396	; (adr r3, 8005530 <atan+0x2f0>)
 80053a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053a6:	f7fa ff6f 	bl	8000288 <__aeabi_dsub>
 80053aa:	4632      	mov	r2, r6
 80053ac:	463b      	mov	r3, r7
 80053ae:	f7fb f923 	bl	80005f8 <__aeabi_dmul>
 80053b2:	a361      	add	r3, pc, #388	; (adr r3, 8005538 <atan+0x2f8>)
 80053b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053b8:	f7fa ff66 	bl	8000288 <__aeabi_dsub>
 80053bc:	4632      	mov	r2, r6
 80053be:	463b      	mov	r3, r7
 80053c0:	f7fb f91a 	bl	80005f8 <__aeabi_dmul>
 80053c4:	a35e      	add	r3, pc, #376	; (adr r3, 8005540 <atan+0x300>)
 80053c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053ca:	f7fa ff5d 	bl	8000288 <__aeabi_dsub>
 80053ce:	4632      	mov	r2, r6
 80053d0:	463b      	mov	r3, r7
 80053d2:	f7fb f911 	bl	80005f8 <__aeabi_dmul>
 80053d6:	a35c      	add	r3, pc, #368	; (adr r3, 8005548 <atan+0x308>)
 80053d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053dc:	f7fa ff54 	bl	8000288 <__aeabi_dsub>
 80053e0:	4632      	mov	r2, r6
 80053e2:	463b      	mov	r3, r7
 80053e4:	f7fb f908 	bl	80005f8 <__aeabi_dmul>
 80053e8:	4602      	mov	r2, r0
 80053ea:	460b      	mov	r3, r1
 80053ec:	4640      	mov	r0, r8
 80053ee:	4649      	mov	r1, r9
 80053f0:	f7fa ff4c 	bl	800028c <__adddf3>
 80053f4:	4622      	mov	r2, r4
 80053f6:	462b      	mov	r3, r5
 80053f8:	f7fb f8fe 	bl	80005f8 <__aeabi_dmul>
 80053fc:	f1ba 3fff 	cmp.w	sl, #4294967295
 8005400:	4602      	mov	r2, r0
 8005402:	460b      	mov	r3, r1
 8005404:	d14b      	bne.n	800549e <atan+0x25e>
 8005406:	4620      	mov	r0, r4
 8005408:	4629      	mov	r1, r5
 800540a:	f7fa ff3d 	bl	8000288 <__aeabi_dsub>
 800540e:	e72c      	b.n	800526a <atan+0x2a>
 8005410:	ee10 0a10 	vmov	r0, s0
 8005414:	4b53      	ldr	r3, [pc, #332]	; (8005564 <atan+0x324>)
 8005416:	2200      	movs	r2, #0
 8005418:	4629      	mov	r1, r5
 800541a:	f7fa ff35 	bl	8000288 <__aeabi_dsub>
 800541e:	4b51      	ldr	r3, [pc, #324]	; (8005564 <atan+0x324>)
 8005420:	4606      	mov	r6, r0
 8005422:	460f      	mov	r7, r1
 8005424:	2200      	movs	r2, #0
 8005426:	4620      	mov	r0, r4
 8005428:	4629      	mov	r1, r5
 800542a:	f7fa ff2f 	bl	800028c <__adddf3>
 800542e:	4602      	mov	r2, r0
 8005430:	460b      	mov	r3, r1
 8005432:	4630      	mov	r0, r6
 8005434:	4639      	mov	r1, r7
 8005436:	f7fb fa09 	bl	800084c <__aeabi_ddiv>
 800543a:	f04f 0a01 	mov.w	sl, #1
 800543e:	4604      	mov	r4, r0
 8005440:	460d      	mov	r5, r1
 8005442:	e764      	b.n	800530e <atan+0xce>
 8005444:	4b49      	ldr	r3, [pc, #292]	; (800556c <atan+0x32c>)
 8005446:	429e      	cmp	r6, r3
 8005448:	da1d      	bge.n	8005486 <atan+0x246>
 800544a:	ee10 0a10 	vmov	r0, s0
 800544e:	4b48      	ldr	r3, [pc, #288]	; (8005570 <atan+0x330>)
 8005450:	2200      	movs	r2, #0
 8005452:	4629      	mov	r1, r5
 8005454:	f7fa ff18 	bl	8000288 <__aeabi_dsub>
 8005458:	4b45      	ldr	r3, [pc, #276]	; (8005570 <atan+0x330>)
 800545a:	4606      	mov	r6, r0
 800545c:	460f      	mov	r7, r1
 800545e:	2200      	movs	r2, #0
 8005460:	4620      	mov	r0, r4
 8005462:	4629      	mov	r1, r5
 8005464:	f7fb f8c8 	bl	80005f8 <__aeabi_dmul>
 8005468:	4b3e      	ldr	r3, [pc, #248]	; (8005564 <atan+0x324>)
 800546a:	2200      	movs	r2, #0
 800546c:	f7fa ff0e 	bl	800028c <__adddf3>
 8005470:	4602      	mov	r2, r0
 8005472:	460b      	mov	r3, r1
 8005474:	4630      	mov	r0, r6
 8005476:	4639      	mov	r1, r7
 8005478:	f7fb f9e8 	bl	800084c <__aeabi_ddiv>
 800547c:	f04f 0a02 	mov.w	sl, #2
 8005480:	4604      	mov	r4, r0
 8005482:	460d      	mov	r5, r1
 8005484:	e743      	b.n	800530e <atan+0xce>
 8005486:	462b      	mov	r3, r5
 8005488:	ee10 2a10 	vmov	r2, s0
 800548c:	4939      	ldr	r1, [pc, #228]	; (8005574 <atan+0x334>)
 800548e:	2000      	movs	r0, #0
 8005490:	f7fb f9dc 	bl	800084c <__aeabi_ddiv>
 8005494:	f04f 0a03 	mov.w	sl, #3
 8005498:	4604      	mov	r4, r0
 800549a:	460d      	mov	r5, r1
 800549c:	e737      	b.n	800530e <atan+0xce>
 800549e:	4b36      	ldr	r3, [pc, #216]	; (8005578 <atan+0x338>)
 80054a0:	4e36      	ldr	r6, [pc, #216]	; (800557c <atan+0x33c>)
 80054a2:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 80054a6:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 80054aa:	e9da 2300 	ldrd	r2, r3, [sl]
 80054ae:	f7fa feeb 	bl	8000288 <__aeabi_dsub>
 80054b2:	4622      	mov	r2, r4
 80054b4:	462b      	mov	r3, r5
 80054b6:	f7fa fee7 	bl	8000288 <__aeabi_dsub>
 80054ba:	4602      	mov	r2, r0
 80054bc:	460b      	mov	r3, r1
 80054be:	e9d6 0100 	ldrd	r0, r1, [r6]
 80054c2:	f7fa fee1 	bl	8000288 <__aeabi_dsub>
 80054c6:	f1bb 0f00 	cmp.w	fp, #0
 80054ca:	4604      	mov	r4, r0
 80054cc:	460d      	mov	r5, r1
 80054ce:	f6bf aed6 	bge.w	800527e <atan+0x3e>
 80054d2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80054d6:	461d      	mov	r5, r3
 80054d8:	e6d1      	b.n	800527e <atan+0x3e>
 80054da:	a51d      	add	r5, pc, #116	; (adr r5, 8005550 <atan+0x310>)
 80054dc:	e9d5 4500 	ldrd	r4, r5, [r5]
 80054e0:	e6cd      	b.n	800527e <atan+0x3e>
 80054e2:	bf00      	nop
 80054e4:	f3af 8000 	nop.w
 80054e8:	54442d18 	.word	0x54442d18
 80054ec:	bff921fb 	.word	0xbff921fb
 80054f0:	8800759c 	.word	0x8800759c
 80054f4:	7e37e43c 	.word	0x7e37e43c
 80054f8:	e322da11 	.word	0xe322da11
 80054fc:	3f90ad3a 	.word	0x3f90ad3a
 8005500:	24760deb 	.word	0x24760deb
 8005504:	3fa97b4b 	.word	0x3fa97b4b
 8005508:	a0d03d51 	.word	0xa0d03d51
 800550c:	3fb10d66 	.word	0x3fb10d66
 8005510:	c54c206e 	.word	0xc54c206e
 8005514:	3fb745cd 	.word	0x3fb745cd
 8005518:	920083ff 	.word	0x920083ff
 800551c:	3fc24924 	.word	0x3fc24924
 8005520:	5555550d 	.word	0x5555550d
 8005524:	3fd55555 	.word	0x3fd55555
 8005528:	2c6a6c2f 	.word	0x2c6a6c2f
 800552c:	bfa2b444 	.word	0xbfa2b444
 8005530:	52defd9a 	.word	0x52defd9a
 8005534:	3fadde2d 	.word	0x3fadde2d
 8005538:	af749a6d 	.word	0xaf749a6d
 800553c:	3fb3b0f2 	.word	0x3fb3b0f2
 8005540:	fe231671 	.word	0xfe231671
 8005544:	3fbc71c6 	.word	0x3fbc71c6
 8005548:	9998ebc4 	.word	0x9998ebc4
 800554c:	3fc99999 	.word	0x3fc99999
 8005550:	54442d18 	.word	0x54442d18
 8005554:	3ff921fb 	.word	0x3ff921fb
 8005558:	440fffff 	.word	0x440fffff
 800555c:	7ff00000 	.word	0x7ff00000
 8005560:	3fdbffff 	.word	0x3fdbffff
 8005564:	3ff00000 	.word	0x3ff00000
 8005568:	3ff2ffff 	.word	0x3ff2ffff
 800556c:	40038000 	.word	0x40038000
 8005570:	3ff80000 	.word	0x3ff80000
 8005574:	bff00000 	.word	0xbff00000
 8005578:	08005898 	.word	0x08005898
 800557c:	08005878 	.word	0x08005878

08005580 <fabs>:
 8005580:	ec51 0b10 	vmov	r0, r1, d0
 8005584:	ee10 2a10 	vmov	r2, s0
 8005588:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800558c:	ec43 2b10 	vmov	d0, r2, r3
 8005590:	4770      	bx	lr

08005592 <finite>:
 8005592:	b082      	sub	sp, #8
 8005594:	ed8d 0b00 	vstr	d0, [sp]
 8005598:	9801      	ldr	r0, [sp, #4]
 800559a:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 800559e:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 80055a2:	0fc0      	lsrs	r0, r0, #31
 80055a4:	b002      	add	sp, #8
 80055a6:	4770      	bx	lr

080055a8 <scalbn>:
 80055a8:	b570      	push	{r4, r5, r6, lr}
 80055aa:	ec55 4b10 	vmov	r4, r5, d0
 80055ae:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80055b2:	4606      	mov	r6, r0
 80055b4:	462b      	mov	r3, r5
 80055b6:	b99a      	cbnz	r2, 80055e0 <scalbn+0x38>
 80055b8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80055bc:	4323      	orrs	r3, r4
 80055be:	d036      	beq.n	800562e <scalbn+0x86>
 80055c0:	4b39      	ldr	r3, [pc, #228]	; (80056a8 <scalbn+0x100>)
 80055c2:	4629      	mov	r1, r5
 80055c4:	ee10 0a10 	vmov	r0, s0
 80055c8:	2200      	movs	r2, #0
 80055ca:	f7fb f815 	bl	80005f8 <__aeabi_dmul>
 80055ce:	4b37      	ldr	r3, [pc, #220]	; (80056ac <scalbn+0x104>)
 80055d0:	429e      	cmp	r6, r3
 80055d2:	4604      	mov	r4, r0
 80055d4:	460d      	mov	r5, r1
 80055d6:	da10      	bge.n	80055fa <scalbn+0x52>
 80055d8:	a32b      	add	r3, pc, #172	; (adr r3, 8005688 <scalbn+0xe0>)
 80055da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055de:	e03a      	b.n	8005656 <scalbn+0xae>
 80055e0:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80055e4:	428a      	cmp	r2, r1
 80055e6:	d10c      	bne.n	8005602 <scalbn+0x5a>
 80055e8:	ee10 2a10 	vmov	r2, s0
 80055ec:	4620      	mov	r0, r4
 80055ee:	4629      	mov	r1, r5
 80055f0:	f7fa fe4c 	bl	800028c <__adddf3>
 80055f4:	4604      	mov	r4, r0
 80055f6:	460d      	mov	r5, r1
 80055f8:	e019      	b.n	800562e <scalbn+0x86>
 80055fa:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80055fe:	460b      	mov	r3, r1
 8005600:	3a36      	subs	r2, #54	; 0x36
 8005602:	4432      	add	r2, r6
 8005604:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8005608:	428a      	cmp	r2, r1
 800560a:	dd08      	ble.n	800561e <scalbn+0x76>
 800560c:	2d00      	cmp	r5, #0
 800560e:	a120      	add	r1, pc, #128	; (adr r1, 8005690 <scalbn+0xe8>)
 8005610:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005614:	da1c      	bge.n	8005650 <scalbn+0xa8>
 8005616:	a120      	add	r1, pc, #128	; (adr r1, 8005698 <scalbn+0xf0>)
 8005618:	e9d1 0100 	ldrd	r0, r1, [r1]
 800561c:	e018      	b.n	8005650 <scalbn+0xa8>
 800561e:	2a00      	cmp	r2, #0
 8005620:	dd08      	ble.n	8005634 <scalbn+0x8c>
 8005622:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8005626:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800562a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800562e:	ec45 4b10 	vmov	d0, r4, r5
 8005632:	bd70      	pop	{r4, r5, r6, pc}
 8005634:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8005638:	da19      	bge.n	800566e <scalbn+0xc6>
 800563a:	f24c 3350 	movw	r3, #50000	; 0xc350
 800563e:	429e      	cmp	r6, r3
 8005640:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8005644:	dd0a      	ble.n	800565c <scalbn+0xb4>
 8005646:	a112      	add	r1, pc, #72	; (adr r1, 8005690 <scalbn+0xe8>)
 8005648:	e9d1 0100 	ldrd	r0, r1, [r1]
 800564c:	2b00      	cmp	r3, #0
 800564e:	d1e2      	bne.n	8005616 <scalbn+0x6e>
 8005650:	a30f      	add	r3, pc, #60	; (adr r3, 8005690 <scalbn+0xe8>)
 8005652:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005656:	f7fa ffcf 	bl	80005f8 <__aeabi_dmul>
 800565a:	e7cb      	b.n	80055f4 <scalbn+0x4c>
 800565c:	a10a      	add	r1, pc, #40	; (adr r1, 8005688 <scalbn+0xe0>)
 800565e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005662:	2b00      	cmp	r3, #0
 8005664:	d0b8      	beq.n	80055d8 <scalbn+0x30>
 8005666:	a10e      	add	r1, pc, #56	; (adr r1, 80056a0 <scalbn+0xf8>)
 8005668:	e9d1 0100 	ldrd	r0, r1, [r1]
 800566c:	e7b4      	b.n	80055d8 <scalbn+0x30>
 800566e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8005672:	3236      	adds	r2, #54	; 0x36
 8005674:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8005678:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 800567c:	4620      	mov	r0, r4
 800567e:	4b0c      	ldr	r3, [pc, #48]	; (80056b0 <scalbn+0x108>)
 8005680:	2200      	movs	r2, #0
 8005682:	e7e8      	b.n	8005656 <scalbn+0xae>
 8005684:	f3af 8000 	nop.w
 8005688:	c2f8f359 	.word	0xc2f8f359
 800568c:	01a56e1f 	.word	0x01a56e1f
 8005690:	8800759c 	.word	0x8800759c
 8005694:	7e37e43c 	.word	0x7e37e43c
 8005698:	8800759c 	.word	0x8800759c
 800569c:	fe37e43c 	.word	0xfe37e43c
 80056a0:	c2f8f359 	.word	0xc2f8f359
 80056a4:	81a56e1f 	.word	0x81a56e1f
 80056a8:	43500000 	.word	0x43500000
 80056ac:	ffff3cb0 	.word	0xffff3cb0
 80056b0:	3c900000 	.word	0x3c900000

080056b4 <_init>:
 80056b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056b6:	bf00      	nop
 80056b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80056ba:	bc08      	pop	{r3}
 80056bc:	469e      	mov	lr, r3
 80056be:	4770      	bx	lr

080056c0 <_fini>:
 80056c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056c2:	bf00      	nop
 80056c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80056c6:	bc08      	pop	{r3}
 80056c8:	469e      	mov	lr, r3
 80056ca:	4770      	bx	lr
